<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[小程序学习感悟]]></title>
    <url>%2F2018%2F06%2F21%2Fthoughts-about-mp-learning%2F</url>
    <content type="text"><![CDATA[2017年1月，微信正式发布小程序，小程序逐渐进入公众的视野。不温不火的几个月，随着小程序的生态不断的扩大完善，用户数量呈爆炸式的增长，越来越多的人投入小程序的怀抱。 当时的我，正值大二，小菜鸟一枚。不知道什么是前端，什么是后端，更别提服务器了，所掌握的不过仅仅是常规的课堂知识。没有做过实际的项目，只会用Java写一个Hello World。心里其实是想去学一些东西，但却往往是没有方向，不知道从何下手。 于是乎我便自己摸索，大二的寒假，我抽时间将数据库方面的知识提前学习了一下，并在大二下学期的课程设计中运用，这应该算是我第一次实际的项目经历了。大二下学期是我学东西学得最多的一个学期，除了上课或者带训，其他时间我几乎都在学习专业知识。HTML，JavaScript，CSS，Android，JSP等等。 很多人会有这样的感觉，学的时候一脸懵逼，不知道学的东西能用来干嘛，不知道如何应用。但是其实知识这种东西是需要慢慢积累的，等到积累到一定的程度，便融汇贯通了。 微信的每次更新我都在关注，直到微信小程序的上线，微信的生态及其宏大的战略观，微信的每一步棋下的是如此之妙。在我打好了一定基础之后，大二的暑假我便开始了小程序的学习。买了本小程序的教程书，结合微信官方给的文档进行学习。发现小程序上手真的很快。你只需要掌握一些基本的前台网页相关的知识，就可以制作出一个简单的小程序。当然了，如果要进行前后台的交互，还需要服务器以及数据库相关知识。 我的第一个小程序是一个天气查询的小程序，使用的是百度api的天气数据接口（现在接口应该失效了）。说实话，作用不是很大，用户数也是寥寥无几。但是对我来说确实是一个小小的锻炼，理解了小程序的工作原理及其运行机制。之后，我又制作了一个音乐播放的小程序，遗憾的是，在用户数快到达5w的时候，微信停止了所有个体单位开发的音乐类小程序，可能是因为版权原因，也无法再打开使用。 但是在经过两个小程序的实操后，对小程序的开发流程已经是了如指掌。这学期在不到两天的时间里面，开发了体测计算器以及校徽头像的小程序，用户数现在也较为可观。 就学习小程序开发利弊来说，小程序的迭代更新速度比较快，可能你的小程序昨天还可以用，第二天就崩了。因为微信这边要从用户体验的角度考虑，必须不定期的对小程序的API进行更新，因此代码也得进行相应的改变。但总的来说，小程序还是非常值得大家去学习，不仅能锻炼到自己的编程能力，如果小程序的用户数大的话，也是对自己的一种鼓励，还可以获得一定的广告收入。]]></content>
      <categories>
        <category>小程序</category>
      </categories>
      <tags>
        <tag>随笔</tag>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[科学上网]]></title>
    <url>%2F2018%2F06%2F16%2Fscience-fuck-net%2F</url>
    <content type="text"><![CDATA[免费科学上网，超级简单 众所周知，我们国家为了网络安全以及营造一个良好的网络环境，对某些网络做了一些安全限制。很多人不理解，但就中国现如今的国情，这确实是一个正确的举措。 对于我们这个专业来说，如果遇到问题无法在国内的网站上找到解决方案，这时候需要去国外的网站上进行一些资料的查找，例如 Google 学术、维基百科、Stack Overflow 等等。甚至我们写论文的时候，也会需要去参考一些外文资料。因此，科学上网成为一种生存的本领。 另外，还可以使用一些国外比较优秀的应用，例如使用 Youtube 用来学学英语、Google 套件方便自己的工作，Instagram 或者 Twitter 来填补一下在外网社交方面的空缺。 那今天就教教大家如何在 Android 手机以及 Windows 系统中进行科学上网。 snap vpn这是一个手机端的vpn应用，傻瓜式操作，一键连接。有多条免费的线路可以选择，不限流量，不限时间，但用到一定流量会进行限速。YouTube 视频最快可以达到 5M/s，手机上刷刷 Instagram、Twitter 或者 Youtube 完全不成问题，能够解决大部分人手机端的需求。公众号后台回复 Snap 可以获得下载链接。 Shadowsocks一个电脑端的服务器代理，很多人都是通过买外网服务器，然后搭建 ss 或者 ssr。这里教大家使用免费的服务器。首先下载 Shadowsocks 的客户端，客户端不需要安装，下载好就可以使用。打开客户端，屏幕右下方任务栏出现一个灰色的小飞机图标。 然后在浏览器输入网址：https://get.ss8.fun/ ，打开下面的网页。 任意点击一张图片，会弹出服务器的二维码。 右击小飞机图标，选择服务器 —&gt; 扫描屏幕上的二维码。 扫描完后，弹出弹框，直接点击确定。 最后右击小飞机，启用系统代理，这时候小飞机图标变成亮白。然后在浏览器地址栏中输入一下 Google 的地址：https://www.google.com/ ，发现成功打开 Google 的首页，也可以进行搜索。 Youtube 也能上去，速度还不错，看高清的也不卡。 后台回复小飞机下载客户端。 最后祝大家上网愉快]]></content>
      <categories>
        <category>销率工具</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>科学上网</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[记录一次维权经历]]></title>
    <url>%2F2018%2F06%2F12%2Fa-defend-note%2F</url>
    <content type="text"><![CDATA[某客来牛排店出售过期啤酒，下面是维权过程 前不久，和两个朋友一起去学校附近山姆会员店的某客来牛排店吃牛排。点了三份牛排，三瓶百威啤酒。打开啤酒时，啤酒的气冒的有点足，但是喝之前并没有摇晃。喝了两口，觉得有点不太对劲，便看了看瓶子标签的生产日期。一看傻眼了，生产日期2017年7月，保质期6个月，足足过期5个月。 我和朋友们说，咱们这顿饭应该可以免单了。首先拿相机拍下了啤酒瓶上的标签作为证据，然后上网查了一下相关法律条款，商家需要十倍赔偿。一瓶百威十块钱，我们点了三瓶，因此按照法律规定，商家需要赔付我们300元的赔偿金。 很巧的是，有位朋友的姐姐是一名律师，还特地打电话咨询了一下，同样给出的答复是要求十倍的赔偿，并且可以拨打消费者协会电话12315进行举报。之后，经理过来和协商，我们便顺理成章的免费吃了一次牛排。 大家出去吃东西或者买东西时一定要查看生产日期。如果出现这种情况，也要学会维护自己的合法权益。不要让别人认为学生是好欺负的，惹谁也不要惹知识分子。 突然觉得，懂点法律知识真的很重要]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
        <tag>维权</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用 reveal.js 制作网页 ppt]]></title>
    <url>%2F2018%2F06%2F06%2Frevealjs-make-ppt%2F</url>
    <content type="text"><![CDATA[今天教大家使用reveal.js，制作一个简洁优雅的网页ppt。在这之前，你需要一些基本的HTML以及CSS的技能基础。 1、准备工作 下载插件，插件下载地址：https://github.com/hakimel/reveal.js 解压文件，将相关的js以及css引入html界面 1234567891011121314151617181920&lt;!doctype html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"&gt; &lt;title&gt;reveal.js&lt;/title&gt; &lt;!-- reveal基本的css --&gt; &lt;link rel="stylesheet" href="css/reveal.css"&gt; &lt;!-- 引入黑色主题 --&gt; &lt;link rel="stylesheet" href="css/theme/black.css"&gt; &lt;!-- 用于显示代码高亮 --&gt; &lt;link rel="stylesheet" href="lib/css/zenburn.css"&gt; &lt;/head&gt; &lt;body&gt; &lt;!-- reveal基本的js，里面集成了一些转场动画 --&gt; &lt;script src="js/reveal.js"&gt;&lt;/script&gt; &lt;/body&gt;&lt;/html&gt; 2、制作第一页ppt在html页面中创建两个div块级元素，注意，class类名必须分别为reveal和slides。在第二层div中创建section标签，每一个&lt;section&gt;块都生成一张单独ppt。最后，在js代码中对页面进行初始化。 123456789101112131415161718192021&lt;!-- 这里省略引入css代码，记得加上 --&gt;&lt;div class="reveal"&gt; &lt;!-- 所有的幻灯片都放在一个类为slides的div中 --&gt; &lt;div class="slides"&gt; &lt;!-- 每一个&lt;section&gt;块都生成一张单独ppt --&gt; &lt;section&gt; &lt;!-- ppt标题 --&gt; &lt;h1&gt;How to use jQuery&lt;/h1&gt; &lt;!-- ppt正文 --&gt; &lt;p&gt; &lt;small&gt;Presented by &lt;a href=""&gt;MayanDev&lt;/a&gt;&lt;/small&gt; &lt;/p&gt; &lt;/section&gt; &lt;/div&gt;&lt;/div&gt;&lt;!-- 这里省略引入js代码，记得加上 --&gt;&lt;script type="text/javascript"&gt; // 初始化页面 Reveal.initialize();&lt;/script&gt; 保存，用浏览器打开，显示效果如下图。（F全屏，ESC退出） 3、fragment类这里再第一页的基础上再添加一个section，其中fragment类表示分条显示，当键盘按下?键时触发。section中还可以包含section，放映的方式为向下放映。通过data-background属性可以设置幻灯片的背景颜色或者图片，甚至可以使用视频当作背景。12345678910111213141516171819&lt;!-- 这里省略第一页及其他内容 --&gt;&lt;!-- 第二页 --&gt;&lt;section&gt; &lt;!-- section中还可以包含section，放映的方式为向下放映 --&gt; &lt;section&gt; &lt;h2&gt;Hello There&lt;/h2&gt; &lt;!-- fragment类表示分条显示，当键盘按下?键时触发 --&gt; &lt;p class="fragment"&gt;Today, we are gonna talk about the jQuery.&lt;/p&gt; &lt;!-- 添加一个图片链接 --&gt; &lt;a class="fragment" href="http://jquery.com/download/"&gt;&lt;img width="240" height="180" data-src="images/jquery_logo.gif" alt="jquery_logo"&gt;&lt;/a&gt; &lt;/section&gt; &lt;!-- 通过data-background熟悉可以设置幻灯片的背景颜色或者图片，甚至可以使用视频当作背景 --&gt; &lt;section data-background="#dddddd"&gt; &lt;h2&gt;But then, Believe me...&lt;/h2&gt; &lt;p class="fragment"&gt;You need some HTML,CSS and JavaScript skills to be able to use jQuery effectively. &lt;/section&gt;&lt;/section&gt; 保存一下，看看效果如下图。 4、页面的配置页面的配置是通过js完成的。 controls：是否显示左下角的控制键，默认为true progress：是否显示进度条，默认为true center：是否在居中显示，默认为true transition：为页之间的切换动画，默认为slide，即水平滑动，这里我们改成zoom缩放看看效果 12345678910&lt;script type="text/javascript"&gt; // 初始化页面 Reveal.initialize(&#123; controls: true, // 是否显示左下角的控制键，默认为true progress: true, // 是否显示进度条，默认为true center: true, // 是否在中间显示，默认为true // transition为页之间的切换动画，默认为slide，即水平滑动，这里我们改成zoom缩放试试 transition: 'zoom', // none/fade/slide(default)/convex/concave/zoom&#125;);&lt;/script&gt; 保存，用浏览器打开，效果如下。 5、小结以上就是本次教程的全部内容，如果认为默认的ppt样式不好看，你可以自己编写css代码对样式进行修改。关注公众号「嗜码」，后台回复reveal可以下载插件。另外，我自己做了一个关于jQuery介绍的ppt，也放在里面了，大家也可以去下载。 Be creative, build your own.]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>js</tag>
        <tag>reveal.js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python 学习路线分享]]></title>
    <url>%2F2018%2F05%2F28%2Fpython-learning%2F</url>
    <content type="text"><![CDATA[有位大一的学弟问我 python 如何去学，虽然我了解的也不深，但还是耐心的答复了他。 学弟，听说你想学 Python，不知道你现在的水平怎么样，首先值得肯定的是你有一颗爱学习、上进的心。比我大一的时候好多了，整天浑浑噩噩，直到大二才如梦方醒。作为一名大三 “老油条”，专业技术现在也算得上是过硬，对 Python 也有一定了解，我这里给你介绍一下学习的大致方向，希望可以少走点弯路。 像我们这个专业，一直期望着有人带你是不太可能的，自己要有自学的能力。包括分析和解决问题的能力，不要一碰到问题就问这问那，不会的首先独立思考，然后百度，百分之八十以上的问题都可以通过百度或者谷歌解决。 虽然不知道你 Python 学到了什么程度，如果是初学者，建议你首先在网上自学，不管是看视频还是看网页教程（这里推荐两个学习网站：慕课网以及菜鸟教程），把 Python 的基本语法弄懂，然后可以尝试着自己编写一些小程序甚至是小游戏。 如果这些你已经学会，那么就是 Python 进阶了。进阶这方面就我了解，涉及到 Python 的面向对象以及机器学习，你可以尝试着去网上购买一些书籍进行深入学习。面向对象涉及到设计模式，因此可以暂时不用理解，等你学了 Java 的面向对象编程就会慢慢领悟。 就目前而言，Python 算得上是机器学习最好的语言了。GitHub 有许多优秀的开源的机器学习的库，以及一些神经网络的算法，都可以直接拿来用。 虽然说，一些高级的东西可能会一时间难以接受理解，也很难应用。记住这句话：水到渠成。等你慢慢学习到了一定的高度，知识面开拓到了一定的范围，自然而然的便将这些东西融会贯通，灵活运用了。 为学习花点钱要舍得，专业书籍尽量去网上购买，避免在图书馆借。图书馆的书常年不更新，有些知识早就过时了，另外，买的书你也会更珍惜，更加促使你去阅读。]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>学习路线</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[App 推荐 | 一个木函]]></title>
    <url>%2F2018%2F05%2F15%2Fapp-one-woodhan%2F</url>
    <content type="text"><![CDATA[今天推荐一款工具集应用，《一个木函》。应用功能强大，集成了几十种工具，而软件的体积只有 1M，十分轻巧，可以让我们卸载掉手机上不怎么使用但却必须要安装的 App。下面就一些常用的功能进行介绍。 取色器这个比较适合设计人员使用，当在编写前端 css 代码或者使用 photoshop 时，这个功能就派上用场了。通过点击拖动指示器，显示颜色的十六进制代码。 应用管理嗯，可以和软件管家说拜拜了。这个功能除了普通的卸载以及清除数据之外，还可以提取安装程序、应用图标、冻结程序等等。配套功能还有大文件清理，空文件夹清理等等。另外，如果要对系统自带应用进行管理，需要 root 权限。 带壳截图想让自己的截图有 b 格，可以试试这个。一般在应用市场上，一些 app 的介绍中使用的比较多。 二维码生成可以根据输入的内容或者连接生成二维码进行跳转。长按扫描试一试👇👇 尺子这个不经意间可能会用到，记得有这个功能就好。 一个木译调用的 Google 翻译的接口，应该是机翻里面最贴近实际的翻译了，支持 20 多种语言，功能挺强大的。但是如果是查单词，建议还是下一个词典 app。 加解密工具一些加解密的工具，例如 MD5 加密，或者摩斯密码的翻译等等。有兴趣的了解一下。 表情制作丰富的表情包，任意添加文字，同时可以修改文字颜色以及调整文字位置。妈妈再也不用担心我斗图了。 以上所介绍的只是软件的冰山一角，更多功能等着大家探索。关注公众号，后台回复一个木函下载最新版应用。]]></content>
      <categories>
        <category>效率工具</category>
      </categories>
      <tags>
        <tag>效率</tag>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[App推荐 | Google Tasks]]></title>
    <url>%2F2018%2F04%2F29%2Fapp-google-tasks%2F</url>
    <content type="text"><![CDATA[前不久，Google推出了一款移动任务管理应用Google Task，在使用2天后，写一下使用感受，并与Google同类产品Keep进行一个对比。 首先欣赏几张官方的App截图 然后来看一下官方的介绍： 翻译：通过Google Tasks移动应用程序完成更多任务。随时随地管理，捕捉和编辑您的任务，以及在所有设备上同步的待办事项。与Gmail和Google日历的集成可帮助您更快地完成任务。 经过两天的使用，这里简单的说一下感受。首先就界面来说，Tasks采用Google一直提倡的极简风格。打开App，纯白的界面，加上一颗蓝色的圆腰按钮的点缀，整体的页面显得极其的简约。 熟悉Google的童鞋应该会发现，这个App的设计风格与之前Google一直所倡导的Material Design（以下简称为MD）风格还是有一些不一样。的确，在Android9.0（Android P）还没发布预览版之前，Google一直所采用的是一种扁平化的质感设计。 光效、表面质感、运动感是MD的核心。可以看到，这种风格大部分由矩形卡片组成，同时配色突出鲜明。但是在新出的Android P中，Google改进了这种设计，称之为MD2.0。其中大量地采用圆角设计，不论是通知面板、设置还是应用图标，全部使用圆形设计。 以后会更具详细的讲解Android P与之前Android版本的区别，这里便不再做赘述，下面继续介绍Tasks的功能。 首先点击醒目的蓝色按钮，建立一个新的任务。例如：Spring大作业。点击加号日历图标可以设置截止日期，这里设置4月30号完成，并点击save。 可以到任务详细页面里增添子任务，即不同时间段的该完成的任务，然后给各个子任务设置不同的时间期限，App就将会在不同的时间对你进行相应的提示，每天应该完成哪些任务。 以上就是Tasks的主要功能，操作十分的简便，用起来很流畅，App本身的体积只有不到5M，因此不会占用很大的内存空间。而且Google自家的应用，优化做的可是相当的好，不用担心会发生卡顿的现象，也不会一直留驻后台。（PS：与Google全家桶一同食用效果更佳） Google还有一款与Tasks功能相似的App，名字叫做Keep。但是这款App不仅仅针对任务，还包括一些灵光一现的想法，可以立即使用Keep记录下来。这个应用有时间还会单独给大家介绍。]]></content>
      <categories>
        <category>效率工具</category>
      </categories>
      <tags>
        <tag>效率</tag>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Google I/O 2018 总结]]></title>
    <url>%2F2018%2F04%2F29%2Fgoogle-io-content%2F</url>
    <content type="text"><![CDATA[Google I/O 2018大会于北京时间5月9日凌晨1点，在美国山景城Shoreline Amphitheatre(圆形剧场)举办。看了一下录播，字幕延迟，全程靠听，下面对上午的主会进行一个小结。（介绍按照时间大会顺序） Gboard（谷歌键盘） 新增莫斯电码的输入，主要方便于的残障人士的快速交流 Gmail （谷歌邮箱） 使用Material Design2，全新邮箱界面 邮箱输入自动补全 Photos （谷歌相册） AI自动整理图片 AI自动美化图片：增长曝光度，调节亮度等等 自动发送 文件图片可直接转PDF 老旧黑白照片可自动填充颜色 Assistant （谷歌助手） 6种不同的声音 持续对话，不用一直Hey，Google 加入13000儿童故事 AI智能导航 Android P （安卓9.0） 新增Dashboard，用于对App的使用进行时间管理 取消三段虚拟按键，使用类似与ios的手势操作 AI电池监控，减少30%的cpu唤醒，更省电 UI变化，状态栏、音量面板、通知栏、设置界面等 WAYMO （谷歌无人汽车） AI自动驾驶，适应各种路况 最后，很明显：All in AI.]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[小程序学习路线]]></title>
    <url>%2F2018%2F04%2F24%2Fmp-learning%2F</url>
    <content type="text"><![CDATA[之前有学弟问到我小程序的学习路线，这里整理一下分享出来 小程序小程序的本质也是一个网页，只是它是通过微信内核来解析并加载渲染页面。如果只做静态的小程序的话，有html以及js的知识足够了，例如一些工具类的小程序，你只需要能够用js写出逻辑以及一些页面的css样式即可，例如天气类或者计算器之类的小程序。 所以可以先学习前端方面的知识，你应该大部分都掌握了。但还是要说的是，js一定要深入去了解学习，因为东西挺多而且杂，需要静下心来慢慢地学。 小程序进阶之后便是进阶的学习，你需要掌握一门服务器语言，php，c#，jsp（Java web）都行，学会之后，你可以干的事情就多了，小程序就不仅仅是一个静态的页面了，你可以进行前后台的交互，不过小程序不支持本地的服务器调试，因此你需要去购买云服务器，这部分博客上面都有大量的教程。动态的小程序就可以做出来，比如做一个表白墙。。。。🐕🐕🐕 其实微信开发最早的是微信公众号的开发，看似挺复杂，但是如果理解了，也就那么回事。举个简单的例子：移动公司的公众号里面有个查询流量的菜单，点击后返回消息显示当前流量余额。其中的过程就是，点击菜单，然后触发了一个事件，其实就是发生一个请求到后台的服务器，这个请求中的参数就是手机号，服务器接收到请求，通过手机号查询到相关的信息。因此，所谓的公众号开发其实就是服务器端的开发，属于后台，一般使用php或者Java web。另外还有一个就是微信内网页开发，其实也是和小程序差不多，这里自己去了解吧。 推荐书单至于说书单，倒是没有特别的相关书要推荐，教程书真的是一大堆，小程序看文档就好了，后台相关的书可以买几本。一般在当当上买，买的时候看一下同类书的销量排行，选前几名的买就行了😁😁。]]></content>
      <categories>
        <category>小程序</category>
      </categories>
      <tags>
        <tag>小程序</tag>
        <tag>学习路线</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[公众号关联小程序教程]]></title>
    <url>%2F2018%2F04%2F20%2Fofficial-account-link-mp%2F</url>
    <content type="text"><![CDATA[进入公众号后台，点击小程序管理 点击添加 选择关联小程序，然后扫描二维码验证 输入对应的APPID（wxfbe916702aa06f6a），然后点击发送邀请。 小程序的开发者会确认邀请，这时候公众号与小程序的关联就完成了。 ps:欢迎关联cool体测小程序（appid：wxfbe916702aa06f6a）]]></content>
      <categories>
        <category>小程序</category>
      </categories>
      <tags>
        <tag>小程序</tag>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Oracle11g 64位安装教程以及安装过程中可能遇到的问题]]></title>
    <url>%2F2018%2F03%2F30%2Foracle-setup-tutorial%2F</url>
    <content type="text"><![CDATA[1、安装准备下载官网的oracle安装程序，有两个压缩包。 选中这两个压缩包，点击解压到当前文件夹，两个压缩包同时解压成一个名叫database的文件夹。这里特别注意，两个压缩包要同时选中，解压成一个文件，不然可能会安装失败。 解压好后出现一个database文件夹，大小为2.13GB。 点进去，找到setup.exe，右击，以管理员身份运行，开始安装。 这里需要检查，等待一会。 检查之后如果出现环境不满足最低要求的警告（如下图） 先取消安装，我们需要修改文件database---&gt;stage---&gt;cvu---&gt;cvu_prereq.xml中的内容。右键用编辑器打开，在此处加上如下代码。 12345678&lt;OPERATING_SYSTEM RELEASE="6.2"&gt; &lt;VERSION VALUE="3"/&gt; &lt;ARCHITECTURE VALUE="64-bit"/&gt; &lt;NAME VALUE="Windows 10"/&gt; &lt;ENV_VAR_LIST&gt; &lt;ENV_VAR NAME="PATH" MAX_LENGTH="1023" /&gt; &lt;/ENV_VAR_LIST&gt;&lt;/OPERATING_SYSTEM&gt; 2、开始安装将接收安全更新的选项取消，可选操作。点击下一步 可以无视警告，点击是。 选择第一项，创建和配置数据库，并点击下一步。 修改安装目录，千万注意，这里的目录不能出现中文字符。其他的选项默认就行，另外还需要输入管理员的密码。尽量设置简单一点的，容易记住。密码一定要记住!!! 出现密码不符合标准不要紧，这是由于oracl为了安全，这里我们直接继续。然后系统会检查条件。如果失败了，点击全部忽略，不影响后面的安装。 点击完成就开始安装了 后面的都直接默认就行了，一定要记住输入的密码。 3.检查是否安装成功。在开始菜单里找到Oracle文件夹，然后点击这个orcl 会弹出一个网页，需要输入账号密码，以管理员身份登录，账号为sys或者system，密码是自己设置的，如果忘了可以通过命令重置。 登录后进入控制台，如果界面是这样子，就是成功了。 4.安装过程中可能遇到的问题 安装到42%的时候出现未找到文件wfmlrsvcapp.ear报错。 12345解决办法：点击中止安装，然后将win64_11gR2_database_2of2文件database/stage/Components/下的几个文件copy到之前解压的database文件夹中相同目录下，然后重新安装，不用删任何东西，重新安装会覆盖之前的安装。 安装到98%时出现注册OCX时出现OLE初始化错误或OCX加载错误。 解决办法：点击中止安装，错误原因是安装路径中有中文字符，重新安装，修改一下路径就行了。 以上就是Oracle11g 64位的安装教程，欢迎各位对问题进行补充。]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>Oracle</tag>
        <tag>安装教程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[程序题智能批改系统需求分析]]></title>
    <url>%2F2018%2F03%2F17%2Fpoj-analyse%2F</url>
    <content type="text"><![CDATA[1 需求分析1.1 系统简介在计算机教育领域，尤其是程序设计类课程，教学内容基本上是理论与实践相结合。对于的传统的手动批改源代码和程序的方式通常会耗费教师巨大的精力，也难以保证结果公正性，因此程序题自动批改系统备受关注。目前应用较为广泛的的程序自动批改系统是ACM/ICMP的Online Judge程序批改系统，但是在多数的程序设计类课程中，ACM/ICMP并不适用。ACM/ICMP系统只能够处理标准的输入输出程序，并且给出对或错两种结果，无法像手工批改一样，对各方面进行打分，同时给出具体的分数以及错误原因。 因此，设计一个程序题智能批改系统，采用提交-反馈的模式，让学生在离开老师的情况下，可以自己编写程序并交给系统进行批改，同时教师可在后台查看学生的学习情况，并予以反馈。这不仅提高了学生编写程序的积极性，也驱动学生去深入学习编程，大大减轻了教师的工作量。 1.2 需求说明程序题智能批改系统可用于让学生在没有老师的监督下，独立编写程序并通过系统提交给后台。教师在后台可查看学生的学习情况，并针对不同学生的答题情况予以反馈。主要需求如下： 学生可以在线编程，并支持本地调试 学生可以将编写好的代码提交到服务器端，并查询自己的成绩 教师可以题库进行管理，例如：增加题目、修改答案等等 教师可以对学生成绩进行管理，并可查看成绩分析报告 教师可以在线批改学生代码，并予以反馈 管理员可以对学生及教师信息进行管理 1.3 用例分析1.3.1 用例与角色学生： 查询相关个人基本信息 查询成绩 在线编程答题 提交代码 测试代码 下载代码 问题反馈 教师： 题库管理 查询个人基本信息 在线批改 生成成绩分析报告 代码安全检测 成绩管理 管理员： 管理学生基本信息 管理教师基本信息 1.3.2 用例图 1.3.3 用例描述 用例名称：成绩查询 描述：学生查询个人成绩信息 标识符：UC01 角色：学生 前置条件：学生成功登录系统 主事件流： 1.学生点击个人信息连接，跳转到个人信息页面 2.点击题目，查询所得成绩 3.用例结束 其他事件流： 1.学生未答题，未显示分数 用例名称：在线编程答题 描述：学生进行在线编程答题 标识符：UC02 角色：学生 前置条件：学生成功登录系统并点击题目 主事件流： 1.学生选择题目类型 2.学生点击题目链接 3.跳转到程序编写界面进行编程 4.下载代码进行本地调试 5.用例结束 其他事件流： 后置事件流：学生点击“保存”按钮 用例名称：测试代码 描述：学生对编写好的代码进行测试 标识符：UC03 角色：学生 前置条件：学生编写好代码并点击“测试”按钮 主事件流：1.学生编写代码 2.学生点击“测试按钮” 3.系统检查代码的安全性 4.返回测试结果 5.用例结束 其他事件流： 1.学生关闭窗口，提示“保存代码” 2.学生编写的代码运行异常，警告“疑似病毒” 后置事件流：学生点击“提交”按钮 用例名称：提交代码 描述：学生对测试好的代码进行提交 标识符：UC04 角色：学生 前置条件：学生编写好代码并点击“提交”按钮 主事件流：1.学生编写代码 2.代码通过安全测试 3.学生点击“提交按钮” 4.用例结束 其他事件流： 1.学生代码安全测试未通过，提交按钮禁用 后置事件流：无 用例名称：下载代码 描述：学生下载教师提供的参考代码 标识符：UC05 角色：学生 前置条件：教师上传参考代码 主事件流：1.学生选择题目 2.点击参考代码链接进行下载 3.用例结束 其他事件流：无 后置事件流：无 用例名称：问题反馈 描述：学生对题目的疑惑在留言中反馈 标识符：UC06 角色：学生 前置条件：无 主事件流：1.学生输入问题内容 2.学生点击提交按钮 3.用例结束 其他事件流： 1.输入的内容为空，提示“输入的内容为空” 后置事件流： 1.管理员审核通过，反馈显示 用例名称：题库管理 描述：教师对编程题目进行管理 标识符：UC07 角色：教师 前置条件：教师成功登录系统 主事件流：1.教师点击题库管理链接 2.教师可以增加或批量导入题目，并设置答案及上传参考代码 3.教师可以批量删除题目 4.教师可以修改题目信息，可以修改题目答案 5.教师可以对所有题目进行条件查询或者模糊查询 6.教师点击保存按钮，完成对题库的管理操作 7.用例结束 其他事件流： 1.关闭页面时，教师批量导入未点击保存按钮，提醒用户保存 2.查询条件为空，查询所有题目 后置事件流： 1.所有增加或者修改的题目信息均保存到数据库中，学生看到新的题目信息 用例名称：在线批改 描述：教师在线对学生编写的代码进行批改并予以评价反馈 标识符：UC08 角色：教师 前置条件：教师成功登录系统 主事件流：1.教师点击在线批改按钮，系统自动打分。 2.教师可以点击查看某个学生的具体答题情况，并予以评价 3.教师可对学生所提疑问进行在线解答 4.教师可以导出学生所写的代码 5.用例结束 其他事件流： 1.代码安全检测未通过，程序不予以执行 后置事件流： 1.题目的得分信息保存到数据库中，学生可看到自己的成绩 用例名称：成绩管理 描述：教师对学生的成绩信息进行管理 标识符：UC09 角色：教师 前置条件：教师成功登录系统 主事件流：1.教师点击学生成绩信息管理按钮 2.教师可以修改学生的成绩信息 3.教师可以删除学生的成绩信息 4.教师可以按条件查询学生的成绩信息 5.教师点击保存，完成对学生信息管理的操作 6.用例结束 其他事件流： 1.查询条件为空，查询所有的学生信息 后置事件流： 1.修改的成绩信息保存到数据库中，学生可看到自己修改后的成绩 用例名称：生成成绩分析报告 描述：生成学生的成绩分析报告 标识符：UC10 角色：教师 前置条件：教师成功登录系统，点击了成绩管理按钮 主事件流：1.教师点击学生成绩信息管理按钮 2.教师点击了生成学生成绩报告 3.教师可以按不同条件对成绩进行统计分析 4.教师可以下载生成的分析报告 5.用例结束 其他事件流：无 后置事件流：无 用例名称：学生信息管理 描述：管理员对学生信息进行管理操作 标识符：UC11 角色：系统管理员 前置条件：管理员成功登录系统，并点击学生信息管理 主事件流：1.管理员点击学生信息管理 2.管理员可以批量导入学生信息 3.管理员可以删除学生信息 4.管理员可以修改学生信息 5.管理员可以进行条件查询或者模糊查询 6.管理员点击保存完成对学生信息管理的操作 7.用例结束 其他事件流：1.点击保存，学生信息为空或者不符合要求，提示“学生信息不符合要求” 后置事件流：1.对于新增的学生，学生可以通过账号密码登录系统 用例名称：教师信息管理 描述：管理员对教师信息进行管理操作 标识符：UC12 角色：系统管理员 前置条件：管理员成功登录系统，并点击教师信息管理 主事件流：1.管理员点击教师信息管理 2.管理员可以批量导入教师信息 3.管理员可以删除教师信息 4.管理员可以修改教师信息 5.管理员可以进行条件查询或者模糊查询 6.管理员点击保存完成对教师信息管理的操作 7.用例结束 其他事件流：1.点击保存，教师信息为空或者不符合要求，提示“学生信息不符合要求” 后置事件流：1.对于新增的教师，教师可以通过账号密码登录系统 2 系统设计2.1 实体关系建模 &amp;实体关系模型直接从现实世界中抽象出实体类型和实体间联系，建立实体关系模型是系统设计的第一步。就本系统而言，「学生」(Student)、「教师」(Teacher)、「管理员」(Admin)、「问题」(Question)、「提交」(Submission)、「通知」(Notification)、「笔记」(Note)、「附件」(Enclosure)、「成绩」(Grade)以及「留言」(Message)都是经常出现的名词，它们也都是从需求描述中识别出来的「实体」。通过建立实体之间相应的关系，从而得到实体关系模型，以完成设计需求。 程序题智能批改系统是一个小型的在线编程评判系统，系统共11个实体类型，下图显示了它们之间的所有模型和关系。 2.2 数据库设计本系统数据库使用MySQL5.0，一种关系数据库管理系统，数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，增加了速度并提高了灵活性。MySQL所使用的 SQL 语言是用于访问数据库的最常用标准化语言。本系统数据库中数据存放于10张表中，所有“id”键字段都是Java类型的Integer。数据库结构图如下图。 2.3 界面设计2.3.1 页面跳转关系 系统首页展示的是教师发布的题目、推荐文章以及学生发布的笔记 学生登录进入学生后台，可查询自己的成绩、在线答题以及管理笔记等 教师登录进入后台可管理题库、发布通知、发布文章以及生成成绩分析报告 管理员登录进入后台可以管理学生以及老师的信息 页面跳转图分别如下图: 2.3.1 页面设计 本人对下述需求进行了代码实现，使用ssm框架。涉及到Java的动态编译方面的知识，另外，评分通过获取后台数据库中的测试用例，动态执用例进行评分。 需要源码的可以扫码关注公众号『嗜码』，回复「程序题批改系统」即可获取源码，源码使用的 spring mvc 框架。]]></content>
      <categories>
        <category>文档</category>
      </categories>
      <tags>
        <tag>需求分析</tag>
        <tag>在线编程</tag>
        <tag>系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JavaScript 学习笔记（六）—— 事件]]></title>
    <url>%2F2017%2F11%2F17%2Fjavascript-learning-6%2F</url>
    <content type="text"><![CDATA[Javascript 与 HTML 之间的交互是通过事件来实现的。平时用多了JQuery，JavaScript 往往会变得生疏，有时候会不是很理解某些事件的写法，这里将学习过程做个记录。 DOM0 级事件事件处理的传统方式，也就是 DOM0 级事件模型，通过将一个函数赋值给一个事件处理程序属性，来实现事件的处理逻辑。这种方式十分简单，并且所有浏览器都适用。例如下面代码： 1234varbutton = document.getElementById("buttonId");button.onclick = function(e) &#123; alert("button"); // 'button'&#125;； 上面代码首先通过 id 获得了一个按钮的对象，然后将一个匿名函数赋值给对象的 onclick 属性，这样当我们点击按钮时，便会触发 function 里面的代码。同时，会传入一个参数 event，这个参数里包含了事件相关的信息，例如：点击的坐标，触发改事件的元素等等。 由于这种方式是对属性进行赋值，因此同一个元素后一次的相同事件会覆盖前一次，例如下面代码： 1234567var button = document.getElementById("buttonId");button.onclick = function(e) &#123; alert("1")&#125;;button.onclick = function(e) &#123; alert("2");&#125;; 结果输出 2，因为后一次的赋值覆盖了前一次。 因此，如果我们要注销事件绑定，只需要将属性值赋为 null 1button.onclick = null; 和这种方式相同的就是将函数名称写在 html 页面中，自定义一个函数，并将其赋值给 onclick 属性例如如下代码： 1&lt;button onclick="clickFunction()"&gt;&lt;/button&gt; 这种方式的不同之处在于它不会给函数传入 event 参数 DOM2 级事件DOM2 级事件处理程序和 DOM0 的不同之处在于，DOM2 级事件支持事件流的响应，以及同一个元素支持多个相同的事件。因此，学习 DOM2 事件前先看看事件流。 事件流在网上看到一句这样的话来形容事件流，感觉十分的形象：在一张纸上有一组同心圆，如果你把手指放到圆心上，那么你的手指指向的不是一个圆，而是纸上所有的圆。比如我们点击了页面中的某一个按钮，我们不仅点击了按钮，还点击了包含按钮的容器，甚至还点击了整个页面窗口。 所谓事件流就是接受事件的顺序。DOM2 级事件中规定事件流包括三个阶段：捕获阶段、目标阶段、冒泡阶段。 看一张图，便能很好的理解事件流。 如图所示，当一个事件触发时，最先得到消息的是 Document，然后是 HTML， 一层一层，找到触发事件的元素，这个过程属于事件捕获阶段。之后，便是对事件处理的逻辑，这是目标阶段。最后，事件会向上传播，通知上层元素事件处理完毕，这是事件冒泡阶段。 DOM2 级事件方式DOM2 级事件定义了 addEventListener 和 removeEventListener 两个方法，用于为指定元素添加事件绑定和删除事件绑定。例如下面代码： 1234varbutton = document.getElementById("buttonId");button.addEventListener("click", function (e) &#123; alert("clicked");&#125;, false); 可以看到，addEventListener 函数有三个参数，第一个为事件的名字，第二个为事件处理程序，第三个为 bool 类型。如果为 true，表示在捕获阶段触发，如果是 false，表示在冒泡阶段触发。 通过下面例子，来理解一些这个函数： 123&lt;div id="outer"&gt; &lt;div id="inner";"&gt; 内部 DIV&lt;/div&gt;&lt;/div&gt; 这里定义了两个 div，id 分别为 outer 和 inner，效果如图： 然后为每个 div 添加事件 1234567891011var inner = document.getElementById("inner");var outer = document.getElementById("outer");inner.addEventListener("onclick", function (e) &#123; alert("1");&#125;,true);outer.addEventListener("onclick", function (e) &#123; alert("2");&#125;, true);inner.addEventListener("onclick", function (e) &#123; alert("3");&#125;, false); 之前提到了，DOM2 级别事件中同一个元素支持多个相同的事件，上面的代码为 inner 设置了两个点击事件，分别在捕获阶段和冒泡阶段响应。outer 元素的点击事件在捕获阶段响应。 点击外部的 outer，只弹出 2，这是因为事件流没有传播到内部。 点击内部的 inner，弹出的顺序为 2，1，3。因为 outer 在外层，且为捕获事件，因此会比 inner 先响应事件，而 inner 由添加了冒泡事件 3，因此在事件冒泡阶段响应。 小结一般情况下，只需在最外层 dom 元素注册一次事件，然后通过捕获、冒泡机制去找到真正触发事件的 dom 元素，最后根据触发事件的 dom 元素提供的信息去调用回调。JQuery 中事件就是这样封装实现的，调用非常的方便。 事件的学习远不如此，在学习微信小程序中，会出现各种事件的处理，我们要理解原生 JavaScript 中的原理，才能学好其他的一些东西。]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>js</tag>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JavaScript 学习笔记（五）—— 闭包（closure）]]></title>
    <url>%2F2017%2F10%2F07%2Fjavascript-learning-5%2F</url>
    <content type="text"><![CDATA[今天学习了 JavaScript 的闭包，这里做一个自己理解的分享。 闭包是 JavaScript 中的一个难点，同样也是重点，很多的高级应用都需要使用闭包来实现。 变量的作用域要理解 JavaScript 中的闭包，就要先理解作用域。首先，我们要知道，JavaScript 没有块级作用域，这是什么意思？我们来看下面的代码： 1234567if (true) &#123; var name = 'zmy'; alert(name); // zmy&#125;alert(name); // zmy 结果输出了两次 ‘zmy’ 可以看到，在 if 语句块里声明的 name 变量，在语句块外面依然能够访问。这是因为 JavaScript 不存在块级作用域，在块中定义的变量，快外依然能够访问到。 在看看 Java 语句代码： 123456789class Test &#123; public static void main(String[] args) &#123; if (true) &#123; String name = "zmy"; System.out.print(name); &#125; System.out.print(name); &#125;&#125; 运行代码，结果显示报错，找不到符号 name。 这是因为 Java 有块级作用域，变量只会存在当前的块级作用域中，外部不能直接访问。 JavaScript 中的作用域相对于其他的块级语言来说比较特殊，它虽然没有块级作用域，但是存在函数作用域。这是什么意思呢，来看一下下面的这段代码： 12345function sayPersonName() &#123; var personName ='zmy';&#125;sayPersonName();alert(personName); // error 运行结果如下报错，显示 person Name 未定义。这是因为 JavaScript 中存在函数作用域，函数外部不能访问函数内部的变量。 这里值得注意的是，函数重点变量名需要关键词 var，如无此关键词，则默认为 全局变量，因此下面的代码是能够访问的： 12345function sayPersonName() &#123; personName = 'zmy';&#125;sayPersonName();alert(personName); // 'zmy' 闭包由上诉阐述引出了一个问题，我们如何才能够访问到函数里的变量？前面已经证明，我们不能够直接访问到变量，这样会引发错误。因此，我们可以使用闭包。 首先理解一下闭包的概念：是指有权访问另一个函数作用域中的变量的函数。 说的直白一点，闭包其实就是一个函数，而常见的创建闭包的方式就是在函数内部创建另一个函数。例如下面代码： 12345678function outerFunc() &#123; var n = 1; function innerFunc() &#123; alert(n); // 1 &#125; innerFunc();&#125;outerFunc(); 上面代码在 outerFunc () 中声明了一个 innerFunc () 函数以及一个变量，然后调用外层函数，输出了 n。 因此可以看出，内存函数能够访问外层函数变量。但反过来不行，内部函数变量对外部函数不可见。 这就是 Javascript 语言特有的 “链式作用域” 结构（chain scope），子对象会一级一级地向上寻找所有父对象的变量。所以，父对象的所有变量，对子对象都是可见的，反之则不成立。 既然内层函数能够返回外层函数的变量，那我们如果把 innerFunc () 作为返回值，上面的问题就可以解决了。 例如下面代码： 123456789function outerFunc() &#123; var n = 1; function innerFunc() &#123; alert(n); // 1 &#125; return innerFunc; &#125;var result = outerFunc();result(); // 1 可以看到，上面的代码将 innerFunc 作为 outerFunc () 的返回值，因此变量 result 变成一个函数，即 innerFunc ()。通过调用 result () 就可以访问 n 了。 以上是个人对闭包对理解，望多多指教！]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>js</tag>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Javascript 学习笔记 (四)—— 面向对象]]></title>
    <url>%2F2017%2F10%2F05%2Fjavascript-learning-4%2F</url>
    <content type="text"><![CDATA[前端 Javascript 的开发主要有两种方式：向对象编程（OOP）与函式编程（FP），面向对象有助于是将松散的 JS 代码进行整合，便于后期的维护，是让我们的代码适应更多的业务逻辑。 理解对象Javascript 中的对象与其他的基于类语言中的对象有所不同。Javascript 中没有没有类的概念，对象通过引用类型创建，引用类型可以是原生的 JavaScript 类型，比如 Object、Date、Array 等等，也可以是我们自己定义的类型。 ECMA-262 (规范版本号) 把 JavaScript 对象定义为：无序点到属性的集合，其属性可以包含基本值、对象或者函数。严格来说，就相当于说对象是一组没有特定顺序的值。对象中的每个属性或者方法都有一个名字，而每个名字都映射到一个值。下面通过两个例子理解一下这个概念。 创建自定义对象的最简单的方式就是创建一个 Object 的实例，即 new 一个 Object 的构造方法，然后在为它添加相应的属性和方法。 第二种方法为对象字面量（literal）语法创建： 属性特性在 Java 中，通过使用 private 关键字，使得有些或者属性或者我们不能直接访问，需要通过某些特定的方法进行访问。JavaScript 中没有提供这种关键字，但是可以通过改变属性特性将特定的属性或者方法隐藏。也可把它称为属性的属性。 下表列出了 JavaScript 中属性的属性以及其含义： 在 JavaScript 中，必须使用 Object.defineProperty () 方法对默认的特性进行修改。 通过下面的例子来理解一些这几个特性。 上面的代码用字面量方法创建了一个对象实例 person，对象的属性中有 name、age。通过调用 Obejct.defineProperty () 方法，对 name 属性：writable、congfigurable 两个特性进行修改。 我们再看一下属性的 set 以及 get 特性： 这里创建了一个 time 的对象，并给它定义两个默认的属性：_month, edition。_year 前面的下划线是一种标记，用于表示只能通过对象方法访问的属性。通过 Obejct.defineProperty () 创建 month 属性，并包含了 get 和 set 函数。通过修改 month 属性值，year 属性值也相应的改变。 虽然我们平时基本上不会用到这个，但对我们理解 JavaScript 对象非常有用！ 创建对象方式前面说到，创建对象的两种方式，但是当我们需要创建多个对象的时候，就会产生大量的重复代码。因此考虑用更好的方法去创建对象。 工厂模式工厂模式是软件工程领域一种广为人知的设计模式，这种模式抽象了创建具体对象的过程，即我们创建对象时不会对客户端暴露创建逻辑，并且是通过使用一个共同的接口来指向新创建的对象。 例如下面的代码： 上面的方法虽然解决了创建多个相似对象的问题，但是这种方法没有解决对象识别的问题，即如何知道一个对象的类型。 因此，出现了一种构造函数模式。 构造函数模式类似我们创建的 Object 对象的实例，使用 new 关键字，并调用 Object 的构造函数。我们也可以自定义构造函数，并且自定义对象的类型和方法。例如我们将上面代码重写成构造函数模式： 上面创建了一个名为 Person 的函数，这里函数用首字母大写用于区分其他一般函数，当然小写也是没有任何问题的。然后通过 new 关键字来创建了两个 Person 对象的实例，通过 instanceof 检测 person1 的类型发现它既是 Person 的实例，又是 Object 的实例，这是因为所有的对象均继承自 Object。 自定义构造函数意味着我们可以将他的实例标识为一种特定的类型，这就是构造函数要优于工程模式的地方。但是，自定义构造函数的方法仍然存在缺点，那就是每个对象中的属性和方法在每个实例中都要重新创建一遍。在前面的例子中，person1 和 person2 的属性和方法其实是不一样的，我们通过比较以下二者的方法可以看出，结果返回 false。 因此，两个实例都是 Perosn 的对象，完成同样的任务，却为其创建了不同的及方法，这是没有必要的。可以通过原型模式来解决这个问题。 原型模式JavaScript 中每个函数都有一个 prototype (原型) 属性，这个属性是一个指针，指向一个对象，这个对象的用途是包含所有实例共享的属性和方法。这是什么意思？我们通过下面的代码理解一下： 我们通过在控制台打印结果 String 类型以及 Date 类型的原型属性，结果返回了两种类型的方法。 因此，我们可以不用在构造函数中定义对象的实例信息，而是将这些信息直接添加到原型对象中，使得所有的对象实例可以共享它所包含的属性和方法。如下面的这个例子： 我们来看一张图，可更好的理解原型对象。 这张图展示了这个例子各个对象之间的关系。当创建一个构造函数时，构造函数有一个 prototype 的指针，指向 Person 的原型对象，这个原型对象中就包含了一下属性和方法。原型对象中有一个名为 constructor 的属性，这是一个指向 prototype 属性所在函数的指针，我们打印一下 Person.prototype，在控制台可以发现他们是一层一层的包裹，即互相指向对方。 我们可以通过对像实例访问保存在原型中的值，但是不能通过对象实例重写原型中的值，例如： 在这个例子中，person1 的 name 被一个新的值屏蔽。当需要读取某属性值时，会先在实例上搜索属性，如果没有找到，便会到原型对象中去寻找。 可以通过 delete 操作符删除实例属性。 原型中所有的属性是被很多实例共享，这种共享对于函数非常合适。然和对于包含引用类型值的属性，比如包含属性值为一个数组，就会出现问题，这里就不细说。于是便有了更多的模式：比如组合构造函数模式和原型模式、动态原型模式、寄生（parasitic）构造函数等等。 继承JavaScript 中实现继承的主要方法是利用原型链，让一个引用类型继承另一个引用类型的属性和方法。刚刚说到：每个函数都有一个原型对象，原型对象包含一个指向构造函数的指针，而实例包含一个指向原型对象的内部指针。如果我们让原型对象包含另一个类型的实例，即原型对象中还包含指向另一个原型对象的指针？结果会怎么样呢？ 来看一下这个例子： 这里运用原型模式创建了一个 Son 对象，对象中包含一个 sonName 属性以及一个 saySonName 方法，并创建了一个实例 son，传入了一个 son 字符串。 此时，Son 构造函数与原型在之间的关系我们可以用下面的图来表示： 然后，用同样的方法穿件一个 Father 对象，对象中包含一个 fatherName 属性以及一个 sayFatherName 方法。代码如图所示： Father 构造函数的原型关系如下图: 此时，我们让 Son 的原型指针指向 Father 的原型对象，并打印前后 Son 的原型对象。 代码如下： 可以看到，第一行打印的是 Son 的原型对象，第三行打印的是 Father 的构造函数，因此此时的原型关系图如下： 现在分别在实例化 Son，并使得 son 调用父类型的 sayFatherName 的函数，结果输出 father。 Son.Prototype 被当作 Fanter 的一个实例，因此有一个 prototype 的指针指向 Father 的原型，因此构成了一条原型链，即可看作类型的继承。 最后，我们打印原型的时候发现有一些熟悉的函数，是的，那就是 Object 的内置函数，所有类型均继承自 Object.]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>js</tag>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JavaScript 学习笔记 (三)——引用类型：Object、Array、Date]]></title>
    <url>%2F2017%2F09%2F30%2Fjavascript-learning-3%2F</url>
    <content type="text"><![CDATA[Object 类型引用类型是一种数据结构，在 Java 中，被称为类。在 JavaScript 中，被称为对象定义。 创建 Object 实例有两种方法。第一种是使用 new 操作符后跟 Object 构造函数，和 Java 语言相似。 另一种方式为使用对象字面量表示法： 这种方法创建了和第一种方法同样的对象。另外，对象字面量也是向传递大量可选参数的首选方式。例如： Array 类型JavaScript 中数组类型为最常见的类型之一，其大小可以动态调整。 声明数组同样有两种方式。第一种使用 new 操作符。 另外也可以通过字面量声明数组对象： JavaScript 中为数组提供了一些函数，tostring() 方法将数组中的数据以字符串形式返回，项与项之间使用逗号分隔，例： Join () 函数，可使用不同分隔符将数组转换为字符串，若 join () 函数中不传入参数，则默认使用逗号分隔。 Javascrip 还提供了 push ()、pop () 和 shift () 方法，可分别实现类似栈和队列行为。排序方法有 sort()，reverse() 等。还有一些操作方法和 Java 相似。 Date 对象使用 new 操作符和 Date 构造函数创建一个日期对象。 另外还有一些操作日期的函数，例：]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>js</tag>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JavaScript 学习笔记 (二)——变量、作用域、函数和内存]]></title>
    <url>%2F2017%2F09%2F29%2Fjavascript-learning-2%2F</url>
    <content type="text"><![CDATA[1、Javascript 中变量可能包含两种不同数据类型的值：基本类型的值和引用类型的值。 对于引用类型的值，可以为其添加属性和方法，也可以改变其属性和方法，例如： 但是，不能对基本类型的值添加属性，例如： 2、JavaScript 没有块级作用域。对于有块级作用域的语言，例如 C、C++、Java 中，新声明的变量只存在与当前块级作用域中，块级语句执行完毕后变量即会销毁。例如 (Java)： 运行结果报错，显示 i 未定义： 而在 JavaScript 中，没有块级作用域，变量不会被立即销毁，例如 (JavaScript)： 3、JavaScript 函数的参数和大多数其他语言中的参数有所不同。JavaScript 函数不介意传递进来多少个参数，也不介意参数的数据类型。即使定义的参数只接受两个参数，在调用函数的时候也未必需要传递两个参数。可以选择传递一个、三个甚至不传递。 JavaScript 中的参数在内部使用一个数组来定义，函数接收的始终是一个数组。在函数体内通过 arguments 对象访问参数数组，例如： 4、JavaScript 最常用的垃圾收集方式为标记清除，通过对变量的标记进行判断，并对其采取相应的策略。 为确保暂用较少的内存可以使得页面获得更好的性能，通常需要对变量进行解除引用，即将其值设置为 null。]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>js</tag>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JavaScript 学习笔记 (一)——值、类型和运算符]]></title>
    <url>%2F2017%2F09%2F28%2Fjavascript-learning-1%2F</url>
    <content type="text"><![CDATA[1、JavaScript 中包含 6 中基本的值类型：数字 (number)、字符串 (String)、布尔值 (boolean)、对象 (object)、函数 (function) 和未定义类型 (undefined)。 使用 typeof 操作符返回数据类型。 2、JavaScript 中有三个特殊的值，他们虽然是数字，但是和一般的数字看起来不太一样。它们分别为 Infinity、-Infinity 和 NaN。NaN 虽然是数字类型的值，但是用其表示 “非数值”。 例: 1/0-----&gt;Infinity;-1/0-------&gt;-Infinity; 字符串除一个数字得到 NaN。 3、在 JavaScript 中，不是所有的值都等于它本身，只有一个值不等于其自身，那就是 NaN。NaN == NaN —-&gt; false 4、当运算符作用在错误的类型的值上时，JavaScript 会自动将其转换成自己期望的类型。例如 8*null -----&gt; 0，&quot;5&quot; - 1 -----&gt; 4，“5”+ 1-----&gt;51。 5、如果不希望在比较的时候进行自动的类型转换，可以使用 === 或者！==。 6、逻辑运算符的短路特性。先对左侧值进行判断，若满足，则忽略右侧，即不计算右侧表达式。例：true || X，直接返回 true，不会计算 x，false &amp;&amp; X 也是同样道理。下图例子中可以看到 x 的值始终为 1，没有改变。]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>js</tag>
        <tag>学习笔记</tag>
      </tags>
  </entry>
</search>
