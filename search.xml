<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[毕业感悟]]></title>
    <url>%2F2019%2F06%2F17%2Fgraduate-thinking%2F</url>
    <content type="text"><![CDATA[这几天依然沉浸在离别的悲伤中无法自拔，每天的午睡都处于混沌梦境之中，仿佛越陷越深。作为最后走的一个人，送走了一位位同学，现在人去楼空，面对空荡荡的走廊与房间，不禁心生悲凉，五味杂陈。 大学四年，终于还是来到了毕业这一天。毕业酒会上，微醺的我没绷住，情绪失控，抱着同学嚎啕大哭。四年的感情化作泪水，宣泄出来。四年大学生活要告一段落了，人生就是这样，一次次幸福的相聚，夹杂着一次次痛苦的别离。 现在的我正收拾心情，写点东西，稀释一下这些天积淀的情绪，开始向前看。 高中时，我就一直幻想着大学生活，或惬意、或自由，也一直期待着度过一个有意义的大学生活，要对得起自己的青春。因此在上大学前，就决定在大学干一些有意义的事： 拿一次奖学金 培养自己的兴趣爱好 谈一次恋爱 四年过去了，拿了四年的奖学金，学会了吉他，谈了一次不是恋爱的恋爱。但现在，我不禁反问自己，这样就算有意了义么？ 有一位博士在他的论文致谢中这样写到： 从进入大学到博士毕业，整整十年了。在这十年中，我过得浑浑愕额。 十年前，我身高170cm，十年后，我身高还是170cm。 十年前，我体重60kg，十年后，我体重还是60kg。 十年前，我一无所有，十年后，我还是一无所有。十年前，我眼睛明亮、有神，十年后，摘掉眼镜，我已看不清自己有多少个手指了。 十年前，我声音洪亮、清澈，十年后，已经是慢性咽喉炎，声音嘶哑。 十年前，我踌躇满志、指点江山、激扬文字，十年后，我心如止水，只求温饱。 当然，我也得到了一些东西。 十年前，我还是个农民的儿子，十年后，我成为了一个博士。 十年前，我只懂得砍柴、种田、割草、放牛，十年后，我已经成为了一个懂机械、金融、管理的复合型人才。 但如果您问我这十年最大的长进是什么，我将告诉您：十年前，我十七，十年后，我二十七。 上面的致谢，作者表达了自己的无奈。和大多数人一样，我们更多的只是学习课本的理论知识，实践经验少之又少，毕业之后面临融入社会的问题，似乎四年下来，只有年龄长了4岁，其他的一无所获。 因此如果现在有人问我，大学应该干些什么，我想我会更加具体的告诉他：驾照，专业证，四六级，坚持锻炼，交点好朋友，多去上课，多看书看好书，多去图书馆。学会独立思考，尝试多点事情不会后悔，尊重别人，懂得感恩，学会与自己相处。还有重要的一点，就是多实践。 经过四年的观察，发现在大学，似乎也有一个约定俗成的二八定律：假如你比别人努力20%，那么你将超过学校80%的人。 在大学，有的人努力创业，实现某种程度上的财务自由；有的人努力学习专业知识，拿到奖学金，找到满意的工作或继续深造；有人努力做学生工作，提高锻炼自己的口才和能力。 当然，学历或者在校的成绩并不能说明什么，步入社会后也将面临更多地机遇和挑战，但相信大学努力过的你至少成长过，与过去的自己相比应该是更好了。就像之前听到过的一句话：如果你和别人比自己就像个弱鸡，那你就和过去的自己比，现在的自己是否比过去的自己更好。 大学里拿到多好的成绩、多少的奖励或许都不重要，自己是否独立、是否成长、是否能在未来的工作或者生活中独当一面，或许这才更加重要。正如我在论文致谢中所说，大学，其实就是学着长大。 花有重开时，人无再少年。总之大学时光就这样过去了，随之而来的是两年研究生生涯，未来充满变数，今后的生活中，我依然会做好这几点： 坚持锻炼注意饮食，维护好身体 多结交优秀的人，以他们为榜样 学会感恩 人总是要向前看的，活在当下，学会放下，美好的回忆放在盒子里，想起时打开看看。希望老师同学一切安好，我不是在最好的时光遇见了你们，而是遇见了你们，我给了我这段最好的时光。未来可期，我们江湖再见！]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
        <tag>感悟</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Google I/O 2019 小结]]></title>
    <url>%2F2019%2F05%2F08%2Fgoogle-io-2019%2F</url>
    <content type="text"><![CDATA[Google I/O 2019 大会于北京时间 5 月 8 日凌晨 1 点，在美国山景城 Shoreline Amphitheatre (圆形剧场) 举办。今天熬夜看了直播，这里对大会的 keynote 进行一个小结。 去年的这个时候，同样对大会进行了一个小结，感兴趣的可以看一下文章进行一个对比。 一年过去了，Google 在那些方面有了新的进展呢，一起来看看吧。 Google Search 引入更强大的视觉能力，使用 AR，将搜索结果进行 360˚ 全景展示 Google Lens 更强大的识图能力，拍菜单，显示大众点评高赞菜品，拍小票，自动计算金额和小费 与地图、翻译以及其他应用结合 Google Go 拍照识字并朗读，帮助不识字的人群 包含印地语、中文在内的10多种语言 Google Assistant 扩展到网络上，叫做 Duplex on the web 理解日历行程信息、Gmail 邮件内容，自动在填写订单时补全信息 持续对话，不用一直 hey google 识别速度更快 可以在不同应用内操作任务 Live Relay 语音识别和 TTS（文本转语言），帮助聋哑人士接电话。 智能回复建议，不开口就能打电话。 Android Q 更注重隐私 加入全局“黑暗模式” 适配折叠屏 Wifi 分享、优化系统手势交互 Pixel 3a 价格亲民 依靠算法，单摄吊打 iPhone X 更长的续航，充一次电可使用 30h 带 3mm 耳机接口 Nest Hub 带屏智能音箱 加入手势识别，抬手停止音乐 人脸识别，千人千面，针对家庭不同成员进行不同的内容展示 打电话、播放谷歌相册，以及 YouTube 节目。 Google AI 推进医疗研究，筛查早期肺癌，提高患者生存率 AI预测洪水，规划排水渠道 最后，所有新的产品都离不开 AI，Google 这样伟大的一家公司正使用 AI 改善用户体验，造福人类，这也是 Google 一直以来提倡 AI for social Good 的理念成果。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
        <tag>Google</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Gmail 无限衍生]]></title>
    <url>%2F2019%2F05%2F07%2Fgmail-infinity%2F</url>
    <content type="text"><![CDATA[这应该是一个比较老的话题了，但信息差总是会有的，这里进行科普一下。 好处目前还是有很多网站使用邮箱验证，因此可以通过邮箱衍生来注册多个账号。另外，也可以用来管理邮件列表，辨别邮件来源。 邮箱别名Gmail的无限衍生其实是利用的邮箱别名，可以通过以下规则得到无限的谷歌邮箱别名。 这里以邮箱abcdef@gmail.com为例，以下示例均指向同一邮箱。 1、用户名之间加 “.” a.bcdef ab.cdef abc.def abcde.f 此用途主要是针对外国名字的，用于名和性的区分。 2、用户名后面加 “+” abcdef+weixin abcdef+baidu abcdef+qq etc. “+” 号后面可添加任意字符，可用于区分邮件来源，这样就知道那个网站给你发垃圾 / 广告邮件了，方便拉黑。 3、把后缀变为 googlemail.com 例如：abcdef@googlemail.com 4、以上三种结合使用 例如： abc.def+qq@googlemail.com 最后以上无需到 Gmail 设置，注册时直接填写变形的邮箱即可，不同的变形地址都是会在同一个收件箱出现的。 最后，问题来了，如何上网注册一个 Gmail 呢？]]></content>
      <categories>
        <category>效率工具</category>
      </categories>
      <tags>
        <tag>效率</tag>
        <tag>工具</tag>
        <tag>Gmail</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python 爬取小程序接口图片]]></title>
    <url>%2F2019%2F03%2F21%2Fpython-get-mp-pic%2F</url>
    <content type="text"><![CDATA[Python 爬取小程序接口图片之前我开发过一个「校徽头像制作」的微信小程序，目前陆陆续续添加了有几百来所高效校徽，用户数也有 1w+ 了。 校徽之前都是自己手动一个一个添加到服务器的，效率很低，导致如今都还有很多校徽缺失，体验不好。 这几天偶然发现了另外一个小程序，里面的校徽图片很齐全，于是决定爬一爬。 反编译小程序要爬小程序里面的数据，需要知道小程序的接口地址以及参数。反编译小程序的主要目的就是是看到的 JavaScript 代码，这样就可以知道网络请求的 URL 以及 参数名称。 反编译小程序的过程比较复杂，这里可以直接参考文章：只需两步快速获取微信小程序源码^1。 最后，我在代码中获取到如下关键信息： 1234567const url = `https://api.iamsaonian.com/index.php`；const param = &#123; 'm': "Api", 'c': "Xiaohuiavatar", 'a': "xiaohui_list", 'p': page&#125; 在 Postman 中进行请求，接口数据格式如下图，十分标准的 Json 格式数据，并且进行了分页。 下面就可以动手去爬去数据，并下载图片了。 爬取图片首先说一下爬取思路，请求上面的接口，并解析数据，获取图片的 URL，下载图片，保存 csv 格式数据。 使用到的包有下面几个： 1234import jsonimport urllib.requestimport requestsimport csv 使用 urllib 下载图片至本地，图片命名使用 id 命名。 12345# 获取图片格式str_array = logo.split('.')format = str_array[len(str_array) - 1]# 通过urllib.request下载图片到本地urllib.request.urlretrieve(logo, '本地地址'+id+'.'+format) 打开填写的地址，图片下载到了本地，共有 2728 个校徽图片。 保存数据以后想使用云开发重构小程序，因此将数据保存为 csv 格式，便于数据的插入。 123456789# 将数据保存为 csv 格式with open('logo.csv', 'w', newline='', encoding='utf-8') as csvfile: # 设置表头 fieldnames = ['id', 'name', 'logo'] # 获得 DictWriter对象,使用，号分隔，便于云数据库导入 dict_writer = csv.DictWriter(csvfile, delimiter=',', fieldnames=fieldnames) # 第一次写入数据先写入表头 dict_writer.writeheader() dict_writer.writerows(list) 打开小程序云开发控制台，选择数据库，导入本地 csv 数据，这里我已经将爬去的数据导入到云开发数据库了。 在公众号对话框回复「爬取校徽」可获取本次文章的代码以及校徽图片。 欢迎加我微信，一起交流，互相学习，共同进步！ 关注公众号『嗜码』。回复关键字「前端」、「Python」、「Java」、「Android」、「小程序」、「Vue」等获取免费精品学习资料。]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>小程序</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自己对考研的理解]]></title>
    <url>%2F2019%2F03%2F14%2Fthoughts-about-kaoyan%2F</url>
    <content type="text"><![CDATA[今天分享一篇考研相关文章，送给正在努力备考的同学，希望有所帮助。文章已获得作者：@Faded 授权。 本科双非，19 考研，一战华南理工，失败。从 3 月份开始备战，10 个月的考研有得有失，总结一下希望给后来人一点借鉴。 1、定位19 考研人数又创新高，可以预见：未来几年人数必将继续增加，考研热会持续升温。19 年国家整体报录比为1:4，除部分冷门专业，985/211 高校的竞争会远远超过此比例。 考研中最重要的是认清自己，找准自己的定位。 考研目的是为了从事科研还是想镀金方便工作赚钱？将来所想从事的行业是否对学历有硬性要求？本科出身如何？自己在大学四年中的表现如何？自己有没有相关的资源？ 考研是提升自己阶层的宝贵通道，人人都想鲤鱼跃龙门。但是看看热门高校的报录比、录取线，简直就是神仙打架，炮灰多的惨不忍睹。考研不同于高考，付出产出比只有 100% 和 0%。 有些人有名校情结可以理解，但有些人明明知道自己的复习程度和智力水平最后还硬刚，真心觉得不理智。选择名校所承担的心理压力以及因此产生的复习效率、临场发挥等，都要权衡一下。一般名校的专业科难度较高，复习期间必然会比普通高校分配更多的时间给专业科。 定位高校的时候给自己留条后路，很多高校的专业课是类似的，给自己做好预案，万一到了 10 月份觉得没复习太好，立马换个档次。这个时候，选择比努力重要太多了。 每年的调剂，咦~~~真香 2、态度如果你选择好了高校，那么就大胆的上吧。 摆正自己的态度。都说学习是努力和智力的结合，但很多人的努力程度还没到了需要拼智力的时候。 考研期间卸载手机中的无关APP（追剧类软件、抖音微博、各种游戏）。这些软件会无形中占用大量时间、分散人的精力。学习期间不要玩手机，如果做不到，建议不要带手机去学习。放心，没了你，地球照样转。可以每天抽出固定的时间玩玩手机，搜集信息以及娱乐。自制能力弱的人，推荐读一读 凯利•麦格尼格尔 的《自控力》。可以找研友互相监督、共同进步（建议研友1-2名即可）。 制定合适的作息时间，然后严格执行。尽量不要给自己开小灶，人都是有惰性的，有些事情有第一次便会有第二次，断绝各种给自己开小灶的借口，有时候挺一挺就过去了，没那么难。学习效率需要规律的作息来保证， 建议每周给自己腾出专门的休息时间，要休息就好好休息，要学就专心的学。每天都扑倒学习上，可能后期身体吃不消，而且更容易放大压力。 放松最好的方法就是睡觉，不是玩手机，不是打游戏，不是刷视频。学习累了就给自己放个假，适当的锻炼，好好的睡一觉，睡饱了继续干！考研期间社交该停的停，该推的推。情侣们体谅一下，都省点心，吵架闹矛盾真的影响。 考研尽量保持心态的平稳，这个很难，大多数人的心态是起起伏伏的，甚至可能考研的成败取决于最后的心态。尽人事知天命，当压力大时，列出一些自己可以做的事（影响圈），尽全力把这些做好，你只可能改变这些事情。影响圈之外的东西是你无法改变的，或好或坏你都要学会接受，学会妥协。人生不如意之事十之八九，能与人言事不足十之一二。 3、跑步强烈建议每天挤出一点时间来跑步。身体是革命的本钱，有个好的身体是最大的资本。每天跑步可以增强身体素质，提高学习的效率。尤其到了考研后期，进入秋冬季节容易感冒发烧，这时如果身体出现毛病，可是要了老命了。 考研后期会有很大的心理压力甚至焦虑，跑步之类的有氧中低强度锻炼可以提高情绪，身体也会在这样的运动过程中释放让人感觉良好的内啡肽和去甲肾上腺素。另外，跑步对于下肢、肩背等也有好处。 当然，也可以按照个人的爱好，来选择合适的锻炼项目。不过跑步不需要太多的器材，比较方便。对于时间宝贵的考研人来说，跑步是最好的选项。 4、方法对于各科的学习方法，请移步知乎。各路神仙大佬数不胜数，可以借鉴一下。此处简单介绍一下我的理解：不管是啥科目，进度尽量提前，充足的时间可以让你在后期查漏补缺。可以多和同学交流一下方法，多尝试一些方法。感觉所以科目都应该以真题为主，多刷几遍，这个太重要了。 数学本人爆炸，不做介绍。 本人大学英语渣渣，但觉得英语最重要的熟读历年真题。语法啥的有点基础知识就行，还是单词比较重要。个人认为单词书看看就好，别太花心思（9月份才领悟，惨）。英语推荐唐迟老师的阅读，掌握阅读技巧太重要了（11月中旬才领悟，惨惨…）,在阅读中记单词比较好。英语作文不建议看视频，感觉没啥用，直接背范文得了。最后总结出一些自己的模板，土豪可以直接购买私人模板。 政治推荐徐涛（因为看肖的视频太困），政治当成小菜，可以当个相声缓解一下，背一背风中劲草对选择题很有帮助。大题的话背肖四肖八（肖四全背，肖八看一看读一读）。政治建议早点开（7月末），每天在数学间隙看看就好，到了最后再发力。 5、复盘在考研期间，建议半个月左右进行一次复盘。对各科的学习进度和学习方法进行调整，也可以对各科进行思维导图式的总结，形成自己的知识框架体系。知道一个东西和把这个东西说出来、讲清楚是两码事，倒逼自己输出，可以更清楚的知道自己会什么、不会什么。]]></content>
      <categories>
        <category>考研</category>
      </categories>
      <tags>
        <tag>随笔</tag>
        <tag>考研</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[微软推出了哪些好用的微信小程序]]></title>
    <url>%2F2019%2F02%2F23%2Fmp-about-microsoft%2F</url>
    <content type="text"><![CDATA[说起微软，大家可能对其 Windows 操作系统以及 Office 办公软件非常熟悉。但是在移动端，微软产品的市场占有率却少之又少。随着微信小程序的兴起，微软也乘势推出了几款好用小程序，让用户更加快捷地在手机上享受到微软科技带来的便利。 微软AI识图原名「微软小蜜」，后更名为「微软 AI 识图」，是微软中国首款微信小程序。它运用微软多年研究图片的认知能力，通过识别图片，提取图片信息，可智能生成 Office 文档。目前拥有拍图识字，高度还原表格，人脸识别制作文档，拍照翻译，拍照转 PDF/PPT 五项能力。 微软 Office 文档Office 365 在移动端有独立的 App，但是大小动辄数十M ，使得一些内存较少的手机运行起来非常吃力。因此如果是 Office 365 用户，推荐使用「微软 Office 文档」小程序。小程序能够帮助 Office 365 用户在微信中随时浏览、编辑和分享 OneDrive 中的 Office 文档，方便快捷。 微软听听文档有时候我们习惯在微信群中讨论某一观点，铺天盖地的图片、文件和语音难免会刷屏般的聚集在微信群聊中。微软推出的这一款「微软听听文档」小程序便能够很好的解决这个问题。你只需要打开小程序，并创建一个语音文档，将你的图片添加进去（也可以直接导入 PPT），便可以对每张图片进行语音解释。 完成你的录音之后，只需要点击分享按钮，输入文档标题与权限，最后就可以生成语音文档分享在群内，与群内好友共同讨论。 微软海报这款小程序的名字跟功能没什么关系，它并不是用来制作海报，而是用来创作小视频的。可一秒生成抖音同款照片电影、单图剪切九宫格、转场动画、各种滤镜音效，同时可蓝光画质转发好友。 每日英语电台每日英语电台是一款有 ChinaDaily 和微软亚洲研究院联合推出的小程序产品，提供了英语阅读以及听力能力。小程序提供新闻给大家阅读，点开文章之后，可以直接点词查看翻译，还可以收藏文章下次学习，对不认识的单词可以添加到单词本，是一个非常好用的英语阅读小程序。 单词闪猜这也是由微软亚洲研究院开发的一款有意思的小程序，玩法有点类似于 Google 的 「猜画小歌」。小程序以游戏的方式，让用户使用英文描述出所给单词，AI 来猜，旨在帮助用户提高英语应用能力。例如给出单词「Bill Gates」，我使用「A man who built Microsoft corporation.」，AI 便很快能够猜出我所描绘的单词。 以上就是微软推出的好用的小程序，直接在微信搜索相应的小程序目名称即可获取使用。各位有好用的工具也可以留言告诉我哟～]]></content>
      <categories>
        <category>小程序</category>
      </categories>
      <tags>
        <tag>小程序</tag>
        <tag>微软</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[三个有用的图片工具网站]]></title>
    <url>%2F2019%2F02%2F20%2Fpicture-tool-site%2F</url>
    <content type="text"><![CDATA[1、remove.bg看名字也能猜出来网站的功能，网站利用图像识别技术，检测人像区域，去除图片背景，实现自动快速抠图。搞过 PS 的人都知道，抠图比较难的应该就是人像图片了，尤其是头发部分。这里传了一张人像图片，可以看出效果还是提不错的。另外，网站也提供第三方的接口，可以在自己的代码中使用。 网站链接：https://www.remove.bg/ 2、photomosh《银翼杀手》、《攻壳机动队》等科幻电影构建了一个风格独特的赛博朋克（Cyberpunk）世界，也催生了一种名为故障艺术（Glitch Art）的设计风格，近年越来越受到设计师的追捧。PhotoMosh 工具中就提供了这种故障特效，能够方便快捷的生成很多故障特效图片。 首先根据提示选择一张本地图片，网页右侧会生成相应的特效选项。常用的有像素模糊、RGB 偏移、波纹、摇晃等等基本特效，还有其他一些非常酷炫的特效可供选择，所有的特效可以叠加使用。下面图片是生成效果，感觉还不错，可以导出为图片、GIF以及视频格式。 网站链接：https://photomosh.com/ 3、Algorithmia网页可以自己上传图片或者输入图片 URL，经过分析后，生成上色的图片。例如这里使用的一张图片，可以看到网页能够辨别出图片中的物体，并加上相应的颜色。例如天空则填充蓝色，山脉则填充黄白色，植被填充相应的绿色，还有对阴影处理得非常到位。 图片上色只是是这个网站的一个小功能，其他相关功能有例如：图片标签、图片物体识别等等，并且网站提供第三方接口，可以在自己的代码或者应用中接入。 网站链接：https://demos.algorithmia.com/colorize-photos/]]></content>
      <categories>
        <category>效率工具</category>
      </categories>
      <tags>
        <tag>效率</tag>
        <tag>工具</tag>
        <tag>网站</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[写一封「导师体验」良好的简历邮件]]></title>
    <url>%2F2019%2F02%2F19%2Fwrite-right-email%2F</url>
    <content type="text"><![CDATA[大部分考研的同学已经查到了自己的成绩，持续数月的备考与等待也有了结果。看着朋友圈的喜怒哀乐，庆幸自己早一步上车。 成绩理想的同学可以开始着手接下来的复试，没有考好的同学也务必调整好心态，做好工作 or 二战的打算。 书归正传。在查到自己的成绩后，联系导师这个操作少不了。与导师素未谋面，电子邮件是与导师交流沟通较为妥当的方式。因此，电子邮件可能会成为导师对你的第一印象，写一封「导师体验」良好的邮件非常重要。 先说一下，这里只在邮件注意事项上给出若干建议，简历邮件内容还请移步各大考研论坛参考模板。另外，或许这是你第一次撰写电子邮件，万事开头难，希望以下内容对你有所帮助。 1、确保导师能够收到邮件确保你的邮件能够毫发无损地到达收件箱，而不是被系统归到垃圾邮件，这是一个大前提。否则简历再优秀，邮件再生动，也是徒劳。以下是几点建议： 使用市面上较为常用的邮件服务提供商。例如 Gmail，163 邮箱，QQ 邮箱等。 编写有意义的标题，正文避免包含链接。 看看导师使用什么邮箱，自己也去注册一个。然后尝试自己向自己发送邮件，看是否能够接收。 2、导师是否查看邮件如何知道导师是否查看邮件？我们可以掌握主动权，而不是陷入盲目的等待。 这里推荐一个 Chrome 浏览器插件：mailtrack，可用于邮件追踪。如果你使用的是 Gmail，插件会提示你的邮件是否送达，以及收件人是否查看和查看次数。 如果使用 163 邮箱或者 QQ 邮箱，发送邮件时可以勾选底部「已读回执」选项，收件人查看邮件后系统会发送回执到你的邮箱，提示邮件被打开。 不过并不建议你使用回执，因为现在的邮箱都无法强制发送回执，而是需要收件人的确认，例如 QQ 邮箱中的提示。 这是否会产生视觉上的干扰，是否合适，还请大家斟酌。 3、取好邮件标题标题是导师进入邮箱第一眼看到的东西。上面说到，编写有意义的标题，否则系统很大程度上会将你的邮件归为垃圾邮件。同时，你需要让导师一眼就知道邮件目的，而不是直接忽略，因此你可以这样：【研究生申请】xxx 大学 xx 学院 xxx。 值得注意的是，如果你使用的是 QQ 邮箱，还请修改一下自己的默认帐户昵称（设置-账户中修改）。否则，导师收到的邮件可能是这个样子的。 非主流的昵称、回忆杀？是否让导师也想起逝去的青春？ 哈哈，为了显得较为正式，建议暂时将昵称改成自己真实的名字，正经一些不好吗？ 4、写好正文正文是你整封邮件的排面，排版是否整洁，字体以及字体大小、颜色是否统一，段落是否鲜明等等都是需要注意的。先放张图对比一下，如果你是导师，你更愿意阅读哪一封呢？ 正文板式，其实越简单越好。邮件正文不要使用任何背景图片、音乐，同时避免使用不同颜色、大小、字体进行排版。如果需要对内容进行强调，简单加粗就行。注意分段，文字不要堆在一块，一段文字一般不要超过十行，否则会引起视觉疲劳。 对于内容，检查是否有错别字，标点符号是否使用正确，语言是否通顺。同时，邮件里可能会提到一些专有名词，请务必核实，体现自己对学术的严谨性。例如对于编程语言中的英文名词，使用 Python 而不是 python，使用 Java 而不是 java，使用 Android 而不是 android 等等。 最后，尽量考虑到导师的阅读场景，电脑 or 手机。因此，建议先给自己发一封，并分别在电脑和手机上打开，看字体大小是否合适，阅读体验是否良好。 5、附件相关如果邮件自述中叙述的不是太有条理，建议制作一份简历作为附件发送。而你的简历附件容不容易打开，命名是否有意义，这是需要注意的。 有些同学一个简历打个压缩包，导师需要下载解压查看，操作成本太高。有些同学使用 WPS、Word 格式的附件，但没有考虑到导师没有安装办公软件，或者手机上查看等一系列场景。因此简历附件建议转换统一成 PDF 格式，这样即使不下载任何办公软件也可以打开，同时支持在线预览。 最后很关键的一点养成正确的发邮件流程，插入附件——复查附件——撰写正文——拟写标题——填上收件人，这样就能避免附件忘记插入、附件发错、标题忘记写的情况。 6、小结以上就是联系导师邮件等相关注意事项以及建议，希望对大家有所帮助。这里引用 Fenng 大文章中的一句话，怎样算是「用户体验」良好？就是你做的事情必须为对方考虑，而且，你的确考虑到了。 有的时候，我们把为对方考虑这种行为，也叫做同理心。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
        <tag>研究生</tag>
        <tag>经验</tag>
        <tag>感悟</tag>
        <tag>邮件</tag>
        <tag>简历</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[互联网 B 哥直播总结]]></title>
    <url>%2F2019%2F01%2F13%2Fthoughts-about-b-ge-live%2F</url>
    <content type="text"><![CDATA[昨天观看了互联网B哥(stormzhang，下文以张哥做称呼)的直播，对直播内容进行一个总结，也是为了让自己加深印象，或许会对大家有所启发。 学习张哥首先提到学习，学习不应带有功利性，不要想着学了就会有所收获，要有延迟满足的心态。利用碎片化时间，养成习惯，慢慢积累，量变引起质变。至于学习，把80%的经历投入到本专业工作中，20%的精力投入到自我提升方面。 圈子圈子很重要，不同的层次，有着不同的思维，可以看到不同的世界。在一个领域待久了，容易固化，去其他圈子看看，向不同领域的人学习，但是提升的本质在自己。抱着虚心学习的态度加入圈子，而不是以为加入圈子就飞黄腾达了。 信息差罗胖在跨年演讲也提到了信息差的概念：在中国，再普遍的常识，也至少有一亿的人不知道。因此有人会揣摩信息，利用信息差生意，从中牟利。例如有人付费开通微信支付分，有人付费找论文代写中介等等。 预测 产品。头条可能成为新的巨头，产品覆盖从1线到18线城市。即将推出新的社交产品，对标腾讯，保持关注即可 5G。19年5G还很难做到普及，但是会进入大众视野，会改变很多方面。首先是手机厂商，又有理由让大家换新的手机。其次，由于网速的提升，在物联网、智能家居、无人驾驶方面会带来较大的影响 消费。现在的年轻人的消费观念与上一辈有很大的差别，上一辈吃饱穿暖，年轻一辈追求生活的品味与质量，更多的是精神层次的享受。例如在看电影，购物等等的方面。 行业。在线教育是朝阳行业，去年有一篇很火的文章，讲的就是一块电子屏幕让山区的学生能够接收与城市学生同等水平的教育。正是有了在线教育，缩小了教育水平的差距，使得教育更趋于公平化。另外，知识付费在2018年兴起，今年也将持续发展。往广了说，知识付费也是一种在线教育。 更远的发展。AI会对很多行业产生冲击，需要掌握AI不能替代的能力。 其他内容张哥主要是对自己的一个复盘，这里就不在赘述，希望以上内容对大家有帮助或者启发。当然，不一定说了解趋势或者不断学习就能怎样怎样，理都懂，关键还要看自己的洞察力以及执行力。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
        <tag>感悟</tag>
        <tag>总结</tag>
        <tag>B 哥</tag>
        <tag>直播</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[小程序使用 ES6 新特性]]></title>
    <url>%2F2019%2F01%2F04%2Fmp-es6%2F</url>
    <content type="text"><![CDATA[ECMAScript 6（简称ES6）是于2015年6月正式发布的JavaScript语言的标准，正式名为ECMAScript 2015（ES2015）。 小程序在很久之前就支持了ES6了，因此在小程序的开发中，我们可以适当的使用ES6中的一些新特性，来简化代码，高效开发。 在使用微信开发者工具调试之前，记得先勾选上es6转es5选项，这样工具才会将es6语法进行转换。 1、模板对象模板字符串（template string）是增强版的字符串，用反引号（`）标识。它可以当作普通字符串使用，也可以用来定义多行字符串，或者在字符串中嵌入变量，这样就避免了使用大量的(+)来拼接字符串。例如下面的代码： 123456var wechat = '1349571206zmy';var qq = '1349571206',// es5console.log('my wechat is ' + wechat + ' and my qq is ' + qq);// es6console.lg(`my wechat is $&#123;wechat&#125; and my qq is $&#123;qq&#125;`); 2、默认参数在es6中，函数可以有默认的参数，这样就避免了认为的对参数进行判空或者其他处理。例如下面代码，封装了微信小程序原生的toast，默认传入title参数即可。123456789101112131415/** * 显示toast * @param &#123;string&#125; title toast标题 * @param &#123;string&#125; type toast类型 * @param &#123;number&#125; duration toast时长 * @param &#123;boolean&#125; mask 是否显示遮罩 */showToast(title, type='none', duration=1000, mask=false) &#123; wx.showToast(&#123; title: title, icon: type, duration: duration, mask: mask &#125;);&#125; 3、类ES6 提供了更接近传统语言的写法，引入了 Class（类）这个概念，作为对象的模板。通过class关键字，可以定义类。例如定义一个基础类，来封装微信小程序常用的方法，让代码有更高的复用性，也使代码更加简洁。与传统语言相似，支持继承。 1234567891011121314151617// base.jsclass Api &#123; // 显示toast showToast(title, type='none', duration=1000, mask=false) wx.showToast(&#123; title: title, icon: type, duration: duration, mask: mask &#125;); &#125; // ... // 导出 export &#123; Api &#125;;&#125; 定义好类后，可以在其他的js中进行调用。 123456789// index.js// 引用import &#123;Base&#125; from 'base';const base = new Base();// ...// 在函数中调用onLoad() &#123; base.showToast('toast');&#125; 4、解构赋值结解构就是按照一定模式，从数组和对象中提取变量进行赋值，通过解构我们可以让赋值更优雅便捷。例如下面的代码： 12345678// options=&#123;wechat:134957126zmy, email:phillzou@gmail.com&#125;onLoad(options) &#123; // es5获取值 let wechat = options.wechat; let email = options.email; // es6获取值 let &#123;wechat, email&#125; = options;&#125; 5、箭头函数ES6 允许使用“箭头”（=&gt;）定义函数。 123456// es6var sum = (num1, num2) =&gt; num1 + num2;// es5var sum = function(num1, num2) &#123; return num1 + num2;&#125;; 6、使用promise简化回调小程序中的api几乎都是回调函数的方式，因此经常会照常回调里面嵌套回调的情况，这使得代码难以理解，因此可以通过promise简化回调。举个简单的例子，小程序中的图片上传。使用小程序进行图片上传的传统方式一般分为这几个步骤： 拍照或者选择相册中的图片 请求后台上传接口 提示上传成功 这样的一个步骤下来，看看代码会变成什么样子。 12345678910111213141516171819// 选择图片wx.chooseImage(&#123; success: (res)=&gt;&#123; // 上传图片 wx.uploadFile(&#123; url: 'serverUrl', filePath: res.tempPath[0], success: (res)=&gt;&#123; // 提示上传成功 wx.showToast(&#123; title: '上传成功', success: (result)=&gt;&#123; // ... &#125; &#125;); &#125;, &#125;); &#125;,&#125;); 可以看到，上面的代码由一个个回调函数嵌套，这使得代码非常难以阅读，下面来看看如何使用es6中的promise进行简化。 1234567891011121314151617181920212223// 选择图片chooseImage() &#123; return new Promise((resolve, reject) =&gt; &#123; wx.chooseImage(&#123; success: (res)=&gt;&#123; resolve(res); &#125;, &#125;); &#125;);&#125;// 上传图片uploadFile(url, path) &#123; return new Promise((resolve, reject) =&gt; &#123; wx.uploadFile(&#123; url: url, filePath: path, success: (res)=&gt;&#123; resolve(res); &#125;, &#125;); &#125;);&#125; 上面的代码将微信小程序api进行封装，并以Promise对象的形式进行返回。当我们真正进行图片上传时，可以这样操作。 1234567this.chooseImage() .then(res =&gt; &#123; return this.uploadFile(res.tempPath[0], 'serverUrl'); &#125;) .then(res =&gt; &#123; return this.showToast('上传成功!'); &#125;) 上面的代码就非常的清晰，以链式调用的方式，能够使人清楚的知道代码的每一步的作用。当然，这里只是介绍了promise在小程序中的一种应用，具体在ES6中的用法还请移步ES6文档。 总结上面只是介绍了es6特性在小程序中的应用，并没有对特性进行深入，希望能增加大家对小程序的了解程度，提高开发效率，也是对自己学习的一个小结。]]></content>
      <categories>
        <category>小程序</category>
      </categories>
      <tags>
        <tag>小程序</tag>
        <tag>JavaScript</tag>
        <tag>ES6</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[由电影票价引发的一些思考]]></title>
    <url>%2F2018%2F12%2F23%2Fthought-about-movie-ticket%2F</url>
    <content type="text"><![CDATA[最近漫威动画大电影《蜘蛛侠：平行宇宙》非常火爆，作为漫威忠实粉丝，当然要去电影院欣赏一番。但是在买电影票过程中，经历了三次选座（前两次并未支付下单），三次的票价都完全不一样，这让我对其定价机制产生了一些思考。 第一次是在昨天晚上，打开支付宝，准备订购电影票，一看有特惠价格¥26.9，还不贵。正要选座下单时，被手机其他消息给干扰，退出了订购界面。 当我再次反应买电影票的时候已经是第二天上午，同样的打开支付宝，同样是显示特惠价格，但是票价为¥35，是的，我又没有买。中午的时候实在觉得无聊，还是决定去看电影，再次打开支付宝，票价显示¥30.5，然后下单支付了。 这个过程我前前后后打开了三次支付宝，这三次经历了什么，支付宝通过我的行为了解了什么，我来说说我的一些揣测。 第一次，选座未支付。支付宝知道了：这B喜欢这部电影，观看的概率很大，但是没有下单，下次他肯定还是会来买，我把价格提高一些，宰你一波。 第二次，点击影片，但未选座。支付宝心里这样想：可能是价格提的太高了，这B接受不了，过会把价格再降低一些，看你买不买。 第三次，选座支付下单。支付宝暗喜：这B终于还是买了，呵呵，机智如我。 当然，以上的都是我的一些揣测，但是不排除这种可能。 在这之前，其实也有看到有人爆料价格歧视的问题。比如有人说当自己再去搜索到同一个目的地的机票时，机票价格就比上一次看到时要贵，因为应用通过你多次访问的数据判断出，你真的要买机票了。 同样的，一些电商公司会通过你的行为数据判断你是不是价格敏感用户，例如同样的商品，如果你第二次访问价格更高时你依然下单了，说明你对价格不敏感（家里有矿），那么之后可能其他的商品也会显示更高的价格给你。 之前也在星球里谈论了关于互联网隐私的话题，如今的人工智能的发展如此迅速，机器可以通过你的行为数据快速分析出你的性格、生活习惯，从而做出相应的反馈。有时候，机器比你更加懂你。 以上的经历告诉我，买东西要省钱，果断一点就对了。看到这里，你可能觉得我屌丝一个，买个电影票都舍不得，还bb这么多。哈哈，我就是这样，自己花钱娱乐精打细算，花钱学习投资自己、请朋友吃饭玩大手大脚，你咬我啊，哈哈！]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
        <tag>思考</tag>
        <tag>电影票</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[小程序实现 VR 效果]]></title>
    <url>%2F2018%2F12%2F21%2Fmp-vr%2F</url>
    <content type="text"><![CDATA[小程序中实现VR效果最近的工作中有一个奇葩的需求，就是更根据房间场景图，打开摄像机或者上传图片来适配不同的背景图，类似于VR的效果。 一开始百度搜索，发现小程序根本没有VR的插件，而小程序要实现VR需要使用web-view，也就是使用网页的VR插件，这样的话开发成本会比较大。 在参考了其他的一些小程序后，想到了一种替代的解决办法，也能满足需求，并且有较好的体验。先来看看效果图： 上面的效果是如何实现的呢，其实非常简单，主要使用了小程序的&lt;camera&gt;以及&lt;cover-image&gt;组件。 &lt;camera&gt;组件能够在部分中屏幕显示相机内容，而这个组件又是原生组件，层级最高，因此需要使用&lt;cover-image&gt;，才能做到将camera覆盖。正如所见，图片使用的是一个中间镂空的png图。 关键代码如下： 愿世界不再有需求。]]></content>
      <categories>
        <category>小程序</category>
      </categories>
      <tags>
        <tag>小程序</tag>
        <tag>VR</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[小程序云开发之初体验]]></title>
    <url>%2F2018%2F12%2F17%2Fmp-cloud-dev%2F</url>
    <content type="text"><![CDATA[小程序云开发是微信最近推出的新的一项能力，它弱化了后端以及运维的概念，开发者无需搭建服务器，使用微信平台提供的api即可完成核心的业务开发。 目前提供三大基础能力支持： 云函数：在云端运行的代码，微信私有协议天然鉴权，开发者只需编写自身业务逻辑代码 数据库：既可在小程序前端操作，也能在云函数中读写的 JSON 数据库，免费2G容量 存储：可在小程序前端上传/下载云端文件，在云开发控制台可视化管理，免费5G容量 上手体验打开微信开发者工具，新建工程，选择新建云开发模板，这里appid是必填项。 确认后，工具默认创建好工程如下： 可以看到，工程目录中多了一个cloudfunctions的文件夹，其他的与普通模板目录结构一致，而cloudfunctions文件夹其实就是用来存放云函数的。 云开发控制台点击顶部工具栏中的云开发，会弹出创建的引导，按照提示一步一步创建，这里点击开通。 填写好相应的环境名称信息，可以看到，数据库有2G的空间，另外有5G的存储，可以用来存放一些图片和其他资源，这对于一些小的应用来说是完全够用的。另外，一个小程序可以建立两个环境。 新建好的控制台就是这个样子 云数据库下面通过一个实例来学习小程序的云开发终端云数据库功能。数据库使用的是JSON 数据库，也就是我们所说的nosql，类似于MongoDB，使用键值对应的方式存储数据。 首先进入云开发控制台，选择数据库管理。新建一个集合，也就是一个数据库，输入集合名称。 然后新建一条记录，记录可以手动创建，也可以导入json或者csv数据。id默认自动生成。 那么接下来，就尝试着从小程序端读取数据库中的数据。在index.js中的onLoad函数中加入下面的一段代码 1234567891011// 创建数据库实例const db = wx.cloud.database()// 2. 构造查询语句// collection 方法获取一个集合的引用// 可以使用where 方法传入一个对象，数据库返回集合中字段等于指定值的 JSON 文档。API 也支持高级的查询条件（比如大于、小于、in 等）// get 方法会触发网络请求，往数据库取数据db.collection('user').get(&#123; success(res) &#123; console.log(res) &#125;&#125;) 保存代码，编译运行，观察控制台，发现打印出来的信息中没有数据。 不要着急，这并不是我们的代码写的有问题，而是数据库有权限限制。再次打开控制台，选择数据库权限设置。 可以看到，默认的权限是仅创建者及管理员可读写，这里我们更改为第一个选项，选择所有用户可读，仅创建者可写。再次编译运行，可以看到数据库中的内容成功的被打印出来了。 总结小程序云开发确实是一个不错的功能，大大降低了开发成本，不用再去为服务器、域名、备案等一系列开发流程而发愁，因此如果要开发一些小型的应用，首选云开发。 以上是小程序云开发之初体验，之后的文章会继续深入，持续关注。]]></content>
      <categories>
        <category>小程序</category>
      </categories>
      <tags>
        <tag>小程序</tag>
        <tag>云开发</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[提高小程序开发效率]]></title>
    <url>%2F2018%2F12%2F14%2Fmp-more-effectiveness%2F</url>
    <content type="text"><![CDATA[不知道大家开发小程序是用什么工具，如果是微信自带的开发者工具，相信我，看了这篇文章，你会重新做出选择的。 之前一段时间，我也一直使用微信开发者工具进行小程序的开发与调试，但是用过的就会有这种体会： 代码编写区域太小，代码堆叠在一起，难以阅读 自定义能力较弱，只能修改代码字体 编辑器代码提示较少 工具经常出现莫名的bug，时不时黑屏 因此，为了解决这些个问题，果断更换开发工具，这里推荐大家使用号称“宇宙第一IDE”的编辑器——vscode。安装方法不作赘述，主要介绍一下几个vscode插件，在vscode中搜索插件关键字点击安装即可。 minapp支持微信小程序标签、属性的智能补全，并且提示中包含文档内容（同时支持原生小程序、mpvue 和 wepy 框架，并提供 snippets）。 wechat-snippet这个插件主要的功能就是代码辅助，代码片段自动完成，可以作为上个插件的补充。 wxml这款插件用于将wxml代码进行高亮显示，并且提供代码格式化的功能，可将代码格式化为较易阅读的样式。 有了上面这几款插件，便可以开始高效地撸代码了。至于代码的调试以及效果的查看，当然还是得打开微信开发者工具。将编辑器隐藏，调试工具调到最大，快速找到元素的位置，修改样式，一顿操作猛如虎，Ctrl+S，提交代码。]]></content>
      <categories>
        <category>小程序</category>
      </categories>
      <tags>
        <tag>效率</tag>
        <tag>工具</tag>
        <tag>小程序</tag>
        <tag>vscode</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[小程序 Flex 布局]]></title>
    <url>%2F2018%2F12%2F02%2Fmp-flex-layout%2F</url>
    <content type="text"><![CDATA[在做前端开发的过程中，页面设计与排版往往成为一大拦路虎。抛开色彩的搭配不说，最让人头疼的无非就是如何让元素在水平或者垂直方向上进行布局排列，并以一定的方式对齐，使得页面显得简洁有序。 在这几周小程序开发工作当中，我也碰到了这样的问题，主要是因为自己CSS功底不扎实，只对几个常用的属性较为熟悉，因此布局起来相当吃力。每次写页面，都要先找一大堆模板，最后堆叠出来的代码我自己都看得恶心。但渐渐的，发现别人的代码中都有使用到flex布局，稍做了解后，确实好用，很快就可以自己编写出好看的页面。 1、flex布局Flex是Flexible Box的缩写，意为”弹性盒子”。传统的布局解决方案是基于盒状模型，依赖 display、position、float这些属性。使用过的人就知道，用起来很不方便，没有响应式，并且对于一些特殊布局很难实现，比如，垂直居中。 之后W3C提出了一种新的方案—-Flex布局，可以简便、完整、响应式地实现各种页面布局。目前，它已经得到了所有浏览器的支持。下面的例子通过微信小程序实现，网页端同理。 2、布局拆解在对页面进行编码前，通常需要对布局进行拆解，这也是关键的一步，我以下面的图片为例作讲解解。 上面截图是我为某公司制作的官网小程序其中的一部分，布局并不复杂，由外至内进行分析。首先整体布局是一整行，其中有三个子项水平排列，每个子项又可再次进行拆分。 子项同样的由外至内分析，最外层为一个圆形，中间内容可以看作是一个图标和一行文字垂直居中排列，最后的组件拆解图如下。 3、编码实现首先按找布局拆解的思路，先实现三个圆形组件的水平排列。平常我们想到的方式可能是使用浮动或者绝对布局进行定位，但是这样的方式对不同屏幕大小尺寸的设备不友好，容易出现布局错乱。下面使用flex布局看看是如何实现上面效果的。 小程序端页面代码如下，主要是定义几个容器，网页端同理（将view换成div即可）。 12345&lt;view class="circle_line"&gt; &lt;view class="circle"&gt;&lt;/view&gt; &lt;view class="circle"&gt;&lt;/view&gt; &lt;view class="circle"&gt;&lt;/view&gt;&lt;/view&gt; WXSS代码如下，网页端同理。1234567891011121314.circle_line &#123; /* 定义弹性布局，默认水平排列 */ display: flex; /* 设置主轴对齐方式，space-around表示两端对齐，项目间间隔相等 */ justify-content: space-around; /* 在交叉上的对齐方式 */ align-items: center;&#125;.circle &#123; width: 100px; height: 100px; border-radius: 50%; background:linear-gradient(to right, #6372ff 0%, #5ca9fb 100%);&#125; 这时候页面的效果就如下图所示： 首先注意的是flex布局默认排列方式是水平排列。如果对justify-content以及align-item这两个属性可能比较模糊，这里我将第一个属性的所有属性值试一遍，看看效果，另外一个同理，只不过是在交叉轴方向上的对齐方式。 有了上面布局的基础，很快的便可以将圆形内部的图标以及文字进行布局。实现思路就是将图标以及文字放入一个弹性盒子，并将排列方式设置为垂直方向，然后设置居中对齐。wxml代码：123456789101112&lt;view class="circle"&gt; ...&lt;/view&gt;&lt;view class="circle"&gt; &lt;view class="circle_icon"&gt; &lt;image class="circle_icon_image" mode="scaleToFill" src="/images/android.png" /&gt; &lt;/view&gt; &lt;view class="circle_txt"&gt;安卓开发&lt;/view&gt;&lt;/view&gt;&lt;view class="circle"&gt; ...&lt;/view&gt; wxss代码：12345678910111213141516.circle &#123; ... display: flex; flex-direction: column; align-items: center; justify-content: center;&#125;.circle_icon_image &#123; height: 30px; width: 30px;&#125;.circle_txt &#123; color: #fff; text-align: center; font-size: 13px;&#125; 最后保存，就实现下面的效果啦！ 4、总结希望上面过程，不仅仅说是学会了一个什么样的布局，最为关键的还是布局拆解的步骤，因为很多前端的编写都需要有类似的思想。 更多的相关flex布局可以去一些学习网站上做详细了解，祝学习愉快！]]></content>
      <categories>
        <category>小程序</category>
      </categories>
      <tags>
        <tag>小程序</tag>
        <tag>布局</tag>
        <tag>flex</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[大三我干了啥]]></title>
    <url>%2F2018%2F11%2F20%2Fwhat-did-i-do-in-third-year%2F</url>
    <content type="text"><![CDATA[前些天有一个学弟问我大三是怎么规划的，如图。首先我不敢说是规划，也没有明确的规划，我只是以一个学长的身份，阐述我自己的一些学习经历。 准确来说，我是从大二的暑假才开始接触实际项目，整个暑假都留在学校，和几个小伙伴完成老师的布置的任务，并且每周需要向老师汇报一次工作进度。由于这段时间的项目驱动，自己的专业技能提升的非常快。 大三上学期的课余时间更多的是独立学习，同时完善老师的项目，并且每周参加一次小组的交流会议。另外，开始参加了一些比赛，虽然拿的奖都是省级的，不过至少还可以往简历里面写。在工作面试或者是研究生面试的中，简历中的项目经历以及比赛经历是非常重要，面试官也非常关注这一方面。 大三我还自学了微信小程序，自己开发了几小程序，后面也陆陆续续通过小程序赚了大概几千块钱，至于这钱怎么赚的，以后有时间写一下。现在小程序也开通了流量主，每天有大概十块钱的广告收益，不多，也就吃饭加个鸡腿惹。 至于课程，上课稍微认真听，作业按时完成，考试的时候再好好复习一下，成绩不会很低。大部分的时间我都是自己学习其他东西，大三几乎都在图书馆里面泡着，当然也有偷闲傻玩的时候。但是每次下完课，同学都回寝室，我去图书馆，中午也在图书馆休息，晚上学到闭馆，这是几乎成为大三的日常。不过还好室友都还挺爱学习的，能和我一块奋斗。 总之就是要知道大三没有时间可以玩了，你将来要不就考研，要不就工作，但是上学期复习有点早了（每个人的情况不一样），所以最好就是提升自己的专业技能，多学知识。有些人为了考研，把专业丢了，到研究生阶段还得补回来，这是得不偿失的，所以专业是王道。上学期先把专业知识打牢，这样去考研或者工作，都是不吃亏的。 到大三下学期，要考研的就认真复习，心无旁骛；要找工作的就继续学好自己的专业知识，多刷面试笔试题，为实习做好准备。 话说现在也迷茫的我为什么要写这些东西，科科。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
        <tag>感悟</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[小程序学习资料及路线分享]]></title>
    <url>%2F2018%2F11%2F08%2Fmp-learning-material%2F</url>
    <content type="text"><![CDATA[最近大家做毕设，好多同学都要做小程序的开发，也有同学问起小程序的开发流程，包括前后端的交互等等，这里就整理一些资料，大家对着资料慢慢学习吧。 小程序端开发小程序端可以理解为Web中的前台，即界面显示，使用一些常用的网页元素以及css，对界面进行布局，使用js进行数据绑定操作。你只需要有基本的html、css、js的基础就能开始学习了，至于如何学习，可以通过视频教程、博客等等的方式，最重要的还是要自己实践，下面是一些相关的资料，自己进行选择性的学习： 微信小程序开发官方文档。文档大概过一遍，大致了解有哪些组件、常用的api就可以了，需要的时候再来查询。 小程序视频教程，提取码: 68yx。这是一套小程序视频教程，虽然教程里的工具以及部分api微信已经更新了，但是基础的东西没有改变，还是有一点价值。另外，也可以去慕课网看一些免费的课程，如果觉得没有太大作用建议去购买付费课程。 小程序源码大全， 提取码: njje。有时候我们写小程序不知道如何布局，这时候参考别人的源码是很有必要的。这里面有120多个小程序的源码，有的包括前后台，可以根据自己的需求进行适当的修改。 小程序后端开发与调试之前在文章中也有提到过，后台的开发语言有很多种选择，可以是php、node.js、也可以是Java，微信对这个没有做出限制，大家可以选择自己最为擅长的开发语言。 后台开发好了，如何在本地对小程序进行调试呢？平时我们使用ssm或者ssh开发好后台后，调试网页的正常运行是在浏览器里输入localhost或者127.0.0.1进行访问服务器。但是小程序的调试是不支持本地域名以及ip地址访问的，因此我们需要将本地的ip映射到外网，这里有个内网穿透工具，具体使用方法大家参考这篇文章：《微信小程序如何搭建本地环境开发》 至于前后台数据如何交互，其实主要使用wx.request这个api，大家多参考官网的文档以及博客。这里放一些博客地址，大家自行参考： 简单的微信小程序与Java后台的连接 小程序学习路线 校徽头像制作小程序前后台源码 校徽头像制作小程序前台教程 校徽头像制作小程序后台教程]]></content>
      <categories>
        <category>小程序</category>
      </categories>
      <tags>
        <tag>小程序</tag>
        <tag>学习路线</tag>
        <tag>学习资料</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用 Flutter 构建 App]]></title>
    <url>%2F2018%2F10%2F29%2Fflutter-build-app%2F</url>
    <content type="text"><![CDATA[Flutter是一套跨平台的移动UI框架，可以快速在iOS、Android以及Fuchsia上构建高质量的原生用户界面。至今，Flutter的版本已经更新到Preview 2.0，这也是正式版发布前的最后一个版本。 Flutter学习之前其实并没有怎么听过Flutter，在参加了Google开发者大会后，经过工程师的介绍，才了解到原来还有这么一个东西。因为自己一直对前端以及移动端的技术比较感兴趣，于是回去便开始着手学习Flutter，尝到了一点甜头后，决定在自己的毕业设计中使用。 学习了大概两个星期的时间，了解了Flutter的基本语法，并把blog、github上的一些demo敲了一遍，然后开始设计毕设界面。毕业设计是做一个电影推荐app，将大概的布局提前在纸上构思了一下，便开始使用Flutter进行构建应用。 整个应用界面的构建大概花了五天时间，当然并不是说是整整五天都在捯饬这玩意，中间也有偷闲。可以看到，界面还不是很完善，比较单一，并没有进行网络交互，所有的数据都是写死的。当然了，这只是一个初步的框架，许多问题都需要在后期进行改进。 那么这样的一个app是如何构建起来的呢，与使用原生Android构建的应用又有那些不同呢？ 开发语言首先从开发语言说起，Flutter官方开发语言为Dart语言，这是一门与Java极为相似的面向对象语言，无论是语法还是特性，只需要有Java或者其他面向对象语言的基础，上手极快，学习成本非常低。下面是Dart的一个官方demo： 12345678910// Define a function.printInteger(int aNumber) &#123; print('The number is $aNumber.'); // Print to console.&#125;// This is where the app starts executing.main() &#123; var number = 42; // Declare and initialize a variable. printInteger(number); // Call a function.&#125; 界面设计在原生的Android应用构架中，界面的设计与逻辑是分离的。界面使用xml进行布局，页面逻辑使用Java进行编写。而在Flutter中，一切都是部件(Widget) ，所有的界面也是完全使用dart代码进行编写，并且支持热加载。即你修改完代码，刷新即可使应用更新。同时，Flutter内置了许多丰富的组件以及动画供开发者使用。 构建方式其实在应用的构建方式上，Flutter和原生还是非常相似的，依然都需要将实体类抽象出来。上面的应用中，其实每一个MovieItem都是一个实体类，通过数据填充的方式，将对应的属性填充到相应的组件中。 每个小的部件都可以独立出来，例如抽屉导航drawer，单独写成一个类，然后每个页面都可以使用。这种抽象的方式在Flutter中非常常见，这也使得Flutter的应用容易扩展，易于后期的修改。 总结Flutter目前来说其实还不稳定，还有很多的坑，这里真香警告。但是对我个人而言，觉得比使用原生的Android开发更加快捷，况且可以使用一套代码，构建出Android端和iOS端的应用，美滋滋？？]]></content>
      <categories>
        <category>Flutter</category>
      </categories>
      <tags>
        <tag>Flutter</tag>
        <tag>app</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[双飞保研经验]]></title>
    <url>%2F2018%2F10%2F25%2Fbaoyan-experience%2F</url>
    <content type="text"><![CDATA[说是说经验，其实就是记录我踩的一些坑，希望后来人能够避免。 前言昌航的保研指标一般在 9 月中旬才下发，在这之前，其实都我不能确定自己能否能够保研，和考研党一样，一直在紧张的复习中，每天的恋练有词，高数刷题一样地经历过。 大概在六月份，学院排了一下前五个学期的排名，我排在第五位。按照以往的指标，软件学院软件工程专业的名额刚好是五个，所以我只要保持，保研应该问题不大。在最后一个学期的考试中，感觉还不错，保研应该有希望，因此在暑假开始便着手了解保研的相关事宜。 说实话，之前一直对保研没什么概念，以为只要拿到保研资格，就可以直接入学了。在经历过失败后，事实证明我错了，明白了自己还不够优秀。 由于我们方向的培养方案不同，大三的暑假需要在南京这边参加实训，因此错过了一些高校的夏令营。直到八月，我才开始着手联系导师。俗话说，近水楼台先得月。由于刚好身处南京，而南京的高校也比较多，因此选择了南京大学和南京航空航天大学作为目标。在给几位导师发送了自荐信和简历之后，便静静的等待消息。有的邮件石沉大海，杳无音讯，有的邮件直接拒绝。最后南大的一位导师表示对我比较感兴趣，我加了他微信进一步的交流。 南京大学推免老师发了一些论文给我，让我自己阅读，并写一篇总结。论文是全英文的，说实话，阅读起来有点吃力。一星期后，我把论文看完，总结也写好了，给导师发过去，导师表示满意，并让我过去见面，商榷本科毕业论文的题目。这一切似乎进行的都很顺利。。。 然而，南大的保研导师是没有决定权的，你依然需要通过其他导师的面试以及上机考试。9 月初，我去参加了面试和机试。面试首先用英文介绍了自己，这个我准备的比较好，也很流利的说出来了。然后是用英文介绍自己的项目以及获得的奖项，这个准备的不是很充分，说的也比较结巴，可能留下了一些不好的印象。最后问了一些软件测试以及数据结构的相关知识，回答的还 ok。晚上进行机试，总共两道题目，一道算法题，一道面向对象，我只做出了一道，测试用例通过 33/43。 最后的的成绩为合格，不是很理想，导师也让我尽早做别的打算。第一次推免以失败告终，而这个时候以及接近九月中旬了，心里着实慌的一批。调整心态后，开始联系其他学校导师。 这里还是要对南京大学的推免做个小结，复试一定要做好充足的准备，南大十分看重英语能力以及实践能力，包括参加的一些比赛获奖，尤其是国奖，这个方面会非常加分，我认为我就差在这个方面，的确还是不够优秀，得不到其他导师的肯定，还得继续努力。 南京航空航天大学推免由于之前把太多的希望都放在了南京大学上面，甚至错过了其他学校的一些预推免，因此这里提醒各位学弟学妹，不要再一棵树上吊死，多做尝试。 之前还与南京航空航天大学的导师有过联系，导师也让我过去面谈。 与导师相谈甚欢，老师问了我自己做的项目，我直接将我做的东西拿给老师看，老师也比较喜欢。然后老师问我研究生的打算，我也将我自己的研究兴趣将给老师听，并表达出自己有继续深造的意愿。总之，经过一番轻松的交流，老师表示可以到他这边来学习，但是不能直博，要读博士的话可以帮我推荐博导。 谢过老师，我心里大概有了底，南航要进去的话应该问题不大。 华中科技大学大学推免华中科技大学的推免与教育部的推免时间一致，需要提交攻读研究生计划书，这个作为笔试成绩，然后进行电话面试，作为面试成绩。计划书更具以往情况，写一个项目的开题报告就行了。电话面试的话也没有很难的问题，问了一下家里面的情况，自己做的项目，研究生阶段的计划等等。最后，提示我面试通过，可以录取。 最后在南航和华科之间还是选择了华科，又是两年。 小结说实话，我的这次保研的经历应该是较为失败的，自己做出的尝试其实不多，抱有侥幸的心理，希望学弟学妹不要学我，一定要多尝试各个学校，面试也要多做准备。趁现在还有时间，多做项目，多参加比赛，丰富自己的经历。另外，也要多向别人请教，不要孤军奋战，共勉吧！]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
        <tag>笔记</tag>
        <tag>研究生</tag>
        <tag>经验</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2018 Google Developer Days 总结]]></title>
    <url>%2F2018%2F09%2F22%2Fgdd-experience%2F</url>
    <content type="text"><![CDATA[为期两天的Google Developer Days结束了，首先非常感谢知识星球球友的赠票，让我有这次与Google近距离接触的机会。不得不说，Google 是真的良心，不仅为每个参与的开发者准备了精美的礼品，大会期间的每个细节都做很好，很为开发者们着想。舒适的听会环境，免费的甜点和饮料，有趣的party以及丰富的产品体验等等。 大会会场大会第一天，早早的来到了世博中心，见到了大会的 logo 异常兴奋。 会场的布置简约大气，两边挂着分会场的分布图，中间是 Google 的 logo。一直十分喜欢 Google 的简白设计，加上一点原色的点缀，简约大方，赏心悦目。 大会演讲简单的参观后，来到主会场，参加大会的 keynote 开幕演讲。演讲的暖场视频放的中国的应用商是如何使用 Google 的技术，提高产品的开发效率以及用户的活跃度。 正式演讲前是一个互动环节，千人同玩猜画小歌，各种灵魂画手上线。 与此同时，猜画小歌也推出好友同玩的新功能，大家可以与自己的微信好友pk。 keynote 的正式演讲由 Google 各个产品的项目经理或者工程师介绍当前项目取得的新进展，以及将来的发展趋势。 Google AI在过去的一年，Google 在人工智能研究以及应用取得了很大进展。Gmail 智能补全，Google Translate 识图翻译，Google Photos 智能分类已经开始应用。 TensorflowTensorFlow 是一个深度学习的框架，可被用于语音识别或图像识别等多项机器学习和深度学习领域。大会介绍了TensorFlow 在 Google 产品中的应用，并且作为一个开源的框架，国内的一些应用厂商以及个人开发者也开始广泛的使用，例如腾讯广告业务、咸鱼、美团有道翻译等产品，都大面积的应用了 Tensorflow。 Android及其工具与语言Android系统在今年更新到了第九个版本，代号 Android Pie。 并且 Android 官方的开发工具 Android Studio 也正式更新到 version3.2，具有更快的编译速度，模拟器的启动速度也大幅度提升。 Kotlin 作为 Android 官方推荐的开发语言，越来越多的人使用Kotlin进行开发，根据问卷，已经有40%的中国开发者使用 Kotlin 进行 Android 应用的开发。 Wear OS功能越来越多，性能越来越强大，总之就是很好。 FlutterFlutter是一款移动应用框架，可以快速的打造美观大方的 App。Flutter 工程师再演讲中宣布发布 Flutter 最后一个预览版，这也是正式版发布前的最后一个版本。其中，新增了许多 iOS 的 Cupertino 风格组件。 ARCoreARCore 帮助开发者打造AR应用，京东平台使用AR技术来方便用户购买商品。例如购买一个冰箱，可以通过 AR 技术，模拟冰箱的大小及其摆放位置，方便用户的选择。 大会午餐大会为开发者提供的午餐，其中有一盒盒饭，一根香蕉，一包原味乐事薯片，以及一瓶印有 Google logo 的矿泉水，营养还算均衡，味道也还不错。 另外，用餐环境十分的舒适，恢弘大气的宴会厅，饭后还可以参观美丽的观景台。 体验区在体验区可以体验到 Google 的各种产品，包括 Move Mirror、猜画小歌、Android、Flutter 应用等等，你不仅仅可以参与体验，还能获得精美的奖品。另外，你也可以与大牛们进行技术交流。可怜我英语口语太渣，只能默默的羡慕那些人对飙英文。 Party晚宴Google为参加大会的开发者举办了晚宴，大家尽情释放。你可以与你的小伙伴参与游戏，可以毫无顾忌的吃上一顿，也可以随着音乐舞动。打了街机，投了篮，看了近景魔术，拿到了纪念T恤，关键还和 dj 小姐姐和了影。 以上就是这次 Google 大会的总结，最大的感悟就是英语很总要，另外就是终生学习。最后，向科技致敬！]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
        <tag>gdd</tag>
        <tag>感悟</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[可解释推荐系统]]></title>
    <url>%2F2018%2F08%2F26%2Fexplainable-recommendation%2F</url>
    <content type="text"><![CDATA[1. 摘要随着互联网技术和产业的迅速发展，接入互联网的服务器数量和网页数量也呈指数级上升。用户面临着海量的信息，传统的搜索算法只能呈现给用户（user）相同的物品（item）排序结果，无法针对不同用户的兴趣爱好提供相应的服务。为了解决信息过载(Information overload)的问题，人们提出了推荐系统。现如今，推荐系统已广泛地应用到互联网的许多方面。每天，我们阅读着新闻系统推荐的新闻，看着电影网站推荐的电影，听着音乐软件推荐的歌曲，并在电商平台上买下系统推荐的商品。个性化推荐系统的实现，大大方便了用户的使用，提升效率，也改善了用户的体验。 但是，用户面对着系统推荐的物品，心里可能会产生疑惑：为什么向我推荐这些内容。为了使得推荐内容更容易被用户所接受，通常在给用户推荐的同时，加上相应的解释。例如，推荐电影时加上“95%的用户观看后表示喜欢”，推荐商品时加上“根据购买记录推荐下面的商品”等等的解释。相比与传统的推荐系统，可解释系统不仅能够提升系统透明度，还能够提高用户对系统的信任和接受程度 、用户选择体验推荐产品的概率以及用户满意程度等等[^1]。 作为人工智能领域的一个重要分支，可解释推荐系统现已经应用到电子商务、医疗、学术等领域 ，推荐系统的可解释性也是一个重要的研究方向。在《Explainable Recommendation：A Survey and New Perspectives》[^2]中，作者介绍了解释生成的方法模型、可解释系统的评估以及可解释系统的发展方向。下面的内容是对文章的一个总结，并加上自己的一些理解。 2. 解释的形式面对不同的实际应用场景，推荐系统的解释有不同的形式。 2.1 基于用户和物品的解释基于用户和物品的推荐都是一种协同过滤推荐，根据目标用户的行为特征，发现一个兴趣相投、拥有共同经验的群体，然后根据群体的喜好来为目标用户过滤可能感兴趣的内容。基于用户的解释可以表诉为“跟您相似的用户都喜欢该物品”，基于物品的解释可以表诉为“这个物品和您喜欢的其他物品相似”。 2.2 基于内容的解释基于内容推荐解释常见的表现形式是将推荐物品中用户感兴趣的主要特征进行列举。例如，对于基于电影类型，演员，导演等生成电影推荐；基于书籍类型，价格，作者等提供书籍推荐。比如，《哈利·波特》是一本科幻小说；用户爱丽丝很喜欢科幻小说，系统就会直接推荐一本新出版的《哈利·波特》给爱丽丝。 通过以特征作为解释，用户可以直观的理解内容为什么被推荐。 2.3 文本解释文本解释通常是生成一条文本语句作为解释。通过建立模型，分析大量的评论信息，并提取评论当中的特征及其相对应感情色彩，基于模板生成合理的评论句子作为解释。例如，“你也许对【特性】感兴趣”。系统不仅可以提供内容被推荐的解释，同时也能够提高内容不被推荐或者不适合用户的原因，这提高了推荐系统的说服力，可信度。文本解释句子也可以在没有模板的情况下生成，通过使用长期短期记忆（LSTM）生成项目的评论解释，并通过基于学习的大规模用户评论数据，模型可以自动生成合理的评论句子作为解释。 2.4 视觉解释利用视觉图像的直观性，尝试利用产品图像进行可解释的推荐。采用与图像和文本评论信息相结合的神经注意机制来了解图像中每个区域的重要性，并将重要区域作为视觉解释进行突出显示。 2.5 社交解释社交解释通常被应用在社交网络的朋友推荐上。在基于用户的解释中，目标用户可能根本不知道具有“相似兴趣”的用户，通过告诉用户他/她的社交朋友对推荐项目有类似兴趣，那么内容将更容易被接受。UniWalk算法就利用评级数据和社交网络来生成可解释和准确的产品推荐。 2.6 混合解释在许多实际系统中，将多种类型的解释整合为对用户的混合解释，以使用户可以从多个角度理解推荐。系统利用多种推荐算法来构建混合推荐系统，因此，对混合推荐输出的解释一致是十分重要的。 3. 可解释推荐系统模型目前大多数的可解释推荐方法是基于模型的方法，即推荐由矩阵/张量因子分解，分解机，主题建模和深度推荐模型等模型提供，同时，模型的推荐结果可以作为解释。 3.1 矩阵分解模型许多可解释的推荐模型是基于矩阵分解的方法提出的，最为典型的代表有隐因子模型(LFM)和显因子模型(EFM)。 3.1.1 隐因子模型(LFM)隐因子模型抽象出隐因子空间，其中隐因子可以理解为一个用户喜欢一个电影的隐形原因，比如电影里面有他喜欢的romantic和action元素，还有他喜欢的某个演员或者导演编剧。如果另外一个电影有类似的元素跟演员，那么他很有可能会也喜欢这部电影。LFM的核心思路就是通过评分矩阵，求出用户的向量和电影的向量[^3]。隐因子模型的特点是分类过程中，不需要关心分类的角度，结果都是基于用户打分自动聚类的，分类的粒度通过设置LFM的最终分类数来控制。 但是，隐因子模型存在着一些不足： 单一的打分不能反映用户对物品各项特征的偏好，没有利用到用户评论。 类别是抽象出来的，没有明确的含义，所以向用户推荐物品时，很难给出推荐解释。 3.1.2 显因子模型为了避免隐因子的一些问题，研究者提出了显因子模型，其基本思想是推荐在用户关心的功能上表现良好的产品[^4]。 通过对用户评论进行phrase-level（短语级）的情感分析，显式地抽取物品的特征和用户的意见。 例如下图，从用户评论中抽取物品的特性：screen、earphone。然后，抽取用户对这些特征的意见：perfect、good。如果这些表示意见是积极的情感，则用1表示；反之则用-1表示。所以在下面的例子中，情感短语表示为（screen, perfect, 1）, （earphone, good, 1）这样的三元组，这一条条短语就组成了情感词典。 通过构建用户打分矩阵、用户-特征关注矩阵以及物品-特征质量矩阵，估计损失值，最后生成Top-K推荐，并可根据特征向用户解释推荐理由。 显因子模型主要的优点有： 充分利用用户评论，提高算法的精准度。 直观地解释推荐理由，从而帮助用户更快决定是否购买。特别是建议用户不要购买某些物品，有助于提高用户对系统的信任度。 另外，也有研究者将此模型拓展到张量均匀化，构建用户-项目-特征立方体，通过成对学习精选排序以确定用户对特征和项目的偏好，这有助于缓解矩阵稀疏性的问题。 3.1.3 其他有研究者提出了情感效用逻辑模型（SULM），通过从评论中提取用户对物品特征的情感，并将这些特征和情感被整合到矩阵分解模型中，适应未知的情绪和评级，最终用于生成建议。所提出的方法不仅向用户提供推荐的项目，而且还提供项目的推荐特征，并且这些特征用作推荐的解释。 另外研究人员还研究了基于模型的用户和/或基于项目的解释方法，这些方法可以仅根据用户项目评级矩阵提供可解释的建议。也有科学家提出提出可解释的受限Boltzmann机器用于协同过滤和推荐，该方法可提供基于用户的邻域样式解释。 3.2 主题模型主题模型是对文字隐含主题进行建模的方法。例如，判断两篇文档是否相关往往不只决定于字面上的词语重复，还取决于文字背后的语义关联。对语义关联的挖掘，可以让我们的搜索更加智能化。而主题模型则是用于解决这个方法的非常经典的模型。 它克服了传统信息检索中文档相似度计算方法的缺点，并且能够在海量互联网数据中自动寻找出文字间的语义主题。 研究者们首先提出隐藏因子和主题（HFT）模型，通过将项目（或用户）潜在向量的每个维度相关联，将潜在因子模型和潜在Dirichlet分配（LDA）联系起来，提高评级预测的准确性。随后，有研究者提出提出了FLAME模型（Factorized Latent Aspect ModEl），它结合了协同过滤和基于方面的意见挖掘的优点。从过去的评论中了解用户对不同方面的个性化偏好，并通过集体智慧预测用户对新项目的评估。 3.3 深度学习模型深度学习和表征学习在推荐研究界引起了很多关注，并且它们被广泛应用于可解释的推荐上。到目前为止，相关的可解释推荐模型涵盖了广泛的深度学习技术，包括卷积神经网络（CNN），循环神经网络RNN / 长短期记忆网络（LSTM），注意力机制，记忆网络等，它们被应用于关于可解释性的各种推荐任务，例如top-n推荐， 顺序推荐等。 有研究者使用卷积神经网络（CNN），对具有双重局部和全局关注的文本评论来模拟用户偏好和物品属性，突出显示评论中的相关单词作为解释，以帮助用户理解建议。另外也有研究者引入了注意机制来探索评论的有用性，并提出了一种神经注意回归模型，其中包含了复习水平的解释推荐。最近，基于自然语言生成的可解释建议已经应用于商业电子商务系统。例如，淘宝的推荐系统根据数据对序列的自然语言生成推荐项目解释。 3.4 知识图谱知识图谱最初由谷歌公司于2012年5月16日宣布推出，旨在提升搜索引擎返回的答案质量和用户查询的效率 。有知识图谱作为辅助，搜索引擎能够洞察用户查询背后的语义信息，返回更为精准、结构化的信息，更大可能地满足用户的查询需求[^5]。 在各种辅助信息中，知识图谱作为一种新兴类型的辅助信息近几年逐渐引起了研究人员的关注。知识图谱（knowledge graph）是一种语义网络，其结点（node）代表实体（entity）或者概念（concept），边（edge）代表实体/概念之间的各种语义关系（relation）。[^6]一个知识图谱由若干个三元组（h、r、t）组成，其中h和t代表一条关系的头结点和尾节点，r代表关系。例如下图所示的关系，表达了斯蒂文·斯皮尔伯格导演了头号玩家电影，其中h=斯蒂文·斯皮尔伯格、t=头号玩家、r=导演。 通过组合若干个语义关系，可以生成知识图谱。知识图谱中包含了实体之间丰富的语义关联，可为推荐系统提供了潜在的辅助信息来源。和其他的推荐模型相比，知识图谱的引入可以让推荐系统有如下特性： 精确性。知识图谱为物品引入了更多的语义关系，可以深层次地发现用户兴趣。 多样性。知识图谱提供了不同的关系连接种类，有利于推荐结果的发散。 可解释性 。知识图谱可以连接用户的历史记录和推荐结果，从而提高用户对推荐结果的满意度和接受度，增强用户对推荐系统的信任。 但是，知识基于路径的知识图谱推荐方法存在一定的局限性，研究者提出了Ripple Network。这是一个将知识图纳入推荐系统的端到端框架，类似于在水面上传播的实际波纹，通过自动迭代，沿知识图中的链接扩展用户的潜在兴趣，并可以在知识图上找到推荐项路径来提供解释。 3.5 数据挖掘数据挖掘方法对于推荐研究很重要，数据挖掘方法通常具有可解释推荐的特别优势，因为它们可以生成非常直接的解释，并且这些解释易于用户理解。一个典型的例子就是“沃尔玛啤酒和尿布”的故事。 现如今，很多的互联网平台，包括电商、视频、打车等平台在内，都会使用数据挖掘的方式对用户进行商品的推荐，用户每天浏览消费，产生海量的数据供平台分析。平台通过分析数据，可以直观的告知用户当前的流行趋势、地区特色等等，并以此为解释将物品推荐给用户。 作者还在文中提到Youtube视频推荐系统，推荐系统是通过网站上用户监视活动的会话，为每个用户设置视频的种子集，其中包括用历史、收藏、喜欢、评级等等视频，将这些种子视频的相关视频作为推荐候选项目，并将关联规则作为解释。虽然现在（2018年）Youtube的视频推荐是不提供推荐解释，但是推荐到内容却是如此的精准，这是因为Google在2016年开始采用了深度学习算法，包括Google Assistant、Google Map、Google Photos等等谷歌产品。尤其是在今年2018的Google I/O大会上，Google的AI技惊四座，将AI又推向新的热潮。 4. 可解释推荐系统的评估中国有句谚语：鱼和熊掌不可兼得，这似乎一直是一个历史难题。人们在想要得到某一些东西的时候，往往需要失去另一些东西。在算法领域，为了设计出一个时间效率高的算法，通常会舍弃一些空间，这是所谓的空间换时间。同样的，在推荐领域，为了使得推荐性能更好，不得不在可解释性上做出让步。因此，可解释的推荐算法的评估主要在评级预测或top-n推荐方面，以及评估说服性和有效性等方面的解释性能。下面就推荐性能以及推荐解释性的评估方法做出总结。 4.1 推荐性能评估推荐性能的评估方法分为离线评估和在线评估。在离线方法中，通常可以使用平均绝对误差（MAE）和均方根误差（RMSE）来评估评级预测的性能。对于top-n推荐，可以使用许多排名度量进行评估。 最常用的度量可以是精确度，召回率，F1度量值，归一化折扣累积增益量（NDCG）等。在在线方法中，通过点击率（CTR），转换率（CR）以及其他与业务相关的衡量指标进行评估。在线评估通常被商业公司使用，可以通过大量用户的访问进行实验。 4.2 解释性能评估解释性能评估的方法中也包含在线评估和离线评估，另外还包括用户研究和案例研究评估。通常，在线评估更容易实施，而在线评估和用户研究取决于实际系统中数据和用户的可用性。 4.2.1 离线评估离线评估通常有两种评估推荐解释的方法。一种是忽略解释质量，评估可解释推荐模型可以解释的推荐项目的百分比；第二种方法是准确评估解释的质量。但是，为了更全面地评估建议解释，需要更多的离线评估措施和协议。 4.2.2 在线评估评估解释建议的另一种方法是通过在线实验，也是基于转换率（CR）和点击率（CTR）等在线测量，类似于推荐性能的在线评估。可能有几种不同的观点需要考虑在线评估解释，包括说服力，有效性，效率和解释的满意度。 4.2.3 基于用户研究的模拟在线评估在线评估需要一个拥有大量用户的已部署系统，这通常需要广泛的协作或与商业公司合作。一种较为简单的方式是通过基于志愿者或付费实验科目的用户研究，模拟在线评估。志愿者或有偿受试者可以直接由研究人员雇用，也可以基于各种在线众包平台聘用。 4.2.4 案例研究定性评估作为定性分析的案例研究也经常用于可解释的推荐系统研究。提供案例研究有助于理解可解释推荐模型背后解释的有效性，并且有助于读者理解提议的方法何时起作用以及何时不起作用。研究者提供了解释顺序的案例研究，作者发现许多顺序建议都可以根据用户的“一对多”或“一对一”行为模式进行解释，这些解释可以帮助用户清楚地理解为什么推荐一个项目，以及推荐的方式。 5. 可解释推荐系统的应用可解释推荐的研究和应用跨越了许多不同的场景，例如可解释的电子商务推荐，可解释的社交推荐，可解释的多媒体推荐等，甚至在医疗、学术等领域 ，也已经开始应用。 可解释推荐系统在电子商务产品的推荐中被广泛采用，平台通过商品的推荐可以提供个性化服务，提高用户信任度和粘性。当然，还可以增加营收。 例如，亚马逊每年35%的销售额都来源于它的推荐。在社交领域中，好友的推荐、新闻推送推荐以及以及社交环境中的博客，新闻，音乐，旅行计划，网页，图像，标签等的推荐。社交关系不经能够提高推荐性能，还可以提高推荐的解释能力。可解释性推荐对许多其他应用场景也很重要，例如学术推荐，引用推荐，医疗保健推荐等。虽然关于这些主题的直接可解释推荐工作仍然有限，但研究人员已开始考虑可解释性问题在这些系统中。 6. 新的研究方向长期以来，推荐系统主要集中在开发广泛的模型，以尽可能有效地找到最相关的结果。然而，推荐模型的可解释性却被忽视了。缺乏可解释性主要存在于两个方面： 推荐系统的输出（即推荐结果）难以向系统用户解释。 推荐模型的机制（即推荐算法）对系统设计师来说难以解释。 现如今，随着科技的不断发展，不断有新的研究成果出现，我们可以通过使用深度学习、知识增强、异构信息模型、自然语言生成等技术，来使得推荐模型生成解释。作为人工智能领域的一个研究分支，越来越多的人加入到其中的研究。期望知识图谱技术，深度学习，自然语言生成，动态建模，模型聚合和会话系统技术在可解释的推荐方面取得更多成就，可解释的推荐系统的目标也将超越说服力，以进一步使系统用户/设计者在许多其他方面受益。 [^1]: 微软亚洲研究院. 可解释推荐系统：身怀绝技，一招击中用户心理. https://zhuanlan.zhihu.com/p/29374802.[^2]: Yongfeng Zhang and Xu Chen. Explainable Recommendation：A Survey and New Perspectives. arXiv Preprint 2018. arXiv:1804.11192.[^3]: CSDN. LFM (Latent Factor Model) 隐因子模型 + SVD (singular value decomposition) 奇异值分解. https://blog.csdn.net/asd136912/article/details/78290679.[^4]: Zhang Y, Lai G, Zhang M, et al. Explicit factor models for explainable recommendation based on phrase-level sentiment analysis[M]. ACM, 2014.[^5]: Wikipedia. Knowledge Graph. https://en.wikipedia.org/wiki/Knowledge_Graph.[^6]: 微软亚洲研究院. 推荐算法不够精准？让知识图谱来解决 https://zhuanlan.zhihu.com/p/37943501.]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>推荐系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Flutter 组件介绍]]></title>
    <url>%2F2018%2F07%2F16%2Fflutter-component-intro%2F</url>
    <content type="text"><![CDATA[Flutter 是 Google 开源的跨平台移动开发框架，它能够使开发者快速的构建出美观的、高性能的移动应用程序。 Flutter 的核心理念：一切皆为 Widget。手机应用里的所有东西都是 Widget，开发者通过可组合的空间集合、丰富的动画库实现了富有感染力应用界面设计。 Flutter 的 UI 库里面有两套小部件 —— Material Design（适用于 Android ）和 Cupertino（适用于 iOS ）今天，通过 Flutter Gallery，也就是一个 demo 来给大家展示 Flutter 的组件。 首先是 Material Design 风格的的组件 底部导航栏（Bottom navigation）底部导航栏分为固定以及渐变导航，由图标以及文字组成 按钮（Buttons）按钮有图标按钮，扁平按钮，浮动按钮等等 卡片（Card）卡片包括了图片、标题以及操作按钮 芯片（chips）这个有点类似于一个 badge，可以当作标签使用 日期和时间选择器（Date and time pickers） 对话框（Dialog） 侧边导航 （Navigation drawer） 可展开列表 （Expand/collapse list control） 浮动按钮 （Floating Action Bar） 网格布局 （Grid list） 图标 （Icon） 进度指示 （Progress indictors）分为圆形和条状的进度指示 可滚动的标签页 （Scrollable tabs） 滑动条 （Sliders）分为连续以及不连续的滑动条 下面是 iOS 风格的组件 按钮（Buttons） 对话框 （Dialog） 滑动条 （Sliders） 切换按钮 （Switches） 导航 （Navigation） 以上就是 Flutter 中的所有的组件，需要用时可以参考。]]></content>
      <categories>
        <category>Flutter</category>
      </categories>
      <tags>
        <tag>Flutter</tag>
        <tag>组件</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[小程序添加广告并获取收益]]></title>
    <url>%2F2018%2F07%2F15%2Fmp-add-banner-ad%2F</url>
    <content type="text"><![CDATA[小程序广告组件最近全面开放，门槛十分低，只需要累计独立访客（UV）不低于 1000，并且没有严重违规记录。下面教大家如何在小程序中添加广告。 申请成为流量主首先进入小程序后台，点击流量主，点击开通。 同意协议并点击下一步。 填写个人的相关信息，包括身份证、收款账户等等。 最后提交，系统会进行审核，审核时间说是大约一周，但是我上午提交的申请，下午就通过了，效率还是挺高的。 在小程序中嵌入广告审核通过后，后台界面会做出相应的变化，我们根据提示来创建广告位。点击立即创建，填写广告的名称，点击确定。 创建好后就会显示在管理页面中，你也可以选择创建多个广告，但是有些广告的曝光率会比较低。 点击获取代码，将广告位的代码复制下来，并放在小程序的相应位置 然后打开微信开发者工具，打开你的小程序工程，在相应的位置粘贴广告代码，保存编译，广告就显示在小程序中了。至于广告的位置，建议放在底部最为合适，如果放在中间，用户的体验会非常的不好。 最后上传代码，并提交给后台进行审核，审核通过后，你的小程序便可以重新发布，小程序下面就出现了广告 banner。 收益统计在后台可以对小程序广告的点击次数、曝光量以及收益进行统计，平均点击一次的收益为 0.5 元，所以如果你的小程序的用户数量足够庞大，完全就能够实现财务自由了。 小程序现在学习门槛极低，变现门槛也很低，有兴趣的完全可以学习一下，尤其是我们大学生，如果能够变现，多多少少可以减轻一些生活上负担。]]></content>
      <categories>
        <category>小程序</category>
      </categories>
      <tags>
        <tag>小程序</tag>
        <tag>广告</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[「校徽头像小程序」开发教程]]></title>
    <url>%2F2018%2F07%2F09%2Flogo2avatar-dev-tutorial%2F</url>
    <content type="text"><![CDATA[之前公众号推过一个头像制作的工具类小程序，通过图片叠加的技术，实现头像与校徽图片的叠加，并生成新的头像图片，今天首先教大家制作小程序前台界面。 1、创建工程打开微信开发者工具，新建一个工程，输入自己的AppID，勾选快速启动模板，点击确定。 2、编写页面元素代码页面设计的非常的简单，一个卡片式的方块存放图片，加上两个简单按钮。选择index文件下的index.wxml，删除原有代码，写入新的页面代码如下。 123456789101112&lt;!--index.wxml--&gt;&lt;view class="container"&gt; &lt;view class="userinfo card"&gt; &lt;image bindtap="bindViewTap" class="userinfo-avatar" src="&#123;&#123;avatarUrl&#125;&#125;" mode="cover"&gt;&lt;/image&gt; &lt;/view&gt; &lt;/view&gt; &lt;view class='operation'&gt; &lt;button bindtap='openAlbum' type='default' size='&#123;&#123;buttonSize&#125;&#125;'&gt;选择相册图片&lt;/button&gt; &lt;button bindtap='exportPic' class='export' size='&#123;&#123;buttonSize&#125;&#125;' type='primary'&gt;一键导出头像&lt;/button&gt; &lt;/view&gt;&lt;/view&gt; 3、编写css代码如果只写上面的代码，页面会非常的难看，我们需要编写一些css代码，将页面的整体布局调整为我们能够接受的样子。首先修改index.wxss，设置图片的长宽，并修改&lt;view&gt;标签的样式，为其添加阴影，最后设置按钮的长度以及间距。代码如下：1234567891011121314151617181920212223242526272829303132333435363738/**index.wxss**/.userinfo &#123; display: flex; flex-direction: column; align-items: center;&#125;.userinfo-avatar &#123; width: 450rpx; height: 450rpx; margin: 20rpx;&#125;.card &#123; position: relative; margin: .5rem 0 1rem 0; background-color: #fff; -webkit-transition: -webkit-box-shadow .25s; transition: -webkit-box-shadow .25s; transition: box-shadow .25s; transition: box-shadow .25s, -webkit-box-shadow .25s; border-radius: 2px; -webkit-box-shadow: 0 2px 2px 0 rgba(0,0,0,0.14), 0 1px 5px 0 rgba(0,0,0,0.12), 0 3px 1px -2px rgba(0,0,0,0.2); box-shadow: 0 2px 2px 0 rgba(0,0,0,0.14), 0 1px 5px 0 rgba(0,0,0,0.12), 0 3px 1px -2px rgba(0,0,0,0.2);&#125;.userinfo-nickname &#123; color: #aaa;&#125;.operation &#123; margin-top: 50rpx;&#125;.export &#123; margin-top: 30rpx;&#125; 然后，修改整体元素的布局，修改app.wxss中的代码，为container类中的元素添加外边距，代码如下： 1234/**app.wxss**/.container &#123; margin: 50rpx;&#125; 4、编写js代码js代码主要是图片的上传与下载以及页面元素数据的绑定。首先是对页面绑定的数据进行填充，这里有两个数据，一个是图片的url，另一个是按钮的大小。代码如下： 1234data: &#123; avatarUrl: "https://zouxiaoming.xyz:8443/images/152799490334logo.png", buttonSize: 'default' &#125;, 然后通过自定义函数对两个按钮的点击事件进行绑定，首先是点击选择相册图片按钮，需要打开手机相册，选择照片后再对照片进行上传，服务器接收到了图片请求，会将处理好的新的图片的url返回。如果成功，会执行success的回调函数，因此我们在success的函数中将新的图片url进行数据绑定，并提示上传成功。代码如下： 12345678910111213141516171819202122232425262728293031323334353637383940openAlbum: function () &#123; var that = this; // 打开手机相册 wx.chooseImage(&#123; success: function (res) &#123; var tempFilePaths = res.tempFilePaths; // 上传图片 wx.uploadFile(&#123; url: 'https://zouxiaoming.xyz:8443/avatar_change/saveHeaderPic', filePath: tempFilePaths[0], name: 'file', // 上传成功，执行success函数 success: function (res) &#123; var data = JSON.parse(res.data); var avatar_url = 'https://zouxiaoming.xyz:8443/avatar_change/images/' + data.url; that.setData(&#123; avatarUrl: avatar_url &#125;); // 弹出toast提示 wx.showToast(&#123; title: '图片上传成功', icon: 'succes', duration: 2000, mask: true &#125;); &#125;, // 如果失败，执行fail函数 fail: function () &#123; wx.showToast(&#123; title: '图片上传失败', icon: 'none', duration: 2000, mask: true &#125;); &#125; &#125;) &#125;, &#125;) &#125; 保存代码，工具自动编译运行。 选择一张图片进行上传测试，后台我已经搭好了，大家如果需要测试记得上传地址就和代码里的一致就行。 最后就是保存图片了，首先为一键导出头像按钮定义一个点击事件，然后再事件中下载图片。代码如下：1234567891011121314151617181920212223242526272829303132// 导出图片exportPic: function () &#123; var that = this; // 下载图片 wx.downloadFile(&#123; url: this.data.avatarUrl, success: function (res) &#123; console.log(res); // 保存图片至相册 wx.saveImageToPhotosAlbum(&#123; filePath: res.tempFilePath, success: function (res) &#123; console.log('success'); wx.showToast(&#123; title: '保存成功', icon: 'succes', duration: 2000, mask: true &#125;); &#125; &#125;) &#125;, fail: function () &#123; wx.showToast(&#123; title: '图片下载失败', icon: 'none', duration: 2000, mask: true &#125;); &#125; &#125;) &#125; 点击导出按钮，图片就导出到本地了，如果在手机上测试则会导出到手机相册。 最后再去更换自己的头像吧！ 总结其实这个小程序实现起来并不是很难，只有一些简单的事件绑定。只需要了解一些小程序基本的api，就能够开发出来，大家有时间的可以去试试，后台我已经搭好了，大家可以直接使用。 有疑问的记得留言哦，我会尽力解答的，本次教程的源码在公众号后台回复校徽头像小程序源码可以获得下载连接。看完了别忘了点个赞哦！]]></content>
      <categories>
        <category>小程序</category>
      </categories>
      <tags>
        <tag>小程序</tag>
        <tag>开发教程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[百度云破解]]></title>
    <url>%2F2018%2F06%2F22%2Fbaidu-cloud-pojie%2F</url>
    <content type="text"><![CDATA[百度网盘破解不限速，手机和电脑端的都有，再也不用看百度的脸色了 百度网盘现在是市面上较为流行的网盘软件，经常会在上面分享或者保存一些文件。之前注册的用户免费赠送 2T 的内存空间，现在只有做任务才能领取。 然而这都不重要，百度网盘给我们带来便利的同时，有时候也是让我们抓狂。是的，就是它那缓慢的下载速度。正常的时候下载速度有几百 KB，这个还能够接受。但软件往往抽风，对网络做出网速限制，速度只有几 KB 或者几十 KB。这对于用户来说是无法忍受的。 想一想，你找到了一部你想看的电影，大概 1G 左右。但是就是那几十 KB 的网速，需要下载两三个小时，看电影的心情早就没了。 因此，给大家推荐下面两个软件，一个是 Android 端的 App，另外一个是电脑端的应用程序。可以分别在电脑以及手机端使用，下载速度不会受限制。经过测试，20M 的宽带下载速度最快可达到 2M/s 左右。 Village这是一个 Android 端的 App，除了不能在线看视频外，基本还原了百度网盘 app 的所有操作。另外，还支持多帐号登录，自定义分享密码，批量重命名等等。关键下载网速不受限制，支持自定义多线程下载，移动网络下载最快可以达到 10M/s。 另外还有一个超级强大的资源搜索功能，能够搜索到全网的分享资源。比如我想听听 Taylor 的歌或者想看最近的电影，直接搜索，如果有结果，可以保存到自己网盘后进行下载。 公众号后台回复 Village 下载 PanDownload这是一个 Windows 端的应用程序，同样也是破解网速的限制。无需安装，解压即用。第一次进去需要登陆，剩下的操作就和电脑端的差不多了，除了界面土了点。基本功能都有，另外还可以设置下载完关机。 公众号后台回复 PanDownload 进行下载 如果用得心里过意不去，还是冲个会员支持一下正版吧]]></content>
      <categories>
        <category>效率工具</category>
      </categories>
      <tags>
        <tag>效率</tag>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[小程序学习感悟]]></title>
    <url>%2F2018%2F06%2F21%2Fthoughts-about-mp-learning%2F</url>
    <content type="text"><![CDATA[2017年1月，微信正式发布小程序，小程序逐渐进入公众的视野。不温不火的几个月，随着小程序的生态不断的扩大完善，用户数量呈爆炸式的增长，越来越多的人投入小程序的怀抱。 当时的我，正值大二，小菜鸟一枚。不知道什么是前端，什么是后端，更别提服务器了，所掌握的不过仅仅是常规的课堂知识。没有做过实际的项目，只会用Java写一个Hello World。心里其实是想去学一些东西，但却往往是没有方向，不知道从何下手。 于是乎我便自己摸索，大二的寒假，我抽时间将数据库方面的知识提前学习了一下，并在大二下学期的课程设计中运用，这应该算是我第一次实际的项目经历了。大二下学期是我学东西学得最多的一个学期，除了上课或者带训，其他时间我几乎都在学习专业知识。HTML，JavaScript，CSS，Android，JSP等等。 很多人会有这样的感觉，学的时候一脸懵逼，不知道学的东西能用来干嘛，不知道如何应用。但是其实知识这种东西是需要慢慢积累的，等到积累到一定的程度，便融汇贯通了。 微信的每次更新我都在关注，直到微信小程序的上线，微信的生态及其宏大的战略观，微信的每一步棋下的是如此之妙。在我打好了一定基础之后，大二的暑假我便开始了小程序的学习。买了本小程序的教程书，结合微信官方给的文档进行学习。发现小程序上手真的很快。你只需要掌握一些基本的前台网页相关的知识，就可以制作出一个简单的小程序。当然了，如果要进行前后台的交互，还需要服务器以及数据库相关知识。 我的第一个小程序是一个天气查询的小程序，使用的是百度api的天气数据接口（现在接口应该失效了）。说实话，作用不是很大，用户数也是寥寥无几。但是对我来说确实是一个小小的锻炼，理解了小程序的工作原理及其运行机制。之后，我又制作了一个音乐播放的小程序，遗憾的是，在用户数快到达5w的时候，微信停止了所有个体单位开发的音乐类小程序，可能是因为版权原因，也无法再打开使用。 但是在经过两个小程序的实操后，对小程序的开发流程已经是了如指掌。这学期在不到两天的时间里面，开发了体测计算器以及校徽头像的小程序，用户数现在也较为可观。 就学习小程序开发利弊来说，小程序的迭代更新速度比较快，可能你的小程序昨天还可以用，第二天就崩了。因为微信这边要从用户体验的角度考虑，必须不定期的对小程序的API进行更新，因此代码也得进行相应的改变。但总的来说，小程序还是非常值得大家去学习，不仅能锻炼到自己的编程能力，如果小程序的用户数大的话，也是对自己的一种鼓励，还可以获得一定的广告收入。]]></content>
      <categories>
        <category>小程序</category>
      </categories>
      <tags>
        <tag>随笔</tag>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[科学上网]]></title>
    <url>%2F2018%2F06%2F16%2Fscience-fuck-net%2F</url>
    <content type="text"><![CDATA[免费科学上网，超级简单 众所周知，我们国家为了网络安全以及营造一个良好的网络环境，对某些网络做了一些安全限制。很多人不理解，但就中国现如今的国情，这确实是一个正确的举措。 对于我们这个专业来说，如果遇到问题无法在国内的网站上找到解决方案，这时候需要去国外的网站上进行一些资料的查找，例如 Google 学术、维基百科、Stack Overflow 等等。甚至我们写论文的时候，也会需要去参考一些外文资料。因此，科学上网成为一种生存的本领。 另外，还可以使用一些国外比较优秀的应用，例如使用 Youtube 用来学学英语、Google 套件方便自己的工作，Instagram 或者 Twitter 来填补一下在外网社交方面的空缺。 那今天就教教大家如何在 Android 手机以及 Windows 系统中进行科学上网。 snap vpn这是一个手机端的vpn应用，傻瓜式操作，一键连接。有多条免费的线路可以选择，不限流量，不限时间，但用到一定流量会进行限速。YouTube 视频最快可以达到 5M/s，手机上刷刷 Instagram、Twitter 或者 Youtube 完全不成问题，能够解决大部分人手机端的需求。公众号后台回复 Snap 可以获得下载链接。 Shadowsocks一个电脑端的服务器代理，很多人都是通过买外网服务器，然后搭建 ss 或者 ssr。这里教大家使用免费的服务器。首先下载 Shadowsocks 的客户端，客户端不需要安装，下载好就可以使用。打开客户端，屏幕右下方任务栏出现一个灰色的小飞机图标。 然后在浏览器输入网址：https://get.ss8.fun/ ，打开下面的网页。 任意点击一张图片，会弹出服务器的二维码。 右击小飞机图标，选择服务器 —&gt; 扫描屏幕上的二维码。 扫描完后，弹出弹框，直接点击确定。 最后右击小飞机，启用系统代理，这时候小飞机图标变成亮白。然后在浏览器地址栏中输入一下 Google 的地址：https://www.google.com/ ，发现成功打开 Google 的首页，也可以进行搜索。 Youtube 也能上去，速度还不错，看高清的也不卡。 后台回复小飞机下载客户端。 最后祝大家上网愉快]]></content>
      <categories>
        <category>效率工具</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>科学上网</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[记录一次维权经历]]></title>
    <url>%2F2018%2F06%2F12%2Fa-defend-note%2F</url>
    <content type="text"><![CDATA[某客来牛排店出售过期啤酒，下面是维权过程 前不久，和两个朋友一起去学校附近山姆会员店的某客来牛排店吃牛排。点了三份牛排，三瓶百威啤酒。打开啤酒时，啤酒的气冒的有点足，但是喝之前并没有摇晃。喝了两口，觉得有点不太对劲，便看了看瓶子标签的生产日期。一看傻眼了，生产日期2017年7月，保质期6个月，足足过期5个月。 我和朋友们说，咱们这顿饭应该可以免单了。首先拿相机拍下了啤酒瓶上的标签作为证据，然后上网查了一下相关法律条款，商家需要十倍赔偿。一瓶百威十块钱，我们点了三瓶，因此按照法律规定，商家需要赔付我们300元的赔偿金。 很巧的是，有位朋友的姐姐是一名律师，还特地打电话咨询了一下，同样给出的答复是要求十倍的赔偿，并且可以拨打消费者协会电话12315进行举报。之后，经理过来和协商，我们便顺理成章的免费吃了一次牛排。 大家出去吃东西或者买东西时一定要查看生产日期。如果出现这种情况，也要学会维护自己的合法权益。不要让别人认为学生是好欺负的，惹谁也不要惹知识分子。 突然觉得，懂点法律知识真的很重要]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
        <tag>维权</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用 reveal.js 制作网页 ppt]]></title>
    <url>%2F2018%2F06%2F06%2Frevealjs-make-ppt%2F</url>
    <content type="text"><![CDATA[今天教大家使用reveal.js，制作一个简洁优雅的网页ppt。在这之前，你需要一些基本的HTML以及CSS的技能基础。 1、准备工作 下载插件，插件下载地址：https://github.com/hakimel/reveal.js 解压文件，将相关的js以及css引入html界面 1234567891011121314151617181920&lt;!doctype html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"&gt; &lt;title&gt;reveal.js&lt;/title&gt; &lt;!-- reveal基本的css --&gt; &lt;link rel="stylesheet" href="css/reveal.css"&gt; &lt;!-- 引入黑色主题 --&gt; &lt;link rel="stylesheet" href="css/theme/black.css"&gt; &lt;!-- 用于显示代码高亮 --&gt; &lt;link rel="stylesheet" href="lib/css/zenburn.css"&gt; &lt;/head&gt; &lt;body&gt; &lt;!-- reveal基本的js，里面集成了一些转场动画 --&gt; &lt;script src="js/reveal.js"&gt;&lt;/script&gt; &lt;/body&gt;&lt;/html&gt; 2、制作第一页ppt在html页面中创建两个div块级元素，注意，class类名必须分别为reveal和slides。在第二层div中创建section标签，每一个&lt;section&gt;块都生成一张单独ppt。最后，在js代码中对页面进行初始化。 123456789101112131415161718192021&lt;!-- 这里省略引入css代码，记得加上 --&gt;&lt;div class="reveal"&gt; &lt;!-- 所有的幻灯片都放在一个类为slides的div中 --&gt; &lt;div class="slides"&gt; &lt;!-- 每一个&lt;section&gt;块都生成一张单独ppt --&gt; &lt;section&gt; &lt;!-- ppt标题 --&gt; &lt;h1&gt;How to use jQuery&lt;/h1&gt; &lt;!-- ppt正文 --&gt; &lt;p&gt; &lt;small&gt;Presented by &lt;a href=""&gt;MayanDev&lt;/a&gt;&lt;/small&gt; &lt;/p&gt; &lt;/section&gt; &lt;/div&gt;&lt;/div&gt;&lt;!-- 这里省略引入js代码，记得加上 --&gt;&lt;script type="text/javascript"&gt; // 初始化页面 Reveal.initialize();&lt;/script&gt; 保存，用浏览器打开，显示效果如下图。（F全屏，ESC退出） 3、fragment类这里再第一页的基础上再添加一个section，其中fragment类表示分条显示，当键盘按下?键时触发。section中还可以包含section，放映的方式为向下放映。通过data-background属性可以设置幻灯片的背景颜色或者图片，甚至可以使用视频当作背景。12345678910111213141516171819&lt;!-- 这里省略第一页及其他内容 --&gt;&lt;!-- 第二页 --&gt;&lt;section&gt; &lt;!-- section中还可以包含section，放映的方式为向下放映 --&gt; &lt;section&gt; &lt;h2&gt;Hello There&lt;/h2&gt; &lt;!-- fragment类表示分条显示，当键盘按下?键时触发 --&gt; &lt;p class="fragment"&gt;Today, we are gonna talk about the jQuery.&lt;/p&gt; &lt;!-- 添加一个图片链接 --&gt; &lt;a class="fragment" href="http://jquery.com/download/"&gt;&lt;img width="240" height="180" data-src="images/jquery_logo.gif" alt="jquery_logo"&gt;&lt;/a&gt; &lt;/section&gt; &lt;!-- 通过data-background熟悉可以设置幻灯片的背景颜色或者图片，甚至可以使用视频当作背景 --&gt; &lt;section data-background="#dddddd"&gt; &lt;h2&gt;But then, Believe me...&lt;/h2&gt; &lt;p class="fragment"&gt;You need some HTML,CSS and JavaScript skills to be able to use jQuery effectively. &lt;/section&gt;&lt;/section&gt; 保存一下，看看效果如下图。 4、页面的配置页面的配置是通过js完成的。 controls：是否显示左下角的控制键，默认为true progress：是否显示进度条，默认为true center：是否在居中显示，默认为true transition：为页之间的切换动画，默认为slide，即水平滑动，这里我们改成zoom缩放看看效果 12345678910&lt;script type="text/javascript"&gt; // 初始化页面 Reveal.initialize(&#123; controls: true, // 是否显示左下角的控制键，默认为true progress: true, // 是否显示进度条，默认为true center: true, // 是否在中间显示，默认为true // transition为页之间的切换动画，默认为slide，即水平滑动，这里我们改成zoom缩放试试 transition: 'zoom', // none/fade/slide(default)/convex/concave/zoom&#125;);&lt;/script&gt; 保存，用浏览器打开，效果如下。 5、小结以上就是本次教程的全部内容，如果认为默认的ppt样式不好看，你可以自己编写css代码对样式进行修改。关注公众号「嗜码」，后台回复reveal可以下载插件。另外，我自己做了一个关于jQuery介绍的ppt，也放在里面了，大家也可以去下载。 Be creative, build your own.]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>js</tag>
        <tag>reveal.js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python 学习路线分享]]></title>
    <url>%2F2018%2F05%2F28%2Fpython-learning%2F</url>
    <content type="text"><![CDATA[有位大一的学弟问我 python 如何去学，虽然我了解的也不深，但还是耐心的答复了他。 学弟，听说你想学 Python，不知道你现在的水平怎么样，首先值得肯定的是你有一颗爱学习、上进的心。比我大一的时候好多了，整天浑浑噩噩，直到大二才如梦方醒。作为一名大三 “老油条”，专业技术现在也算得上是过硬，对 Python 也有一定了解，我这里给你介绍一下学习的大致方向，希望可以少走点弯路。 像我们这个专业，一直期望着有人带你是不太可能的，自己要有自学的能力。包括分析和解决问题的能力，不要一碰到问题就问这问那，不会的首先独立思考，然后百度，百分之八十以上的问题都可以通过百度或者谷歌解决。 虽然不知道你 Python 学到了什么程度，如果是初学者，建议你首先在网上自学，不管是看视频还是看网页教程（这里推荐两个学习网站：慕课网以及菜鸟教程），把 Python 的基本语法弄懂，然后可以尝试着自己编写一些小程序甚至是小游戏。 如果这些你已经学会，那么就是 Python 进阶了。进阶这方面就我了解，涉及到 Python 的面向对象以及机器学习，你可以尝试着去网上购买一些书籍进行深入学习。面向对象涉及到设计模式，因此可以暂时不用理解，等你学了 Java 的面向对象编程就会慢慢领悟。 就目前而言，Python 算得上是机器学习最好的语言了。GitHub 有许多优秀的开源的机器学习的库，以及一些神经网络的算法，都可以直接拿来用。 虽然说，一些高级的东西可能会一时间难以接受理解，也很难应用。记住这句话：水到渠成。等你慢慢学习到了一定的高度，知识面开拓到了一定的范围，自然而然的便将这些东西融会贯通，灵活运用了。 为学习花点钱要舍得，专业书籍尽量去网上购买，避免在图书馆借。图书馆的书常年不更新，有些知识早就过时了，另外，买的书你也会更珍惜，更加促使你去阅读。]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>学习路线</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[App 推荐 | 一个木函]]></title>
    <url>%2F2018%2F05%2F15%2Fapp-one-woodhan%2F</url>
    <content type="text"><![CDATA[今天推荐一款工具集应用，《一个木函》。应用功能强大，集成了几十种工具，而软件的体积只有 1M，十分轻巧，可以让我们卸载掉手机上不怎么使用但却必须要安装的 App。下面就一些常用的功能进行介绍。 取色器这个比较适合设计人员使用，当在编写前端 css 代码或者使用 photoshop 时，这个功能就派上用场了。通过点击拖动指示器，显示颜色的十六进制代码。 应用管理嗯，可以和软件管家说拜拜了。这个功能除了普通的卸载以及清除数据之外，还可以提取安装程序、应用图标、冻结程序等等。配套功能还有大文件清理，空文件夹清理等等。另外，如果要对系统自带应用进行管理，需要 root 权限。 带壳截图想让自己的截图有 b 格，可以试试这个。一般在应用市场上，一些 app 的介绍中使用的比较多。 二维码生成可以根据输入的内容或者连接生成二维码进行跳转。长按扫描试一试👇👇 尺子这个不经意间可能会用到，记得有这个功能就好。 一个木译调用的 Google 翻译的接口，应该是机翻里面最贴近实际的翻译了，支持 20 多种语言，功能挺强大的。但是如果是查单词，建议还是下一个词典 app。 加解密工具一些加解密的工具，例如 MD5 加密，或者摩斯密码的翻译等等。有兴趣的了解一下。 表情制作丰富的表情包，任意添加文字，同时可以修改文字颜色以及调整文字位置。妈妈再也不用担心我斗图了。 以上所介绍的只是软件的冰山一角，更多功能等着大家探索。关注公众号，后台回复一个木函下载最新版应用。]]></content>
      <categories>
        <category>效率工具</category>
      </categories>
      <tags>
        <tag>效率</tag>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[近期的一些感悟]]></title>
    <url>%2F2018%2F05%2F05%2Fthoughts-in-2018%2F</url>
    <content type="text"><![CDATA[近期的一些感悟今天同学给我发了一条qq消息，着实把我吓了一跳，还以为我写推送出事了。想着这两天也没写啥东西呀，写的东西也是干货，只不过昨天发了一条招聘信息，也不至于被查水表吧。 问清楚情况后，说是需要放进什么评估材料里。其实这里可能存在着一些误会，这个公众号一直是我一个人运营，我一直把他看成是自己的个人公众号，进行知识的分享，并非学院官方的公众号。 因此，后面我会更改公众号的名称，具体的名称还在想，但是内容依然是知识的分享，包括自己学习的总结，心路体会等等。 大学过的很快，转眼现在大四，虽然保研了，但还是选择先去实习，加入学长的创业团队，因为工作是迟要早面对的。只有在工作的时候，你才会发现你在课堂学的那些知识是多么的不堪一击，才会发现社会的优胜劣汰。 现在也有很多人会有工作、考研或者考公务员的疑惑，自己应该选择哪条路？班上也有同学选择了考研、考公务员或者是考雅思托福等等的，但有的同学明显是为了逃避找工作而做的选择。其实，无论是考研或者考其他的，最终都是要选择一份工作的，这是无法避免的，不要把考研当作借口，推脱自己身上迟早要面对的压力。 想到两个月前的场景，爱打游戏的同学放下了鼠标手机，开始变得紧张忧虑，开始拼命学习，开始刷题，谁也不想成为最后一个有没有工作也不考研的人。天道酬勤，经过了秋招的洗礼，一直努力的人拿到了满意的offer，临时抱佛脚的人依然在紧张。 两年时间，工作的同学可以在工作岗位积累丰富的实践经验，自己在研究生阶段也要更加努力，感谢那些一直默默支持我的人，希望一同进步。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
        <tag>感悟</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[App推荐 | Google Tasks]]></title>
    <url>%2F2018%2F04%2F29%2Fapp-google-tasks%2F</url>
    <content type="text"><![CDATA[前不久，Google推出了一款移动任务管理应用Google Task，在使用2天后，写一下使用感受，并与Google同类产品Keep进行一个对比。 首先欣赏几张官方的App截图 然后来看一下官方的介绍： 翻译：通过Google Tasks移动应用程序完成更多任务。随时随地管理，捕捉和编辑您的任务，以及在所有设备上同步的待办事项。与Gmail和Google日历的集成可帮助您更快地完成任务。 经过两天的使用，这里简单的说一下感受。首先就界面来说，Tasks采用Google一直提倡的极简风格。打开App，纯白的界面，加上一颗蓝色的圆腰按钮的点缀，整体的页面显得极其的简约。 熟悉Google的童鞋应该会发现，这个App的设计风格与之前Google一直所倡导的Material Design（以下简称为MD）风格还是有一些不一样。的确，在Android9.0（Android P）还没发布预览版之前，Google一直所采用的是一种扁平化的质感设计。 光效、表面质感、运动感是MD的核心。可以看到，这种风格大部分由矩形卡片组成，同时配色突出鲜明。但是在新出的Android P中，Google改进了这种设计，称之为MD2.0。其中大量地采用圆角设计，不论是通知面板、设置还是应用图标，全部使用圆形设计。 以后会更具详细的讲解Android P与之前Android版本的区别，这里便不再做赘述，下面继续介绍Tasks的功能。 首先点击醒目的蓝色按钮，建立一个新的任务。例如：Spring大作业。点击加号日历图标可以设置截止日期，这里设置4月30号完成，并点击save。 可以到任务详细页面里增添子任务，即不同时间段的该完成的任务，然后给各个子任务设置不同的时间期限，App就将会在不同的时间对你进行相应的提示，每天应该完成哪些任务。 以上就是Tasks的主要功能，操作十分的简便，用起来很流畅，App本身的体积只有不到5M，因此不会占用很大的内存空间。而且Google自家的应用，优化做的可是相当的好，不用担心会发生卡顿的现象，也不会一直留驻后台。（PS：与Google全家桶一同食用效果更佳） Google还有一款与Tasks功能相似的App，名字叫做Keep。但是这款App不仅仅针对任务，还包括一些灵光一现的想法，可以立即使用Keep记录下来。这个应用有时间还会单独给大家介绍。]]></content>
      <categories>
        <category>效率工具</category>
      </categories>
      <tags>
        <tag>效率</tag>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Google I/O 2018 总结]]></title>
    <url>%2F2018%2F04%2F29%2Fgoogle-io-content%2F</url>
    <content type="text"><![CDATA[Google I/O 2018大会于北京时间5月9日凌晨1点，在美国山景城Shoreline Amphitheatre(圆形剧场)举办。看了一下录播，字幕延迟，全程靠听，下面对上午的主会进行一个小结。（介绍按照时间大会顺序） Gboard（谷歌键盘） 新增莫斯电码的输入，主要方便于的残障人士的快速交流 Gmail （谷歌邮箱） 使用Material Design2，全新邮箱界面 邮箱输入自动补全 Photos （谷歌相册） AI自动整理图片 AI自动美化图片：增长曝光度，调节亮度等等 自动发送 文件图片可直接转PDF 老旧黑白照片可自动填充颜色 Assistant （谷歌助手） 6种不同的声音 持续对话，不用一直Hey，Google 加入13000儿童故事 AI智能导航 Android P （安卓9.0） 新增Dashboard，用于对App的使用进行时间管理 取消三段虚拟按键，使用类似与ios的手势操作 AI电池监控，减少30%的cpu唤醒，更省电 UI变化，状态栏、音量面板、通知栏、设置界面等 WAYMO （谷歌无人汽车） AI自动驾驶，适应各种路况 最后，很明显：All in AI.]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[小程序学习路线]]></title>
    <url>%2F2018%2F04%2F24%2Fmp-learning%2F</url>
    <content type="text"><![CDATA[之前有学弟问到我小程序的学习路线，这里整理一下分享出来 小程序小程序的本质也是一个网页，只是它是通过微信内核来解析并加载渲染页面。如果只做静态的小程序的话，有html以及js的知识足够了，例如一些工具类的小程序，你只需要能够用js写出逻辑以及一些页面的css样式即可，例如天气类或者计算器之类的小程序。 所以可以先学习前端方面的知识，你应该大部分都掌握了。但还是要说的是，js一定要深入去了解学习，因为东西挺多而且杂，需要静下心来慢慢地学。 小程序进阶之后便是进阶的学习，你需要掌握一门服务器语言，php，c#，jsp（Java web）都行，学会之后，你可以干的事情就多了，小程序就不仅仅是一个静态的页面了，你可以进行前后台的交互，不过小程序不支持本地的服务器调试，因此你需要去购买云服务器，这部分博客上面都有大量的教程。动态的小程序就可以做出来，比如做一个表白墙。。。。🐕🐕🐕 其实微信开发最早的是微信公众号的开发，看似挺复杂，但是如果理解了，也就那么回事。举个简单的例子：移动公司的公众号里面有个查询流量的菜单，点击后返回消息显示当前流量余额。其中的过程就是，点击菜单，然后触发了一个事件，其实就是发生一个请求到后台的服务器，这个请求中的参数就是手机号，服务器接收到请求，通过手机号查询到相关的信息。因此，所谓的公众号开发其实就是服务器端的开发，属于后台，一般使用php或者Java web。另外还有一个就是微信内网页开发，其实也是和小程序差不多，这里自己去了解吧。 推荐书单至于说书单，倒是没有特别的相关书要推荐，教程书真的是一大堆，小程序看文档就好了，后台相关的书可以买几本。一般在当当上买，买的时候看一下同类书的销量排行，选前几名的买就行了😁😁。]]></content>
      <categories>
        <category>小程序</category>
      </categories>
      <tags>
        <tag>小程序</tag>
        <tag>学习路线</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[公众号关联小程序教程]]></title>
    <url>%2F2018%2F04%2F20%2Fofficial-account-link-mp%2F</url>
    <content type="text"><![CDATA[进入公众号后台，点击小程序管理 点击添加 选择关联小程序，然后扫描二维码验证 输入对应的APPID（wxfbe916702aa06f6a），然后点击发送邀请。 小程序的开发者会确认邀请，这时候公众号与小程序的关联就完成了。 ps:欢迎关联cool体测小程序（appid：wxfbe916702aa06f6a）]]></content>
      <categories>
        <category>小程序</category>
      </categories>
      <tags>
        <tag>小程序</tag>
        <tag>公众号</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Oracle11g 64位安装教程以及安装过程中可能遇到的问题]]></title>
    <url>%2F2018%2F03%2F30%2Foracle-setup-tutorial%2F</url>
    <content type="text"><![CDATA[1、安装准备下载官网的oracle安装程序，有两个压缩包。 选中这两个压缩包，点击解压到当前文件夹，两个压缩包同时解压成一个名叫database的文件夹。这里特别注意，两个压缩包要同时选中，解压成一个文件，不然可能会安装失败。 解压好后出现一个database文件夹，大小为2.13GB。 点进去，找到setup.exe，右击，以管理员身份运行，开始安装。 这里需要检查，等待一会。 检查之后如果出现环境不满足最低要求的警告（如下图） 先取消安装，我们需要修改文件database---&gt;stage---&gt;cvu---&gt;cvu_prereq.xml中的内容。右键用编辑器打开，在此处加上如下代码。 12345678&lt;OPERATING_SYSTEM RELEASE="6.2"&gt; &lt;VERSION VALUE="3"/&gt; &lt;ARCHITECTURE VALUE="64-bit"/&gt; &lt;NAME VALUE="Windows 10"/&gt; &lt;ENV_VAR_LIST&gt; &lt;ENV_VAR NAME="PATH" MAX_LENGTH="1023" /&gt; &lt;/ENV_VAR_LIST&gt;&lt;/OPERATING_SYSTEM&gt; 2、开始安装将接收安全更新的选项取消，可选操作。点击下一步 可以无视警告，点击是。 选择第一项，创建和配置数据库，并点击下一步。 修改安装目录，千万注意，这里的目录不能出现中文字符。其他的选项默认就行，另外还需要输入管理员的密码。尽量设置简单一点的，容易记住。密码一定要记住!!! 出现密码不符合标准不要紧，这是由于oracl为了安全，这里我们直接继续。然后系统会检查条件。如果失败了，点击全部忽略，不影响后面的安装。 点击完成就开始安装了 后面的都直接默认就行了，一定要记住输入的密码。 3.检查是否安装成功。在开始菜单里找到Oracle文件夹，然后点击这个orcl 会弹出一个网页，需要输入账号密码，以管理员身份登录，账号为sys或者system，密码是自己设置的，如果忘了可以通过命令重置。 登录后进入控制台，如果界面是这样子，就是成功了。 4.安装过程中可能遇到的问题 安装到42%的时候出现未找到文件wfmlrsvcapp.ear报错。 12345解决办法：点击中止安装，然后将win64_11gR2_database_2of2文件database/stage/Components/下的几个文件copy到之前解压的database文件夹中相同目录下，然后重新安装，不用删任何东西，重新安装会覆盖之前的安装。 安装到98%时出现注册OCX时出现OLE初始化错误或OCX加载错误。 解决办法：点击中止安装，错误原因是安装路径中有中文字符，重新安装，修改一下路径就行了。 以上就是Oracle11g 64位的安装教程，欢迎各位对问题进行补充。]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>Oracle</tag>
        <tag>安装教程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[程序题智能批改系统需求分析]]></title>
    <url>%2F2018%2F03%2F17%2Fpoj-analyse%2F</url>
    <content type="text"><![CDATA[1 需求分析1.1 系统简介在计算机教育领域，尤其是程序设计类课程，教学内容基本上是理论与实践相结合。对于的传统的手动批改源代码和程序的方式通常会耗费教师巨大的精力，也难以保证结果公正性，因此程序题自动批改系统备受关注。目前应用较为广泛的的程序自动批改系统是ACM/ICMP的Online Judge程序批改系统，但是在多数的程序设计类课程中，ACM/ICMP并不适用。ACM/ICMP系统只能够处理标准的输入输出程序，并且给出对或错两种结果，无法像手工批改一样，对各方面进行打分，同时给出具体的分数以及错误原因。 因此，设计一个程序题智能批改系统，采用提交-反馈的模式，让学生在离开老师的情况下，可以自己编写程序并交给系统进行批改，同时教师可在后台查看学生的学习情况，并予以反馈。这不仅提高了学生编写程序的积极性，也驱动学生去深入学习编程，大大减轻了教师的工作量。 1.2 需求说明程序题智能批改系统可用于让学生在没有老师的监督下，独立编写程序并通过系统提交给后台。教师在后台可查看学生的学习情况，并针对不同学生的答题情况予以反馈。主要需求如下： 学生可以在线编程，并支持本地调试 学生可以将编写好的代码提交到服务器端，并查询自己的成绩 教师可以题库进行管理，例如：增加题目、修改答案等等 教师可以对学生成绩进行管理，并可查看成绩分析报告 教师可以在线批改学生代码，并予以反馈 管理员可以对学生及教师信息进行管理 1.3 用例分析1.3.1 用例与角色学生： 查询相关个人基本信息 查询成绩 在线编程答题 提交代码 测试代码 下载代码 问题反馈 教师： 题库管理 查询个人基本信息 在线批改 生成成绩分析报告 代码安全检测 成绩管理 管理员： 管理学生基本信息 管理教师基本信息 1.3.2 用例图 1.3.3 用例描述 用例名称：成绩查询 描述：学生查询个人成绩信息 标识符：UC01 角色：学生 前置条件：学生成功登录系统 主事件流： 1.学生点击个人信息连接，跳转到个人信息页面 2.点击题目，查询所得成绩 3.用例结束 其他事件流： 1.学生未答题，未显示分数 用例名称：在线编程答题 描述：学生进行在线编程答题 标识符：UC02 角色：学生 前置条件：学生成功登录系统并点击题目 主事件流： 1.学生选择题目类型 2.学生点击题目链接 3.跳转到程序编写界面进行编程 4.下载代码进行本地调试 5.用例结束 其他事件流： 后置事件流：学生点击“保存”按钮 用例名称：测试代码 描述：学生对编写好的代码进行测试 标识符：UC03 角色：学生 前置条件：学生编写好代码并点击“测试”按钮 主事件流：1.学生编写代码 2.学生点击“测试按钮” 3.系统检查代码的安全性 4.返回测试结果 5.用例结束 其他事件流： 1.学生关闭窗口，提示“保存代码” 2.学生编写的代码运行异常，警告“疑似病毒” 后置事件流：学生点击“提交”按钮 用例名称：提交代码 描述：学生对测试好的代码进行提交 标识符：UC04 角色：学生 前置条件：学生编写好代码并点击“提交”按钮 主事件流：1.学生编写代码 2.代码通过安全测试 3.学生点击“提交按钮” 4.用例结束 其他事件流： 1.学生代码安全测试未通过，提交按钮禁用 后置事件流：无 用例名称：下载代码 描述：学生下载教师提供的参考代码 标识符：UC05 角色：学生 前置条件：教师上传参考代码 主事件流：1.学生选择题目 2.点击参考代码链接进行下载 3.用例结束 其他事件流：无 后置事件流：无 用例名称：问题反馈 描述：学生对题目的疑惑在留言中反馈 标识符：UC06 角色：学生 前置条件：无 主事件流：1.学生输入问题内容 2.学生点击提交按钮 3.用例结束 其他事件流： 1.输入的内容为空，提示“输入的内容为空” 后置事件流： 1.管理员审核通过，反馈显示 用例名称：题库管理 描述：教师对编程题目进行管理 标识符：UC07 角色：教师 前置条件：教师成功登录系统 主事件流：1.教师点击题库管理链接 2.教师可以增加或批量导入题目，并设置答案及上传参考代码 3.教师可以批量删除题目 4.教师可以修改题目信息，可以修改题目答案 5.教师可以对所有题目进行条件查询或者模糊查询 6.教师点击保存按钮，完成对题库的管理操作 7.用例结束 其他事件流： 1.关闭页面时，教师批量导入未点击保存按钮，提醒用户保存 2.查询条件为空，查询所有题目 后置事件流： 1.所有增加或者修改的题目信息均保存到数据库中，学生看到新的题目信息 用例名称：在线批改 描述：教师在线对学生编写的代码进行批改并予以评价反馈 标识符：UC08 角色：教师 前置条件：教师成功登录系统 主事件流：1.教师点击在线批改按钮，系统自动打分。 2.教师可以点击查看某个学生的具体答题情况，并予以评价 3.教师可对学生所提疑问进行在线解答 4.教师可以导出学生所写的代码 5.用例结束 其他事件流： 1.代码安全检测未通过，程序不予以执行 后置事件流： 1.题目的得分信息保存到数据库中，学生可看到自己的成绩 用例名称：成绩管理 描述：教师对学生的成绩信息进行管理 标识符：UC09 角色：教师 前置条件：教师成功登录系统 主事件流：1.教师点击学生成绩信息管理按钮 2.教师可以修改学生的成绩信息 3.教师可以删除学生的成绩信息 4.教师可以按条件查询学生的成绩信息 5.教师点击保存，完成对学生信息管理的操作 6.用例结束 其他事件流： 1.查询条件为空，查询所有的学生信息 后置事件流： 1.修改的成绩信息保存到数据库中，学生可看到自己修改后的成绩 用例名称：生成成绩分析报告 描述：生成学生的成绩分析报告 标识符：UC10 角色：教师 前置条件：教师成功登录系统，点击了成绩管理按钮 主事件流：1.教师点击学生成绩信息管理按钮 2.教师点击了生成学生成绩报告 3.教师可以按不同条件对成绩进行统计分析 4.教师可以下载生成的分析报告 5.用例结束 其他事件流：无 后置事件流：无 用例名称：学生信息管理 描述：管理员对学生信息进行管理操作 标识符：UC11 角色：系统管理员 前置条件：管理员成功登录系统，并点击学生信息管理 主事件流：1.管理员点击学生信息管理 2.管理员可以批量导入学生信息 3.管理员可以删除学生信息 4.管理员可以修改学生信息 5.管理员可以进行条件查询或者模糊查询 6.管理员点击保存完成对学生信息管理的操作 7.用例结束 其他事件流：1.点击保存，学生信息为空或者不符合要求，提示“学生信息不符合要求” 后置事件流：1.对于新增的学生，学生可以通过账号密码登录系统 用例名称：教师信息管理 描述：管理员对教师信息进行管理操作 标识符：UC12 角色：系统管理员 前置条件：管理员成功登录系统，并点击教师信息管理 主事件流：1.管理员点击教师信息管理 2.管理员可以批量导入教师信息 3.管理员可以删除教师信息 4.管理员可以修改教师信息 5.管理员可以进行条件查询或者模糊查询 6.管理员点击保存完成对教师信息管理的操作 7.用例结束 其他事件流：1.点击保存，教师信息为空或者不符合要求，提示“学生信息不符合要求” 后置事件流：1.对于新增的教师，教师可以通过账号密码登录系统 2 系统设计2.1 实体关系建模 &amp;实体关系模型直接从现实世界中抽象出实体类型和实体间联系，建立实体关系模型是系统设计的第一步。就本系统而言，「学生」(Student)、「教师」(Teacher)、「管理员」(Admin)、「问题」(Question)、「提交」(Submission)、「通知」(Notification)、「笔记」(Note)、「附件」(Enclosure)、「成绩」(Grade)以及「留言」(Message)都是经常出现的名词，它们也都是从需求描述中识别出来的「实体」。通过建立实体之间相应的关系，从而得到实体关系模型，以完成设计需求。 程序题智能批改系统是一个小型的在线编程评判系统，系统共11个实体类型，下图显示了它们之间的所有模型和关系。 2.2 数据库设计本系统数据库使用MySQL5.0，一种关系数据库管理系统，数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，增加了速度并提高了灵活性。MySQL所使用的 SQL 语言是用于访问数据库的最常用标准化语言。本系统数据库中数据存放于10张表中，所有“id”键字段都是Java类型的Integer。数据库结构图如下图。 2.3 界面设计2.3.1 页面跳转关系 系统首页展示的是教师发布的题目、推荐文章以及学生发布的笔记 学生登录进入学生后台，可查询自己的成绩、在线答题以及管理笔记等 教师登录进入后台可管理题库、发布通知、发布文章以及生成成绩分析报告 管理员登录进入后台可以管理学生以及老师的信息 页面跳转图分别如下图: 2.3.1 页面设计 本人对下述需求进行了代码实现，使用ssm框架。涉及到Java的动态编译方面的知识，另外，评分通过获取后台数据库中的测试用例，动态执用例进行评分。 需要源码的可以扫码关注公众号『嗜码』，回复「程序题批改系统」即可获取源码，源码使用的 spring mvc 框架。]]></content>
      <categories>
        <category>文档</category>
      </categories>
      <tags>
        <tag>需求分析</tag>
        <tag>在线编程</tag>
        <tag>系统</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[小程序开源组件库]]></title>
    <url>%2F2018%2F01%2F25%2Fmp-conponent-collection%2F</url>
    <content type="text"><![CDATA[推荐3个小程序开源组件库在进行小程序开发时，经常会遇到编写组件方面的阻碍，这让我们花费大量的时间在页面以及 CSS 样式编写上。因此可以使用开源组件库，有些复杂的组件可以直接拿来使用，节省开发时间，避免重复造轮子。 Vant 由「有赞」团队维护的开源项目，目前 GitHub 上有 8057 颗 ⭐。Vant 提供了一整套 UI 基础组件和业务组件，通过 Vant 可以快速搭建出风格统一的页面，提升开发效率。除了一些常用的 UI 组件，Vant 还提供了一些适用于商城小程序的业务组件，例如省市区选择、商品卡片、商品导航等，帮助开发者快速搭建一些商城类的小程序。 iView一套高质量的微信小程序 UI 组件库，目前 GitHub 上有 3590 颗 ⭐。与 Vant 相比，iView 的交互组件更多，更能满足一些开发者的特殊需求。另外，对新手很友好，事无巨细的文档、友好的 API 和完整的示例，几分钟就可以上手。 ColorIUIColor UI 是一个纯 CSS 库，只需要将 CSS 引入即可，配置方便。相比于同类小程序组件库，ColorUI更注重于视觉交互！ 另外，设计非常具有现代感。组件颜色清新，动画活跃，更加注重于视觉交互。]]></content>
      <categories>
        <category>小程序</category>
      </categories>
      <tags>
        <tag>组件</tag>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JavaScript 学习笔记（六）—— 事件]]></title>
    <url>%2F2017%2F11%2F17%2Fjavascript-learning-6%2F</url>
    <content type="text"><![CDATA[Javascript 与 HTML 之间的交互是通过事件来实现的。平时用多了JQuery，JavaScript 往往会变得生疏，有时候会不是很理解某些事件的写法，这里将学习过程做个记录。 DOM0 级事件事件处理的传统方式，也就是 DOM0 级事件模型，通过将一个函数赋值给一个事件处理程序属性，来实现事件的处理逻辑。这种方式十分简单，并且所有浏览器都适用。例如下面代码： 1234varbutton = document.getElementById("buttonId");button.onclick = function(e) &#123; alert("button"); // 'button'&#125;； 上面代码首先通过 id 获得了一个按钮的对象，然后将一个匿名函数赋值给对象的 onclick 属性，这样当我们点击按钮时，便会触发 function 里面的代码。同时，会传入一个参数 event，这个参数里包含了事件相关的信息，例如：点击的坐标，触发改事件的元素等等。 由于这种方式是对属性进行赋值，因此同一个元素后一次的相同事件会覆盖前一次，例如下面代码： 1234567var button = document.getElementById("buttonId");button.onclick = function(e) &#123; alert("1")&#125;;button.onclick = function(e) &#123; alert("2");&#125;; 结果输出 2，因为后一次的赋值覆盖了前一次。 因此，如果我们要注销事件绑定，只需要将属性值赋为 null 1button.onclick = null; 和这种方式相同的就是将函数名称写在 html 页面中，自定义一个函数，并将其赋值给 onclick 属性例如如下代码： 1&lt;button onclick="clickFunction()"&gt;&lt;/button&gt; 这种方式的不同之处在于它不会给函数传入 event 参数 DOM2 级事件DOM2 级事件处理程序和 DOM0 的不同之处在于，DOM2 级事件支持事件流的响应，以及同一个元素支持多个相同的事件。因此，学习 DOM2 事件前先看看事件流。 事件流在网上看到一句这样的话来形容事件流，感觉十分的形象：在一张纸上有一组同心圆，如果你把手指放到圆心上，那么你的手指指向的不是一个圆，而是纸上所有的圆。比如我们点击了页面中的某一个按钮，我们不仅点击了按钮，还点击了包含按钮的容器，甚至还点击了整个页面窗口。 所谓事件流就是接受事件的顺序。DOM2 级事件中规定事件流包括三个阶段：捕获阶段、目标阶段、冒泡阶段。 看一张图，便能很好的理解事件流。 如图所示，当一个事件触发时，最先得到消息的是 Document，然后是 HTML， 一层一层，找到触发事件的元素，这个过程属于事件捕获阶段。之后，便是对事件处理的逻辑，这是目标阶段。最后，事件会向上传播，通知上层元素事件处理完毕，这是事件冒泡阶段。 DOM2 级事件方式DOM2 级事件定义了 addEventListener 和 removeEventListener 两个方法，用于为指定元素添加事件绑定和删除事件绑定。例如下面代码： 1234varbutton = document.getElementById("buttonId");button.addEventListener("click", function (e) &#123; alert("clicked");&#125;, false); 可以看到，addEventListener 函数有三个参数，第一个为事件的名字，第二个为事件处理程序，第三个为 bool 类型。如果为 true，表示在捕获阶段触发，如果是 false，表示在冒泡阶段触发。 通过下面例子，来理解一些这个函数： 123&lt;div id="outer"&gt; &lt;div id="inner";"&gt; 内部 DIV&lt;/div&gt;&lt;/div&gt; 这里定义了两个 div，id 分别为 outer 和 inner，效果如图： 然后为每个 div 添加事件 1234567891011var inner = document.getElementById("inner");var outer = document.getElementById("outer");inner.addEventListener("onclick", function (e) &#123; alert("1");&#125;,true);outer.addEventListener("onclick", function (e) &#123; alert("2");&#125;, true);inner.addEventListener("onclick", function (e) &#123; alert("3");&#125;, false); 之前提到了，DOM2 级别事件中同一个元素支持多个相同的事件，上面的代码为 inner 设置了两个点击事件，分别在捕获阶段和冒泡阶段响应。outer 元素的点击事件在捕获阶段响应。 点击外部的 outer，只弹出 2，这是因为事件流没有传播到内部。 点击内部的 inner，弹出的顺序为 2，1，3。因为 outer 在外层，且为捕获事件，因此会比 inner 先响应事件，而 inner 由添加了冒泡事件 3，因此在事件冒泡阶段响应。 小结一般情况下，只需在最外层 dom 元素注册一次事件，然后通过捕获、冒泡机制去找到真正触发事件的 dom 元素，最后根据触发事件的 dom 元素提供的信息去调用回调。JQuery 中事件就是这样封装实现的，调用非常的方便。 事件的学习远不如此，在学习微信小程序中，会出现各种事件的处理，我们要理解原生 JavaScript 中的原理，才能学好其他的一些东西。]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>js</tag>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JavaScript 学习笔记（五）—— 闭包（closure）]]></title>
    <url>%2F2017%2F10%2F07%2Fjavascript-learning-5%2F</url>
    <content type="text"><![CDATA[今天学习了 JavaScript 的闭包，这里做一个自己理解的分享。 闭包是 JavaScript 中的一个难点，同样也是重点，很多的高级应用都需要使用闭包来实现。 变量的作用域要理解 JavaScript 中的闭包，就要先理解作用域。首先，我们要知道，JavaScript 没有块级作用域，这是什么意思？我们来看下面的代码： 1234567if (true) &#123; var name = 'zmy'; alert(name); // zmy&#125;alert(name); // zmy 结果输出了两次 ‘zmy’ 可以看到，在 if 语句块里声明的 name 变量，在语句块外面依然能够访问。这是因为 JavaScript 不存在块级作用域，在块中定义的变量，快外依然能够访问到。 在看看 Java 语句代码： 123456789class Test &#123; public static void main(String[] args) &#123; if (true) &#123; String name = "zmy"; System.out.print(name); &#125; System.out.print(name); &#125;&#125; 运行代码，结果显示报错，找不到符号 name。 这是因为 Java 有块级作用域，变量只会存在当前的块级作用域中，外部不能直接访问。 JavaScript 中的作用域相对于其他的块级语言来说比较特殊，它虽然没有块级作用域，但是存在函数作用域。这是什么意思呢，来看一下下面的这段代码： 12345function sayPersonName() &#123; var personName ='zmy';&#125;sayPersonName();alert(personName); // error 运行结果如下报错，显示 person Name 未定义。这是因为 JavaScript 中存在函数作用域，函数外部不能访问函数内部的变量。 这里值得注意的是，函数重点变量名需要关键词 var，如无此关键词，则默认为 全局变量，因此下面的代码是能够访问的： 12345function sayPersonName() &#123; personName = 'zmy';&#125;sayPersonName();alert(personName); // 'zmy' 闭包由上诉阐述引出了一个问题，我们如何才能够访问到函数里的变量？前面已经证明，我们不能够直接访问到变量，这样会引发错误。因此，我们可以使用闭包。 首先理解一下闭包的概念：是指有权访问另一个函数作用域中的变量的函数。 说的直白一点，闭包其实就是一个函数，而常见的创建闭包的方式就是在函数内部创建另一个函数。例如下面代码： 12345678function outerFunc() &#123; var n = 1; function innerFunc() &#123; alert(n); // 1 &#125; innerFunc();&#125;outerFunc(); 上面代码在 outerFunc () 中声明了一个 innerFunc () 函数以及一个变量，然后调用外层函数，输出了 n。 因此可以看出，内存函数能够访问外层函数变量。但反过来不行，内部函数变量对外部函数不可见。 这就是 Javascript 语言特有的 “链式作用域” 结构（chain scope），子对象会一级一级地向上寻找所有父对象的变量。所以，父对象的所有变量，对子对象都是可见的，反之则不成立。 既然内层函数能够返回外层函数的变量，那我们如果把 innerFunc () 作为返回值，上面的问题就可以解决了。 例如下面代码： 123456789function outerFunc() &#123; var n = 1; function innerFunc() &#123; alert(n); // 1 &#125; return innerFunc; &#125;var result = outerFunc();result(); // 1 可以看到，上面的代码将 innerFunc 作为 outerFunc () 的返回值，因此变量 result 变成一个函数，即 innerFunc ()。通过调用 result () 就可以访问 n 了。 以上是个人对闭包对理解，望多多指教！]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>js</tag>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Javascript 学习笔记 (四)—— 面向对象]]></title>
    <url>%2F2017%2F10%2F05%2Fjavascript-learning-4%2F</url>
    <content type="text"><![CDATA[前端 Javascript 的开发主要有两种方式：向对象编程（OOP）与函式编程（FP），面向对象有助于是将松散的 JS 代码进行整合，便于后期的维护，是让我们的代码适应更多的业务逻辑。 理解对象Javascript 中的对象与其他的基于类语言中的对象有所不同。Javascript 中没有没有类的概念，对象通过引用类型创建，引用类型可以是原生的 JavaScript 类型，比如 Object、Date、Array 等等，也可以是我们自己定义的类型。 ECMA-262 (规范版本号) 把 JavaScript 对象定义为：无序点到属性的集合，其属性可以包含基本值、对象或者函数。严格来说，就相当于说对象是一组没有特定顺序的值。对象中的每个属性或者方法都有一个名字，而每个名字都映射到一个值。下面通过两个例子理解一下这个概念。 创建自定义对象的最简单的方式就是创建一个 Object 的实例，即 new 一个 Object 的构造方法，然后在为它添加相应的属性和方法。 第二种方法为对象字面量（literal）语法创建： 属性特性在 Java 中，通过使用 private 关键字，使得有些或者属性或者我们不能直接访问，需要通过某些特定的方法进行访问。JavaScript 中没有提供这种关键字，但是可以通过改变属性特性将特定的属性或者方法隐藏。也可把它称为属性的属性。 下表列出了 JavaScript 中属性的属性以及其含义： 在 JavaScript 中，必须使用 Object.defineProperty () 方法对默认的特性进行修改。 通过下面的例子来理解一些这几个特性。 上面的代码用字面量方法创建了一个对象实例 person，对象的属性中有 name、age。通过调用 Obejct.defineProperty () 方法，对 name 属性：writable、congfigurable 两个特性进行修改。 我们再看一下属性的 set 以及 get 特性： 这里创建了一个 time 的对象，并给它定义两个默认的属性：_month, edition。_year 前面的下划线是一种标记，用于表示只能通过对象方法访问的属性。通过 Obejct.defineProperty () 创建 month 属性，并包含了 get 和 set 函数。通过修改 month 属性值，year 属性值也相应的改变。 虽然我们平时基本上不会用到这个，但对我们理解 JavaScript 对象非常有用！ 创建对象方式前面说到，创建对象的两种方式，但是当我们需要创建多个对象的时候，就会产生大量的重复代码。因此考虑用更好的方法去创建对象。 工厂模式工厂模式是软件工程领域一种广为人知的设计模式，这种模式抽象了创建具体对象的过程，即我们创建对象时不会对客户端暴露创建逻辑，并且是通过使用一个共同的接口来指向新创建的对象。 例如下面的代码： 上面的方法虽然解决了创建多个相似对象的问题，但是这种方法没有解决对象识别的问题，即如何知道一个对象的类型。 因此，出现了一种构造函数模式。 构造函数模式类似我们创建的 Object 对象的实例，使用 new 关键字，并调用 Object 的构造函数。我们也可以自定义构造函数，并且自定义对象的类型和方法。例如我们将上面代码重写成构造函数模式： 上面创建了一个名为 Person 的函数，这里函数用首字母大写用于区分其他一般函数，当然小写也是没有任何问题的。然后通过 new 关键字来创建了两个 Person 对象的实例，通过 instanceof 检测 person1 的类型发现它既是 Person 的实例，又是 Object 的实例，这是因为所有的对象均继承自 Object。 自定义构造函数意味着我们可以将他的实例标识为一种特定的类型，这就是构造函数要优于工程模式的地方。但是，自定义构造函数的方法仍然存在缺点，那就是每个对象中的属性和方法在每个实例中都要重新创建一遍。在前面的例子中，person1 和 person2 的属性和方法其实是不一样的，我们通过比较以下二者的方法可以看出，结果返回 false。 因此，两个实例都是 Perosn 的对象，完成同样的任务，却为其创建了不同的及方法，这是没有必要的。可以通过原型模式来解决这个问题。 原型模式JavaScript 中每个函数都有一个 prototype (原型) 属性，这个属性是一个指针，指向一个对象，这个对象的用途是包含所有实例共享的属性和方法。这是什么意思？我们通过下面的代码理解一下： 我们通过在控制台打印结果 String 类型以及 Date 类型的原型属性，结果返回了两种类型的方法。 因此，我们可以不用在构造函数中定义对象的实例信息，而是将这些信息直接添加到原型对象中，使得所有的对象实例可以共享它所包含的属性和方法。如下面的这个例子： 我们来看一张图，可更好的理解原型对象。 这张图展示了这个例子各个对象之间的关系。当创建一个构造函数时，构造函数有一个 prototype 的指针，指向 Person 的原型对象，这个原型对象中就包含了一下属性和方法。原型对象中有一个名为 constructor 的属性，这是一个指向 prototype 属性所在函数的指针，我们打印一下 Person.prototype，在控制台可以发现他们是一层一层的包裹，即互相指向对方。 我们可以通过对像实例访问保存在原型中的值，但是不能通过对象实例重写原型中的值，例如： 在这个例子中，person1 的 name 被一个新的值屏蔽。当需要读取某属性值时，会先在实例上搜索属性，如果没有找到，便会到原型对象中去寻找。 可以通过 delete 操作符删除实例属性。 原型中所有的属性是被很多实例共享，这种共享对于函数非常合适。然和对于包含引用类型值的属性，比如包含属性值为一个数组，就会出现问题，这里就不细说。于是便有了更多的模式：比如组合构造函数模式和原型模式、动态原型模式、寄生（parasitic）构造函数等等。 继承JavaScript 中实现继承的主要方法是利用原型链，让一个引用类型继承另一个引用类型的属性和方法。刚刚说到：每个函数都有一个原型对象，原型对象包含一个指向构造函数的指针，而实例包含一个指向原型对象的内部指针。如果我们让原型对象包含另一个类型的实例，即原型对象中还包含指向另一个原型对象的指针？结果会怎么样呢？ 来看一下这个例子： 这里运用原型模式创建了一个 Son 对象，对象中包含一个 sonName 属性以及一个 saySonName 方法，并创建了一个实例 son，传入了一个 son 字符串。 此时，Son 构造函数与原型在之间的关系我们可以用下面的图来表示： 然后，用同样的方法穿件一个 Father 对象，对象中包含一个 fatherName 属性以及一个 sayFatherName 方法。代码如图所示： Father 构造函数的原型关系如下图: 此时，我们让 Son 的原型指针指向 Father 的原型对象，并打印前后 Son 的原型对象。 代码如下： 可以看到，第一行打印的是 Son 的原型对象，第三行打印的是 Father 的构造函数，因此此时的原型关系图如下： 现在分别在实例化 Son，并使得 son 调用父类型的 sayFatherName 的函数，结果输出 father。 Son.Prototype 被当作 Fanter 的一个实例，因此有一个 prototype 的指针指向 Father 的原型，因此构成了一条原型链，即可看作类型的继承。 最后，我们打印原型的时候发现有一些熟悉的函数，是的，那就是 Object 的内置函数，所有类型均继承自 Object.]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>js</tag>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JavaScript 学习笔记 (三)——引用类型：Object、Array、Date]]></title>
    <url>%2F2017%2F09%2F30%2Fjavascript-learning-3%2F</url>
    <content type="text"><![CDATA[Object 类型引用类型是一种数据结构，在 Java 中，被称为类。在 JavaScript 中，被称为对象定义。 创建 Object 实例有两种方法。第一种是使用 new 操作符后跟 Object 构造函数，和 Java 语言相似。 另一种方式为使用对象字面量表示法： 这种方法创建了和第一种方法同样的对象。另外，对象字面量也是向传递大量可选参数的首选方式。例如： Array 类型JavaScript 中数组类型为最常见的类型之一，其大小可以动态调整。 声明数组同样有两种方式。第一种使用 new 操作符。 另外也可以通过字面量声明数组对象： JavaScript 中为数组提供了一些函数，tostring() 方法将数组中的数据以字符串形式返回，项与项之间使用逗号分隔，例： Join () 函数，可使用不同分隔符将数组转换为字符串，若 join () 函数中不传入参数，则默认使用逗号分隔。 Javascrip 还提供了 push ()、pop () 和 shift () 方法，可分别实现类似栈和队列行为。排序方法有 sort()，reverse() 等。还有一些操作方法和 Java 相似。 Date 对象使用 new 操作符和 Date 构造函数创建一个日期对象。 另外还有一些操作日期的函数，例：]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>js</tag>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JavaScript 学习笔记 (二)——变量、作用域、函数和内存]]></title>
    <url>%2F2017%2F09%2F29%2Fjavascript-learning-2%2F</url>
    <content type="text"><![CDATA[1、Javascript 中变量可能包含两种不同数据类型的值：基本类型的值和引用类型的值。 对于引用类型的值，可以为其添加属性和方法，也可以改变其属性和方法，例如： 但是，不能对基本类型的值添加属性，例如： 2、JavaScript 没有块级作用域。对于有块级作用域的语言，例如 C、C++、Java 中，新声明的变量只存在与当前块级作用域中，块级语句执行完毕后变量即会销毁。例如 (Java)： 运行结果报错，显示 i 未定义： 而在 JavaScript 中，没有块级作用域，变量不会被立即销毁，例如 (JavaScript)： 3、JavaScript 函数的参数和大多数其他语言中的参数有所不同。JavaScript 函数不介意传递进来多少个参数，也不介意参数的数据类型。即使定义的参数只接受两个参数，在调用函数的时候也未必需要传递两个参数。可以选择传递一个、三个甚至不传递。 JavaScript 中的参数在内部使用一个数组来定义，函数接收的始终是一个数组。在函数体内通过 arguments 对象访问参数数组，例如： 4、JavaScript 最常用的垃圾收集方式为标记清除，通过对变量的标记进行判断，并对其采取相应的策略。 为确保暂用较少的内存可以使得页面获得更好的性能，通常需要对变量进行解除引用，即将其值设置为 null。]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>js</tag>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JavaScript 学习笔记 (一)——值、类型和运算符]]></title>
    <url>%2F2017%2F09%2F28%2Fjavascript-learning-1%2F</url>
    <content type="text"><![CDATA[1、JavaScript 中包含 6 中基本的值类型：数字 (number)、字符串 (String)、布尔值 (boolean)、对象 (object)、函数 (function) 和未定义类型 (undefined)。 使用 typeof 操作符返回数据类型。 2、JavaScript 中有三个特殊的值，他们虽然是数字，但是和一般的数字看起来不太一样。它们分别为 Infinity、-Infinity 和 NaN。NaN 虽然是数字类型的值，但是用其表示 “非数值”。 例: 1/0-----&gt;Infinity;-1/0-------&gt;-Infinity; 字符串除一个数字得到 NaN。 3、在 JavaScript 中，不是所有的值都等于它本身，只有一个值不等于其自身，那就是 NaN。NaN == NaN —-&gt; false 4、当运算符作用在错误的类型的值上时，JavaScript 会自动将其转换成自己期望的类型。例如 8*null -----&gt; 0，&quot;5&quot; - 1 -----&gt; 4，“5”+ 1-----&gt;51。 5、如果不希望在比较的时候进行自动的类型转换，可以使用 === 或者！==。 6、逻辑运算符的短路特性。先对左侧值进行判断，若满足，则忽略右侧，即不计算右侧表达式。例：true || X，直接返回 true，不会计算 x，false &amp;&amp; X 也是同样道理。下图例子中可以看到 x 的值始终为 1，没有改变。]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>js</tag>
        <tag>学习笔记</tag>
      </tags>
  </entry>
</search>
